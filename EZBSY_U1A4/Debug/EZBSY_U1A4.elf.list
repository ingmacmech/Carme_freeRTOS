
EZBSY_U1A4.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004f48  08000188  08000188  00010188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .ARM          00000008  080050d0  080050d0  000150d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .init_array   00000004  080050d8  080050d8  000150d8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .fini_array   00000004  080050dc  080050dc  000150dc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .data         00000f98  20000000  080050e0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .ccmram       00000000  10000000  10000000  00020f98  2**0
                  CONTENTS
  7 .bss          00012df0  20000f98  20000f98  00020f98  2**2
                  ALLOC
  8 ._user_heap_stack 00002000  20013d88  20013d88  00020f98  2**0
                  ALLOC
  9 .ARM.attributes 0000002c  00000000  00000000  00020f98  2**0
                  CONTENTS, READONLY
 10 .debug_info   0000d71f  00000000  00000000  00020fc4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 0000285e  00000000  00000000  0002e6e3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_aranges 00000f18  00000000  00000000  00030f48  2**3
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000d78  00000000  00000000  00031e60  2**3
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   0000546b  00000000  00000000  00032bd8  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    00005921  00000000  00000000  00038043  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .comment      000000ab  00000000  00000000  0003d964  2**0
                  CONTENTS, READONLY
 17 .debug_frame  00003068  00000000  00000000  0003da10  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	; (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	; (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	; (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000f98 	.word	0x20000f98
 80001a4:	00000000 	.word	0x00000000
 80001a8:	080050b8 	.word	0x080050b8

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	; (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	; (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	; (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000f9c 	.word	0x20000f9c
 80001c4:	080050b8 	.word	0x080050b8

080001c8 <__aeabi_uldivmod>:
 80001c8:	b953      	cbnz	r3, 80001e0 <__aeabi_uldivmod+0x18>
 80001ca:	b94a      	cbnz	r2, 80001e0 <__aeabi_uldivmod+0x18>
 80001cc:	2900      	cmp	r1, #0
 80001ce:	bf08      	it	eq
 80001d0:	2800      	cmpeq	r0, #0
 80001d2:	bf1c      	itt	ne
 80001d4:	f04f 31ff 	movne.w	r1, #4294967295
 80001d8:	f04f 30ff 	movne.w	r0, #4294967295
 80001dc:	f000 b97e 	b.w	80004dc <__aeabi_idiv0>
 80001e0:	f1ad 0c08 	sub.w	ip, sp, #8
 80001e4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80001e8:	f000 f806 	bl	80001f8 <__udivmoddi4>
 80001ec:	f8dd e004 	ldr.w	lr, [sp, #4]
 80001f0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80001f4:	b004      	add	sp, #16
 80001f6:	4770      	bx	lr

080001f8 <__udivmoddi4>:
 80001f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80001fc:	468c      	mov	ip, r1
 80001fe:	460e      	mov	r6, r1
 8000200:	4604      	mov	r4, r0
 8000202:	9d08      	ldr	r5, [sp, #32]
 8000204:	2b00      	cmp	r3, #0
 8000206:	d150      	bne.n	80002aa <__udivmoddi4+0xb2>
 8000208:	428a      	cmp	r2, r1
 800020a:	4617      	mov	r7, r2
 800020c:	d96c      	bls.n	80002e8 <__udivmoddi4+0xf0>
 800020e:	fab2 fe82 	clz	lr, r2
 8000212:	f1be 0f00 	cmp.w	lr, #0
 8000216:	d00b      	beq.n	8000230 <__udivmoddi4+0x38>
 8000218:	f1ce 0420 	rsb	r4, lr, #32
 800021c:	fa20 f404 	lsr.w	r4, r0, r4
 8000220:	fa01 f60e 	lsl.w	r6, r1, lr
 8000224:	ea44 0c06 	orr.w	ip, r4, r6
 8000228:	fa02 f70e 	lsl.w	r7, r2, lr
 800022c:	fa00 f40e 	lsl.w	r4, r0, lr
 8000230:	ea4f 4917 	mov.w	r9, r7, lsr #16
 8000234:	0c22      	lsrs	r2, r4, #16
 8000236:	fbbc f0f9 	udiv	r0, ip, r9
 800023a:	fa1f f887 	uxth.w	r8, r7
 800023e:	fb09 c610 	mls	r6, r9, r0, ip
 8000242:	ea42 4606 	orr.w	r6, r2, r6, lsl #16
 8000246:	fb00 f308 	mul.w	r3, r0, r8
 800024a:	42b3      	cmp	r3, r6
 800024c:	d909      	bls.n	8000262 <__udivmoddi4+0x6a>
 800024e:	19f6      	adds	r6, r6, r7
 8000250:	f100 32ff 	add.w	r2, r0, #4294967295
 8000254:	f080 8122 	bcs.w	800049c <__udivmoddi4+0x2a4>
 8000258:	42b3      	cmp	r3, r6
 800025a:	f240 811f 	bls.w	800049c <__udivmoddi4+0x2a4>
 800025e:	3802      	subs	r0, #2
 8000260:	443e      	add	r6, r7
 8000262:	1af6      	subs	r6, r6, r3
 8000264:	b2a2      	uxth	r2, r4
 8000266:	fbb6 f3f9 	udiv	r3, r6, r9
 800026a:	fb09 6613 	mls	r6, r9, r3, r6
 800026e:	ea42 4406 	orr.w	r4, r2, r6, lsl #16
 8000272:	fb03 f808 	mul.w	r8, r3, r8
 8000276:	45a0      	cmp	r8, r4
 8000278:	d909      	bls.n	800028e <__udivmoddi4+0x96>
 800027a:	19e4      	adds	r4, r4, r7
 800027c:	f103 32ff 	add.w	r2, r3, #4294967295
 8000280:	f080 810a 	bcs.w	8000498 <__udivmoddi4+0x2a0>
 8000284:	45a0      	cmp	r8, r4
 8000286:	f240 8107 	bls.w	8000498 <__udivmoddi4+0x2a0>
 800028a:	3b02      	subs	r3, #2
 800028c:	443c      	add	r4, r7
 800028e:	ebc8 0404 	rsb	r4, r8, r4
 8000292:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000296:	2100      	movs	r1, #0
 8000298:	2d00      	cmp	r5, #0
 800029a:	d062      	beq.n	8000362 <__udivmoddi4+0x16a>
 800029c:	fa24 f40e 	lsr.w	r4, r4, lr
 80002a0:	2300      	movs	r3, #0
 80002a2:	602c      	str	r4, [r5, #0]
 80002a4:	606b      	str	r3, [r5, #4]
 80002a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80002aa:	428b      	cmp	r3, r1
 80002ac:	d907      	bls.n	80002be <__udivmoddi4+0xc6>
 80002ae:	2d00      	cmp	r5, #0
 80002b0:	d055      	beq.n	800035e <__udivmoddi4+0x166>
 80002b2:	2100      	movs	r1, #0
 80002b4:	e885 0041 	stmia.w	r5, {r0, r6}
 80002b8:	4608      	mov	r0, r1
 80002ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80002be:	fab3 f183 	clz	r1, r3
 80002c2:	2900      	cmp	r1, #0
 80002c4:	f040 8090 	bne.w	80003e8 <__udivmoddi4+0x1f0>
 80002c8:	42b3      	cmp	r3, r6
 80002ca:	d302      	bcc.n	80002d2 <__udivmoddi4+0xda>
 80002cc:	4282      	cmp	r2, r0
 80002ce:	f200 80f8 	bhi.w	80004c2 <__udivmoddi4+0x2ca>
 80002d2:	1a84      	subs	r4, r0, r2
 80002d4:	eb66 0603 	sbc.w	r6, r6, r3
 80002d8:	2001      	movs	r0, #1
 80002da:	46b4      	mov	ip, r6
 80002dc:	2d00      	cmp	r5, #0
 80002de:	d040      	beq.n	8000362 <__udivmoddi4+0x16a>
 80002e0:	e885 1010 	stmia.w	r5, {r4, ip}
 80002e4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80002e8:	b912      	cbnz	r2, 80002f0 <__udivmoddi4+0xf8>
 80002ea:	2701      	movs	r7, #1
 80002ec:	fbb7 f7f2 	udiv	r7, r7, r2
 80002f0:	fab7 fe87 	clz	lr, r7
 80002f4:	f1be 0f00 	cmp.w	lr, #0
 80002f8:	d135      	bne.n	8000366 <__udivmoddi4+0x16e>
 80002fa:	1bf3      	subs	r3, r6, r7
 80002fc:	ea4f 4817 	mov.w	r8, r7, lsr #16
 8000300:	fa1f fc87 	uxth.w	ip, r7
 8000304:	2101      	movs	r1, #1
 8000306:	fbb3 f0f8 	udiv	r0, r3, r8
 800030a:	0c22      	lsrs	r2, r4, #16
 800030c:	fb08 3610 	mls	r6, r8, r0, r3
 8000310:	ea42 4606 	orr.w	r6, r2, r6, lsl #16
 8000314:	fb0c f300 	mul.w	r3, ip, r0
 8000318:	42b3      	cmp	r3, r6
 800031a:	d907      	bls.n	800032c <__udivmoddi4+0x134>
 800031c:	19f6      	adds	r6, r6, r7
 800031e:	f100 32ff 	add.w	r2, r0, #4294967295
 8000322:	d202      	bcs.n	800032a <__udivmoddi4+0x132>
 8000324:	42b3      	cmp	r3, r6
 8000326:	f200 80ce 	bhi.w	80004c6 <__udivmoddi4+0x2ce>
 800032a:	4610      	mov	r0, r2
 800032c:	1af6      	subs	r6, r6, r3
 800032e:	b2a2      	uxth	r2, r4
 8000330:	fbb6 f3f8 	udiv	r3, r6, r8
 8000334:	fb08 6613 	mls	r6, r8, r3, r6
 8000338:	ea42 4406 	orr.w	r4, r2, r6, lsl #16
 800033c:	fb0c fc03 	mul.w	ip, ip, r3
 8000340:	45a4      	cmp	ip, r4
 8000342:	d907      	bls.n	8000354 <__udivmoddi4+0x15c>
 8000344:	19e4      	adds	r4, r4, r7
 8000346:	f103 32ff 	add.w	r2, r3, #4294967295
 800034a:	d202      	bcs.n	8000352 <__udivmoddi4+0x15a>
 800034c:	45a4      	cmp	ip, r4
 800034e:	f200 80b5 	bhi.w	80004bc <__udivmoddi4+0x2c4>
 8000352:	4613      	mov	r3, r2
 8000354:	ebcc 0404 	rsb	r4, ip, r4
 8000358:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 800035c:	e79c      	b.n	8000298 <__udivmoddi4+0xa0>
 800035e:	4629      	mov	r1, r5
 8000360:	4628      	mov	r0, r5
 8000362:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000366:	f1ce 0120 	rsb	r1, lr, #32
 800036a:	fa06 f30e 	lsl.w	r3, r6, lr
 800036e:	fa07 f70e 	lsl.w	r7, r7, lr
 8000372:	fa20 f901 	lsr.w	r9, r0, r1
 8000376:	ea4f 4817 	mov.w	r8, r7, lsr #16
 800037a:	40ce      	lsrs	r6, r1
 800037c:	ea49 0903 	orr.w	r9, r9, r3
 8000380:	fbb6 faf8 	udiv	sl, r6, r8
 8000384:	ea4f 4419 	mov.w	r4, r9, lsr #16
 8000388:	fb08 661a 	mls	r6, r8, sl, r6
 800038c:	fa1f fc87 	uxth.w	ip, r7
 8000390:	ea44 4306 	orr.w	r3, r4, r6, lsl #16
 8000394:	fb0a f20c 	mul.w	r2, sl, ip
 8000398:	429a      	cmp	r2, r3
 800039a:	fa00 f40e 	lsl.w	r4, r0, lr
 800039e:	d90a      	bls.n	80003b6 <__udivmoddi4+0x1be>
 80003a0:	19db      	adds	r3, r3, r7
 80003a2:	f10a 31ff 	add.w	r1, sl, #4294967295
 80003a6:	f080 8087 	bcs.w	80004b8 <__udivmoddi4+0x2c0>
 80003aa:	429a      	cmp	r2, r3
 80003ac:	f240 8084 	bls.w	80004b8 <__udivmoddi4+0x2c0>
 80003b0:	f1aa 0a02 	sub.w	sl, sl, #2
 80003b4:	443b      	add	r3, r7
 80003b6:	1a9b      	subs	r3, r3, r2
 80003b8:	fa1f f989 	uxth.w	r9, r9
 80003bc:	fbb3 f1f8 	udiv	r1, r3, r8
 80003c0:	fb08 3311 	mls	r3, r8, r1, r3
 80003c4:	ea49 4303 	orr.w	r3, r9, r3, lsl #16
 80003c8:	fb01 f60c 	mul.w	r6, r1, ip
 80003cc:	429e      	cmp	r6, r3
 80003ce:	d907      	bls.n	80003e0 <__udivmoddi4+0x1e8>
 80003d0:	19db      	adds	r3, r3, r7
 80003d2:	f101 32ff 	add.w	r2, r1, #4294967295
 80003d6:	d26b      	bcs.n	80004b0 <__udivmoddi4+0x2b8>
 80003d8:	429e      	cmp	r6, r3
 80003da:	d969      	bls.n	80004b0 <__udivmoddi4+0x2b8>
 80003dc:	3902      	subs	r1, #2
 80003de:	443b      	add	r3, r7
 80003e0:	1b9b      	subs	r3, r3, r6
 80003e2:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 80003e6:	e78e      	b.n	8000306 <__udivmoddi4+0x10e>
 80003e8:	f1c1 0e20 	rsb	lr, r1, #32
 80003ec:	fa22 f40e 	lsr.w	r4, r2, lr
 80003f0:	408b      	lsls	r3, r1
 80003f2:	4323      	orrs	r3, r4
 80003f4:	fa20 f70e 	lsr.w	r7, r0, lr
 80003f8:	fa06 f401 	lsl.w	r4, r6, r1
 80003fc:	ea4f 4c13 	mov.w	ip, r3, lsr #16
 8000400:	fa26 f60e 	lsr.w	r6, r6, lr
 8000404:	433c      	orrs	r4, r7
 8000406:	fbb6 f9fc 	udiv	r9, r6, ip
 800040a:	0c27      	lsrs	r7, r4, #16
 800040c:	fb0c 6619 	mls	r6, ip, r9, r6
 8000410:	fa1f f883 	uxth.w	r8, r3
 8000414:	ea47 4606 	orr.w	r6, r7, r6, lsl #16
 8000418:	fb09 f708 	mul.w	r7, r9, r8
 800041c:	42b7      	cmp	r7, r6
 800041e:	fa02 f201 	lsl.w	r2, r2, r1
 8000422:	fa00 fa01 	lsl.w	sl, r0, r1
 8000426:	d908      	bls.n	800043a <__udivmoddi4+0x242>
 8000428:	18f6      	adds	r6, r6, r3
 800042a:	f109 30ff 	add.w	r0, r9, #4294967295
 800042e:	d241      	bcs.n	80004b4 <__udivmoddi4+0x2bc>
 8000430:	42b7      	cmp	r7, r6
 8000432:	d93f      	bls.n	80004b4 <__udivmoddi4+0x2bc>
 8000434:	f1a9 0902 	sub.w	r9, r9, #2
 8000438:	441e      	add	r6, r3
 800043a:	1bf6      	subs	r6, r6, r7
 800043c:	b2a0      	uxth	r0, r4
 800043e:	fbb6 f4fc 	udiv	r4, r6, ip
 8000442:	fb0c 6614 	mls	r6, ip, r4, r6
 8000446:	ea40 4706 	orr.w	r7, r0, r6, lsl #16
 800044a:	fb04 f808 	mul.w	r8, r4, r8
 800044e:	45b8      	cmp	r8, r7
 8000450:	d907      	bls.n	8000462 <__udivmoddi4+0x26a>
 8000452:	18ff      	adds	r7, r7, r3
 8000454:	f104 30ff 	add.w	r0, r4, #4294967295
 8000458:	d228      	bcs.n	80004ac <__udivmoddi4+0x2b4>
 800045a:	45b8      	cmp	r8, r7
 800045c:	d926      	bls.n	80004ac <__udivmoddi4+0x2b4>
 800045e:	3c02      	subs	r4, #2
 8000460:	441f      	add	r7, r3
 8000462:	ea44 4009 	orr.w	r0, r4, r9, lsl #16
 8000466:	ebc8 0707 	rsb	r7, r8, r7
 800046a:	fba0 8902 	umull	r8, r9, r0, r2
 800046e:	454f      	cmp	r7, r9
 8000470:	4644      	mov	r4, r8
 8000472:	464e      	mov	r6, r9
 8000474:	d314      	bcc.n	80004a0 <__udivmoddi4+0x2a8>
 8000476:	d029      	beq.n	80004cc <__udivmoddi4+0x2d4>
 8000478:	b365      	cbz	r5, 80004d4 <__udivmoddi4+0x2dc>
 800047a:	ebba 0304 	subs.w	r3, sl, r4
 800047e:	eb67 0706 	sbc.w	r7, r7, r6
 8000482:	fa07 fe0e 	lsl.w	lr, r7, lr
 8000486:	40cb      	lsrs	r3, r1
 8000488:	40cf      	lsrs	r7, r1
 800048a:	ea4e 0303 	orr.w	r3, lr, r3
 800048e:	e885 0088 	stmia.w	r5, {r3, r7}
 8000492:	2100      	movs	r1, #0
 8000494:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000498:	4613      	mov	r3, r2
 800049a:	e6f8      	b.n	800028e <__udivmoddi4+0x96>
 800049c:	4610      	mov	r0, r2
 800049e:	e6e0      	b.n	8000262 <__udivmoddi4+0x6a>
 80004a0:	ebb8 0402 	subs.w	r4, r8, r2
 80004a4:	eb69 0603 	sbc.w	r6, r9, r3
 80004a8:	3801      	subs	r0, #1
 80004aa:	e7e5      	b.n	8000478 <__udivmoddi4+0x280>
 80004ac:	4604      	mov	r4, r0
 80004ae:	e7d8      	b.n	8000462 <__udivmoddi4+0x26a>
 80004b0:	4611      	mov	r1, r2
 80004b2:	e795      	b.n	80003e0 <__udivmoddi4+0x1e8>
 80004b4:	4681      	mov	r9, r0
 80004b6:	e7c0      	b.n	800043a <__udivmoddi4+0x242>
 80004b8:	468a      	mov	sl, r1
 80004ba:	e77c      	b.n	80003b6 <__udivmoddi4+0x1be>
 80004bc:	3b02      	subs	r3, #2
 80004be:	443c      	add	r4, r7
 80004c0:	e748      	b.n	8000354 <__udivmoddi4+0x15c>
 80004c2:	4608      	mov	r0, r1
 80004c4:	e70a      	b.n	80002dc <__udivmoddi4+0xe4>
 80004c6:	3802      	subs	r0, #2
 80004c8:	443e      	add	r6, r7
 80004ca:	e72f      	b.n	800032c <__udivmoddi4+0x134>
 80004cc:	45c2      	cmp	sl, r8
 80004ce:	d3e7      	bcc.n	80004a0 <__udivmoddi4+0x2a8>
 80004d0:	463e      	mov	r6, r7
 80004d2:	e7d1      	b.n	8000478 <__udivmoddi4+0x280>
 80004d4:	4629      	mov	r1, r5
 80004d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004da:	bf00      	nop

080004dc <__aeabi_idiv0>:
 80004dc:	4770      	bx	lr
 80004de:	bf00      	nop

080004e0 <ts_itoa>:
**  Abstract: Convert integer to ascii
**  Returns:  void
**---------------------------------------------------------------------------
*/
void ts_itoa(char **buf, unsigned int d, int base)
{
 80004e0:	b480      	push	{r7}
 80004e2:	b087      	sub	sp, #28
 80004e4:	af00      	add	r7, sp, #0
 80004e6:	60f8      	str	r0, [r7, #12]
 80004e8:	60b9      	str	r1, [r7, #8]
 80004ea:	607a      	str	r2, [r7, #4]
	int div = 1;
 80004ec:	2301      	movs	r3, #1
 80004ee:	617b      	str	r3, [r7, #20]
	while (d/div >= base)
 80004f0:	e004      	b.n	80004fc <ts_itoa+0x1c>
		div *= base;
 80004f2:	697b      	ldr	r3, [r7, #20]
 80004f4:	687a      	ldr	r2, [r7, #4]
 80004f6:	fb02 f303 	mul.w	r3, r2, r3
 80004fa:	617b      	str	r3, [r7, #20]
**---------------------------------------------------------------------------
*/
void ts_itoa(char **buf, unsigned int d, int base)
{
	int div = 1;
	while (d/div >= base)
 80004fc:	697b      	ldr	r3, [r7, #20]
 80004fe:	68ba      	ldr	r2, [r7, #8]
 8000500:	fbb2 f2f3 	udiv	r2, r2, r3
 8000504:	687b      	ldr	r3, [r7, #4]
 8000506:	429a      	cmp	r2, r3
 8000508:	d2f3      	bcs.n	80004f2 <ts_itoa+0x12>
		div *= base;

	while (div != 0)
 800050a:	e029      	b.n	8000560 <ts_itoa+0x80>
	{
		int num = d/div;
 800050c:	697b      	ldr	r3, [r7, #20]
 800050e:	68ba      	ldr	r2, [r7, #8]
 8000510:	fbb2 f3f3 	udiv	r3, r2, r3
 8000514:	613b      	str	r3, [r7, #16]
		d = d%div;
 8000516:	697a      	ldr	r2, [r7, #20]
 8000518:	68bb      	ldr	r3, [r7, #8]
 800051a:	fbb3 f1f2 	udiv	r1, r3, r2
 800051e:	fb02 f201 	mul.w	r2, r2, r1
 8000522:	1a9b      	subs	r3, r3, r2
 8000524:	60bb      	str	r3, [r7, #8]
		div /= base;
 8000526:	697a      	ldr	r2, [r7, #20]
 8000528:	687b      	ldr	r3, [r7, #4]
 800052a:	fb92 f3f3 	sdiv	r3, r2, r3
 800052e:	617b      	str	r3, [r7, #20]
		if (num > 9)
 8000530:	693b      	ldr	r3, [r7, #16]
 8000532:	2b09      	cmp	r3, #9
 8000534:	dd0a      	ble.n	800054c <ts_itoa+0x6c>
			*((*buf)++) = (num-10) + 'A';
 8000536:	68fb      	ldr	r3, [r7, #12]
 8000538:	681b      	ldr	r3, [r3, #0]
 800053a:	1c59      	adds	r1, r3, #1
 800053c:	68fa      	ldr	r2, [r7, #12]
 800053e:	6011      	str	r1, [r2, #0]
 8000540:	693a      	ldr	r2, [r7, #16]
 8000542:	b2d2      	uxtb	r2, r2
 8000544:	3237      	adds	r2, #55	; 0x37
 8000546:	b2d2      	uxtb	r2, r2
 8000548:	701a      	strb	r2, [r3, #0]
 800054a:	e009      	b.n	8000560 <ts_itoa+0x80>
		else
			*((*buf)++) = num + '0';
 800054c:	68fb      	ldr	r3, [r7, #12]
 800054e:	681b      	ldr	r3, [r3, #0]
 8000550:	1c59      	adds	r1, r3, #1
 8000552:	68fa      	ldr	r2, [r7, #12]
 8000554:	6011      	str	r1, [r2, #0]
 8000556:	693a      	ldr	r2, [r7, #16]
 8000558:	b2d2      	uxtb	r2, r2
 800055a:	3230      	adds	r2, #48	; 0x30
 800055c:	b2d2      	uxtb	r2, r2
 800055e:	701a      	strb	r2, [r3, #0]
{
	int div = 1;
	while (d/div >= base)
		div *= base;

	while (div != 0)
 8000560:	697b      	ldr	r3, [r7, #20]
 8000562:	2b00      	cmp	r3, #0
 8000564:	d1d2      	bne.n	800050c <ts_itoa+0x2c>
		if (num > 9)
			*((*buf)++) = (num-10) + 'A';
		else
			*((*buf)++) = num + '0';
	}
}
 8000566:	bf00      	nop
 8000568:	371c      	adds	r7, #28
 800056a:	46bd      	mov	sp, r7
 800056c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000570:	4770      	bx	lr
 8000572:	bf00      	nop

08000574 <ts_formatstring>:
**  Abstract: Writes arguments va to buffer buf according to format fmt
**  Returns:  Length of string
**---------------------------------------------------------------------------
*/
int ts_formatstring(char *buf, const char *fmt, va_list va)
{
 8000574:	b580      	push	{r7, lr}
 8000576:	b088      	sub	sp, #32
 8000578:	af00      	add	r7, sp, #0
 800057a:	60f8      	str	r0, [r7, #12]
 800057c:	60b9      	str	r1, [r7, #8]
 800057e:	607a      	str	r2, [r7, #4]
	char *start_buf = buf;
 8000580:	68fb      	ldr	r3, [r7, #12]
 8000582:	617b      	str	r3, [r7, #20]
	while(*fmt)
 8000584:	e07d      	b.n	8000682 <ts_formatstring+0x10e>
	{
		/* Character needs formating? */
		if (*fmt == '%')
 8000586:	68bb      	ldr	r3, [r7, #8]
 8000588:	781b      	ldrb	r3, [r3, #0]
 800058a:	2b25      	cmp	r3, #37	; 0x25
 800058c:	d171      	bne.n	8000672 <ts_formatstring+0xfe>
		{
			switch (*(++fmt))
 800058e:	68bb      	ldr	r3, [r7, #8]
 8000590:	3301      	adds	r3, #1
 8000592:	60bb      	str	r3, [r7, #8]
 8000594:	68bb      	ldr	r3, [r7, #8]
 8000596:	781b      	ldrb	r3, [r3, #0]
 8000598:	2b64      	cmp	r3, #100	; 0x64
 800059a:	d01e      	beq.n	80005da <ts_formatstring+0x66>
 800059c:	2b64      	cmp	r3, #100	; 0x64
 800059e:	dc06      	bgt.n	80005ae <ts_formatstring+0x3a>
 80005a0:	2b58      	cmp	r3, #88	; 0x58
 80005a2:	d050      	beq.n	8000646 <ts_formatstring+0xd2>
 80005a4:	2b63      	cmp	r3, #99	; 0x63
 80005a6:	d00e      	beq.n	80005c6 <ts_formatstring+0x52>
 80005a8:	2b25      	cmp	r3, #37	; 0x25
 80005aa:	d058      	beq.n	800065e <ts_formatstring+0xea>
 80005ac:	e05d      	b.n	800066a <ts_formatstring+0xf6>
 80005ae:	2b73      	cmp	r3, #115	; 0x73
 80005b0:	d02b      	beq.n	800060a <ts_formatstring+0x96>
 80005b2:	2b73      	cmp	r3, #115	; 0x73
 80005b4:	dc02      	bgt.n	80005bc <ts_formatstring+0x48>
 80005b6:	2b69      	cmp	r3, #105	; 0x69
 80005b8:	d00f      	beq.n	80005da <ts_formatstring+0x66>
 80005ba:	e056      	b.n	800066a <ts_formatstring+0xf6>
 80005bc:	2b75      	cmp	r3, #117	; 0x75
 80005be:	d037      	beq.n	8000630 <ts_formatstring+0xbc>
 80005c0:	2b78      	cmp	r3, #120	; 0x78
 80005c2:	d040      	beq.n	8000646 <ts_formatstring+0xd2>
 80005c4:	e051      	b.n	800066a <ts_formatstring+0xf6>
			{
			  case 'c':
				*buf++ = va_arg(va, int);
 80005c6:	68fb      	ldr	r3, [r7, #12]
 80005c8:	1c5a      	adds	r2, r3, #1
 80005ca:	60fa      	str	r2, [r7, #12]
 80005cc:	687a      	ldr	r2, [r7, #4]
 80005ce:	1d11      	adds	r1, r2, #4
 80005d0:	6079      	str	r1, [r7, #4]
 80005d2:	6812      	ldr	r2, [r2, #0]
 80005d4:	b2d2      	uxtb	r2, r2
 80005d6:	701a      	strb	r2, [r3, #0]
				break;
 80005d8:	e047      	b.n	800066a <ts_formatstring+0xf6>
			  case 'd':
			  case 'i':
				{
					signed int val = va_arg(va, signed int);
 80005da:	687b      	ldr	r3, [r7, #4]
 80005dc:	1d1a      	adds	r2, r3, #4
 80005de:	607a      	str	r2, [r7, #4]
 80005e0:	681b      	ldr	r3, [r3, #0]
 80005e2:	61fb      	str	r3, [r7, #28]
					if (val < 0)
 80005e4:	69fb      	ldr	r3, [r7, #28]
 80005e6:	2b00      	cmp	r3, #0
 80005e8:	da07      	bge.n	80005fa <ts_formatstring+0x86>
					{
						val *= -1;
 80005ea:	69fb      	ldr	r3, [r7, #28]
 80005ec:	425b      	negs	r3, r3
 80005ee:	61fb      	str	r3, [r7, #28]
						*buf++ = '-';
 80005f0:	68fb      	ldr	r3, [r7, #12]
 80005f2:	1c5a      	adds	r2, r3, #1
 80005f4:	60fa      	str	r2, [r7, #12]
 80005f6:	222d      	movs	r2, #45	; 0x2d
 80005f8:	701a      	strb	r2, [r3, #0]
					}
					ts_itoa(&buf, val, 10);
 80005fa:	69f9      	ldr	r1, [r7, #28]
 80005fc:	f107 030c 	add.w	r3, r7, #12
 8000600:	220a      	movs	r2, #10
 8000602:	4618      	mov	r0, r3
 8000604:	f7ff ff6c 	bl	80004e0 <ts_itoa>
				}
				break;
 8000608:	e02f      	b.n	800066a <ts_formatstring+0xf6>
			  case 's':
				{
					char * arg = va_arg(va, char *);
 800060a:	687b      	ldr	r3, [r7, #4]
 800060c:	1d1a      	adds	r2, r3, #4
 800060e:	607a      	str	r2, [r7, #4]
 8000610:	681b      	ldr	r3, [r3, #0]
 8000612:	61bb      	str	r3, [r7, #24]
					while (*arg)
 8000614:	e007      	b.n	8000626 <ts_formatstring+0xb2>
					{
						*buf++ = *arg++;
 8000616:	68fb      	ldr	r3, [r7, #12]
 8000618:	1c5a      	adds	r2, r3, #1
 800061a:	60fa      	str	r2, [r7, #12]
 800061c:	69ba      	ldr	r2, [r7, #24]
 800061e:	1c51      	adds	r1, r2, #1
 8000620:	61b9      	str	r1, [r7, #24]
 8000622:	7812      	ldrb	r2, [r2, #0]
 8000624:	701a      	strb	r2, [r3, #0]
				}
				break;
			  case 's':
				{
					char * arg = va_arg(va, char *);
					while (*arg)
 8000626:	69bb      	ldr	r3, [r7, #24]
 8000628:	781b      	ldrb	r3, [r3, #0]
 800062a:	2b00      	cmp	r3, #0
 800062c:	d1f3      	bne.n	8000616 <ts_formatstring+0xa2>
					{
						*buf++ = *arg++;
					}
				}
				break;
 800062e:	e01c      	b.n	800066a <ts_formatstring+0xf6>
			  case 'u':
					ts_itoa(&buf, va_arg(va, unsigned int), 10);
 8000630:	687b      	ldr	r3, [r7, #4]
 8000632:	1d1a      	adds	r2, r3, #4
 8000634:	607a      	str	r2, [r7, #4]
 8000636:	6819      	ldr	r1, [r3, #0]
 8000638:	f107 030c 	add.w	r3, r7, #12
 800063c:	220a      	movs	r2, #10
 800063e:	4618      	mov	r0, r3
 8000640:	f7ff ff4e 	bl	80004e0 <ts_itoa>
				break;
 8000644:	e011      	b.n	800066a <ts_formatstring+0xf6>
			  case 'x':
			  case 'X':
					ts_itoa(&buf, va_arg(va, int), 16);
 8000646:	687b      	ldr	r3, [r7, #4]
 8000648:	1d1a      	adds	r2, r3, #4
 800064a:	607a      	str	r2, [r7, #4]
 800064c:	681b      	ldr	r3, [r3, #0]
 800064e:	4619      	mov	r1, r3
 8000650:	f107 030c 	add.w	r3, r7, #12
 8000654:	2210      	movs	r2, #16
 8000656:	4618      	mov	r0, r3
 8000658:	f7ff ff42 	bl	80004e0 <ts_itoa>
				break;
 800065c:	e005      	b.n	800066a <ts_formatstring+0xf6>
			  case '%':
				  *buf++ = '%';
 800065e:	68fb      	ldr	r3, [r7, #12]
 8000660:	1c5a      	adds	r2, r3, #1
 8000662:	60fa      	str	r2, [r7, #12]
 8000664:	2225      	movs	r2, #37	; 0x25
 8000666:	701a      	strb	r2, [r3, #0]
				  break;
 8000668:	bf00      	nop
			}
			fmt++;
 800066a:	68bb      	ldr	r3, [r7, #8]
 800066c:	3301      	adds	r3, #1
 800066e:	60bb      	str	r3, [r7, #8]
 8000670:	e007      	b.n	8000682 <ts_formatstring+0x10e>
		}
		/* Else just copy */
		else
		{
			*buf++ = *fmt++;
 8000672:	68fb      	ldr	r3, [r7, #12]
 8000674:	1c5a      	adds	r2, r3, #1
 8000676:	60fa      	str	r2, [r7, #12]
 8000678:	68ba      	ldr	r2, [r7, #8]
 800067a:	1c51      	adds	r1, r2, #1
 800067c:	60b9      	str	r1, [r7, #8]
 800067e:	7812      	ldrb	r2, [r2, #0]
 8000680:	701a      	strb	r2, [r3, #0]
**---------------------------------------------------------------------------
*/
int ts_formatstring(char *buf, const char *fmt, va_list va)
{
	char *start_buf = buf;
	while(*fmt)
 8000682:	68bb      	ldr	r3, [r7, #8]
 8000684:	781b      	ldrb	r3, [r3, #0]
 8000686:	2b00      	cmp	r3, #0
 8000688:	f47f af7d 	bne.w	8000586 <ts_formatstring+0x12>
		else
		{
			*buf++ = *fmt++;
		}
	}
	*buf = 0;
 800068c:	68fb      	ldr	r3, [r7, #12]
 800068e:	2200      	movs	r2, #0
 8000690:	701a      	strb	r2, [r3, #0]

	return (int)(buf - start_buf);
 8000692:	68fb      	ldr	r3, [r7, #12]
 8000694:	461a      	mov	r2, r3
 8000696:	697b      	ldr	r3, [r7, #20]
 8000698:	1ad3      	subs	r3, r2, r3
}
 800069a:	4618      	mov	r0, r3
 800069c:	3720      	adds	r7, #32
 800069e:	46bd      	mov	sp, r7
 80006a0:	bd80      	pop	{r7, pc}
 80006a2:	bf00      	nop

080006a4 <siprintf>:
**            given character string according to the format parameter.
**  Returns:  Number of bytes written
**===========================================================================
*/
int siprintf(char *buf, const char *fmt, ...)
{
 80006a4:	b40e      	push	{r1, r2, r3}
 80006a6:	b580      	push	{r7, lr}
 80006a8:	b085      	sub	sp, #20
 80006aa:	af00      	add	r7, sp, #0
 80006ac:	6078      	str	r0, [r7, #4]
	int length;
	va_list va;
	va_start(va, fmt);
 80006ae:	f107 0320 	add.w	r3, r7, #32
 80006b2:	60bb      	str	r3, [r7, #8]
	length = ts_formatstring(buf, fmt, va);
 80006b4:	68ba      	ldr	r2, [r7, #8]
 80006b6:	69f9      	ldr	r1, [r7, #28]
 80006b8:	6878      	ldr	r0, [r7, #4]
 80006ba:	f7ff ff5b 	bl	8000574 <ts_formatstring>
 80006be:	60f8      	str	r0, [r7, #12]
	va_end(va);
	return length;
 80006c0:	68fb      	ldr	r3, [r7, #12]
}
 80006c2:	4618      	mov	r0, r3
 80006c4:	3714      	adds	r7, #20
 80006c6:	46bd      	mov	sp, r7
 80006c8:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80006cc:	b003      	add	sp, #12
 80006ce:	4770      	bx	lr

080006d0 <NMI_Handler>:
 * @brief		This function handles NMI exception.
 *
 * @return		None
 *****************************************************************************
 */
void NMI_Handler(void) {
 80006d0:	b480      	push	{r7}
 80006d2:	af00      	add	r7, sp, #0
}
 80006d4:	bf00      	nop
 80006d6:	46bd      	mov	sp, r7
 80006d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006dc:	4770      	bx	lr
 80006de:	bf00      	nop

080006e0 <HardFault_Handler>:
 * @brief		This function handles Hard Fault exception.
 *
 * @return		None
 *****************************************************************************
 */
void HardFault_Handler(void) {
 80006e0:	b580      	push	{r7, lr}
 80006e2:	af00      	add	r7, sp, #0
	/* Go to infinite loop when Hard Fault exception occurs */
	Default_Handler();
 80006e4:	f000 f856 	bl	8000794 <ADC_IRQHandler>
}
 80006e8:	bf00      	nop
 80006ea:	bd80      	pop	{r7, pc}

080006ec <MemManage_Handler>:
 * @brief		This function handles Memory Manage exception.
 *
 * @return		None
 *****************************************************************************
 */
void MemManage_Handler(void) {
 80006ec:	b480      	push	{r7}
 80006ee:	af00      	add	r7, sp, #0
	/* Go to infinite loop when Memory Manage exception occurs */
	while (1) {
	}
 80006f0:	e7fe      	b.n	80006f0 <MemManage_Handler+0x4>
 80006f2:	bf00      	nop

080006f4 <BusFault_Handler>:
 * @brief		This function handles Bus Fault exception.
 *
 * @return		None
 *****************************************************************************
 */
void BusFault_Handler(void) {
 80006f4:	b580      	push	{r7, lr}
 80006f6:	af00      	add	r7, sp, #0
	/* Go to infinite loop when Bus Fault exception occurs */
	Default_Handler();
 80006f8:	f000 f84c 	bl	8000794 <ADC_IRQHandler>
}
 80006fc:	bf00      	nop
 80006fe:	bd80      	pop	{r7, pc}

08000700 <UsageFault_Handler>:
 * @brief		This function handles Usage Fault exception.
 *
 * @return		None
 *****************************************************************************
 */
void UsageFault_Handler(void) {
 8000700:	b580      	push	{r7, lr}
 8000702:	af00      	add	r7, sp, #0
	/* Go to infinite loop when Usage Fault exception occurs */
	Default_Handler();
 8000704:	f000 f846 	bl	8000794 <ADC_IRQHandler>
}
 8000708:	bf00      	nop
 800070a:	bd80      	pop	{r7, pc}

0800070c <DebugMon_Handler>:
 * @brief		This function handles Debug Monitor exception.
 *
 * @return		None
 *****************************************************************************
 */
void DebugMon_Handler(void) {
 800070c:	b480      	push	{r7}
 800070e:	af00      	add	r7, sp, #0
}
 8000710:	bf00      	nop
 8000712:	46bd      	mov	sp, r7
 8000714:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000718:	4770      	bx	lr
 800071a:	bf00      	nop

0800071c <EXTI9_5_IRQHandler>:
 * @brief		This function handles the EXTI Lines 9:5.
 *
 * @return		None
 *****************************************************************************
 */
void EXTI9_5_IRQHandler(void) {
 800071c:	b580      	push	{r7, lr}
 800071e:	af00      	add	r7, sp, #0

	if (EXTI_GetITStatus(CARME_GPIO_TO_EXTILINE(GPIO_Pin_8)) != RESET) {
 8000720:	f44f 7080 	mov.w	r0, #256	; 0x100
 8000724:	f001 fa34 	bl	8001b90 <EXTI_GetITStatus>
 8000728:	4603      	mov	r3, r0
 800072a:	2b00      	cmp	r3, #0
 800072c:	d005      	beq.n	800073a <EXTI9_5_IRQHandler+0x1e>
		CARME_CAN_Interrupt_Handler();
 800072e:	f000 f963 	bl	80009f8 <CARME_CAN_Interrupt_Handler>
		EXTI_ClearITPendingBit(CARME_GPIO_TO_EXTILINE(GPIO_Pin_8));
 8000732:	f44f 7080 	mov.w	r0, #256	; 0x100
 8000736:	f001 fa45 	bl	8001bc4 <EXTI_ClearITPendingBit>
	}
}
 800073a:	bf00      	nop
 800073c:	bd80      	pop	{r7, pc}
 800073e:	bf00      	nop

08000740 <Reset_Handler>:
	.weak	Reset_Handler
	.type	Reset_Handler, %function

Reset_Handler:
	/* Copy the data segment initializers from flash to SRAM */
	MOVS	r1, #0
 8000740:	2100      	movs	r1, #0
	B		LoopCopyDataInit
 8000742:	e003      	b.n	800074c <LoopCopyDataInit>

08000744 <CopyDataInit>:

CopyDataInit:
	LDR		r3, =_sidata
 8000744:	4b0c      	ldr	r3, [pc, #48]	; (8000778 <ProgramFinish+0x2>)
	LDR		r3, [r3, r1]
 8000746:	585b      	ldr	r3, [r3, r1]
	STR		r3, [r0, r1]
 8000748:	5043      	str	r3, [r0, r1]
	ADDS	r1, r1, #4
 800074a:	3104      	adds	r1, #4

0800074c <LoopCopyDataInit>:

LoopCopyDataInit:
	LDR		r0, =_sdata
 800074c:	480b      	ldr	r0, [pc, #44]	; (800077c <ProgramFinish+0x6>)
	LDR		r3, =_edata
 800074e:	4b0c      	ldr	r3, [pc, #48]	; (8000780 <ProgramFinish+0xa>)
	ADDS	r2, r0, r1
 8000750:	1842      	adds	r2, r0, r1
	CMP		r2, r3
 8000752:	429a      	cmp	r2, r3
	BCC		CopyDataInit
 8000754:	d3f6      	bcc.n	8000744 <CopyDataInit>
	LDR		r2, =_sbss
 8000756:	4a0b      	ldr	r2, [pc, #44]	; (8000784 <ProgramFinish+0xe>)
	B		LoopFillZerobss
 8000758:	e002      	b.n	8000760 <LoopFillZerobss>

0800075a <FillZerobss>:

/* Zero fill the bss segment. */
FillZerobss:
	MOVS	r3, #0
 800075a:	2300      	movs	r3, #0
	STR		r3, [r2], #4
 800075c:	f842 3b04 	str.w	r3, [r2], #4

08000760 <LoopFillZerobss>:

LoopFillZerobss:
	LDR		r3, =_ebss
 8000760:	4b09      	ldr	r3, [pc, #36]	; (8000788 <ProgramFinish+0x12>)
	CMP		r2, r3
 8000762:	429a      	cmp	r2, r3
	BCC		FillZerobss
 8000764:	d3f9      	bcc.n	800075a <FillZerobss>

	BL		SystemInit			/* Call the clock system initialization		*/
 8000766:	f001 f88f 	bl	8001888 <SystemInit>
	BL		CARME_Init			/* Call the CARME-M4 board initialization	*/
 800076a:	f000 f9c1 	bl	8000af0 <CARME_Init>
	BL		__libc_init_array	/* Call static constructors					*/
 800076e:	f000 f905 	bl	800097c <__libc_init_array>
	BL		main				/* Call the application's entry point		*/
 8000772:	f000 f84b 	bl	800080c <main>

08000776 <ProgramFinish>:
ProgramFinish:
	B		ProgramFinish		/* while true do nothing					*/
 8000776:	e7fe      	b.n	8000776 <ProgramFinish>
	/* Copy the data segment initializers from flash to SRAM */
	MOVS	r1, #0
	B		LoopCopyDataInit

CopyDataInit:
	LDR		r3, =_sidata
 8000778:	080050e0 	.word	0x080050e0
	LDR		r3, [r3, r1]
	STR		r3, [r0, r1]
	ADDS	r1, r1, #4

LoopCopyDataInit:
	LDR		r0, =_sdata
 800077c:	20000000 	.word	0x20000000
	LDR		r3, =_edata
 8000780:	20000f98 	.word	0x20000f98
	ADDS	r2, r0, r1
	CMP		r2, r3
	BCC		CopyDataInit
	LDR		r2, =_sbss
 8000784:	20000f98 	.word	0x20000f98
FillZerobss:
	MOVS	r3, #0
	STR		r3, [r2], #4

LoopFillZerobss:
	LDR		r3, =_ebss
 8000788:	20013d88 	.word	0x20013d88

0800078c <dowait>:
 *				infinite loop, preserving the system state for examination
 *				by a debugger.
 */
.section	.text.Default_Handler, "ax", %progbits
dowait:
	LDR		r0, =0xA037A0
 800078c:	4819      	ldr	r0, [pc, #100]	; (80007f4 <Infinite_Loop+0x16>)

0800078e <dowaitloop>:
dowaitloop:
	SUBS	r0, #1
 800078e:	3801      	subs	r0, #1
	BNE		dowaitloop
 8000790:	d1fd      	bne.n	800078e <dowaitloop>
	BX		lr
 8000792:	4770      	bx	lr

08000794 <ADC_IRQHandler>:

Default_Handler:
	LDR		r1, =0x40023800		// RCC_BASE
 8000794:	4918      	ldr	r1, [pc, #96]	; (80007f8 <Infinite_Loop+0x1a>)
	LDR		r3, [r1, #0x30]		// RCC->AHB1ENR
 8000796:	6b0b      	ldr	r3, [r1, #48]	; 0x30
	LDR		r2, =0x100			// RCC_AHB1Periph_GPIOI
 8000798:	f44f 7280 	mov.w	r2, #256	; 0x100
	ORR		r3, r3, r2			// RCC->AHB1ENR |= RCC_AHB1Periph_GPIOI
 800079c:	ea43 0302 	orr.w	r3, r3, r2
	STR		r3, [r1, #0x30]
 80007a0:	630b      	str	r3, [r1, #48]	; 0x30
	LDR		r1, =0x40022000		// GPIOI_BASE
 80007a2:	4916      	ldr	r1, [pc, #88]	; (80007fc <Infinite_Loop+0x1e>)
	/* GPIO port mode register */
	LDR		r3, [r1, #0x00]		// GPIOI->MODER
 80007a4:	680b      	ldr	r3, [r1, #0]
	LDR		r2, =0x0000C000
 80007a6:	f44f 4240 	mov.w	r2, #49152	; 0xc000
	BIC		r3, r3, r2
 80007aa:	ea23 0302 	bic.w	r3, r3, r2
	LDR		r2, =0x00004000
 80007ae:	f44f 4280 	mov.w	r2, #16384	; 0x4000
	ORR		r3, r3, r2
 80007b2:	ea43 0302 	orr.w	r3, r3, r2
	STR		r3, [r1, #0x00]
 80007b6:	600b      	str	r3, [r1, #0]
	/* GPIO port output type register */
	LDR		r3, [r1, #0x04]		// GPIOI->OTYPER
 80007b8:	684b      	ldr	r3, [r1, #4]
	LDR		r2, =0x00000080
 80007ba:	2280      	movs	r2, #128	; 0x80
	BIC		r3, r3, r2
 80007bc:	ea23 0302 	bic.w	r3, r3, r2
	STR		r3, [r1, #0x04]
 80007c0:	604b      	str	r3, [r1, #4]
	/* GPIO port output speed register */
	LDR		r3, [r1, #0x08]		// GPIOI->OSPEEDR
 80007c2:	688b      	ldr	r3, [r1, #8]
	LDR		r2, =0x0000C000
 80007c4:	f44f 4240 	mov.w	r2, #49152	; 0xc000
	BIC		r3, r3, r2
 80007c8:	ea23 0302 	bic.w	r3, r3, r2
	STR		r3, [r1, #0x08]
 80007cc:	608b      	str	r3, [r1, #8]
	/* GPIO port pull-up/pull-down register */
	LDR		r3, [r1, #0x0C]		// GPIOI->PUPDR
 80007ce:	68cb      	ldr	r3, [r1, #12]
	LDR		r2, =0x0000C000
 80007d0:	f44f 4240 	mov.w	r2, #49152	; 0xc000
	BIC		r3, r3, r2
 80007d4:	ea23 0302 	bic.w	r3, r3, r2
	STR		r3, [r1, #0x0C]
 80007d8:	60cb      	str	r3, [r1, #12]
	/* GPIO port output data register */
	LDR		r3, [r1, #0x14]		// GPIOI->ODR
 80007da:	694b      	ldr	r3, [r1, #20]
	LDR		r2, =0x00000080
 80007dc:	2280      	movs	r2, #128	; 0x80

080007de <Infinite_Loop>:
Infinite_Loop:
	ORR		r3, r3, r2
 80007de:	ea43 0302 	orr.w	r3, r3, r2
	STR		r3, [r1, #0x14]		// Set LED
 80007e2:	614b      	str	r3, [r1, #20]
	BL		dowait
 80007e4:	f7ff ffd2 	bl	800078c <dowait>
	BIC		r3, r3, r2
 80007e8:	ea23 0302 	bic.w	r3, r3, r2
	STR		r3, [r1, #0x14]		// Reset LED
 80007ec:	614b      	str	r3, [r1, #20]
	BL		dowait
 80007ee:	f7ff ffcd 	bl	800078c <dowait>
	B		Infinite_Loop
 80007f2:	e7f4      	b.n	80007de <Infinite_Loop>
 *				infinite loop, preserving the system state for examination
 *				by a debugger.
 */
.section	.text.Default_Handler, "ax", %progbits
dowait:
	LDR		r0, =0xA037A0
 80007f4:	00a037a0 	.word	0x00a037a0
	SUBS	r0, #1
	BNE		dowaitloop
	BX		lr

Default_Handler:
	LDR		r1, =0x40023800		// RCC_BASE
 80007f8:	40023800 	.word	0x40023800
	LDR		r3, [r1, #0x30]		// RCC->AHB1ENR
	LDR		r2, =0x100			// RCC_AHB1Periph_GPIOI
	ORR		r3, r3, r2			// RCC->AHB1ENR |= RCC_AHB1Periph_GPIOI
	STR		r3, [r1, #0x30]
	LDR		r1, =0x40022000		// GPIOI_BASE
 80007fc:	40022000 	.word	0x40022000

08000800 <LCD_Init>:

/*----- Implementation -----------------------------------------------------*/
/**
 * @brief		Initialize the interface, controller and the display.
 */
static inline void LCD_Init(void) {
 8000800:	b580      	push	{r7, lr}
 8000802:	af00      	add	r7, sp, #0
	SSD1963_Init();
 8000804:	f000 feca 	bl	800159c <SSD1963_Init>
}
 8000808:	bf00      	nop
 800080a:	bd80      	pop	{r7, pc}

0800080c <main>:
/*----- Implementation -----------------------------------------------------*/
/**
 * @brief		main
 * @return		0 if success
 */
int main(void) {
 800080c:	b580      	push	{r7, lr}
 800080e:	b082      	sub	sp, #8
 8000810:	af02      	add	r7, sp, #8

	/* Ensure all priority bits are assigned as preemption priority bits. */
	NVIC_PriorityGroupConfig(NVIC_PriorityGroup_4);
 8000812:	f44f 7040 	mov.w	r0, #768	; 0x300
 8000816:	f001 f8e5 	bl	80019e4 <NVIC_PriorityGroupConfig>

	CARME_IO1_Init();
 800081a:	f000 fd19 	bl	8001250 <CARME_IO1_Init>
	CARME_IO2_Init();
 800081e:	f000 fdd1 	bl	80013c4 <CARME_IO2_Init>
	CARME_Init();
 8000822:	f000 f965 	bl	8000af0 <CARME_Init>
	CARME_IO1_LED_Set(0x01, 0xFF);
 8000826:	21ff      	movs	r1, #255	; 0xff
 8000828:	2001      	movs	r0, #1
 800082a:	f000 fd23 	bl	8001274 <CARME_IO1_LED_Set>

	LCD_Init();
 800082e:	f7ff ffe7 	bl	8000800 <LCD_Init>
	LCD_SetFont(&font_8x16B);
 8000832:	4818      	ldr	r0, [pc, #96]	; (8000894 <main+0x88>)
 8000834:	f001 ff10 	bl	8002658 <LCD_SetFont>
	LCD_DisplayStringCenterLine(Y_HEADERLINE, pcHello);
 8000838:	4b17      	ldr	r3, [pc, #92]	; (8000898 <main+0x8c>)
 800083a:	681b      	ldr	r3, [r3, #0]
 800083c:	4619      	mov	r1, r3
 800083e:	2001      	movs	r0, #1
 8000840:	f001 ff6c 	bl	800271c <LCD_DisplayStringCenterLine>
	LCD_SetFont(&font_8x13);
 8000844:	4815      	ldr	r0, [pc, #84]	; (800089c <main+0x90>)
 8000846:	f001 ff07 	bl	8002658 <LCD_SetFont>



	//xTaskCreate(GreenLEDtask, "Blinky", 200U, NULL, 4U, NULL);
	//xTaskCreate(Serialtask, "Serial", 1024U, NULL, 4U, NULL);
	xTaskCreate(GetSwitchStatus,
 800084a:	2300      	movs	r3, #0
 800084c:	9301      	str	r3, [sp, #4]
 800084e:	2301      	movs	r3, #1
 8000850:	9300      	str	r3, [sp, #0]
 8000852:	2300      	movs	r3, #0
 8000854:	f44f 7280 	mov.w	r2, #256	; 0x100
 8000858:	4911      	ldr	r1, [pc, #68]	; (80008a0 <main+0x94>)
 800085a:	4812      	ldr	r0, [pc, #72]	; (80008a4 <main+0x98>)
 800085c:	f001 ffae 	bl	80027bc <xTaskCreate>
				STACKSIZE_TASK_SWITCH,
				NULL,
				PRIORITY_TASK_SWITCH,
				NULL);

	xTaskCreate(GetButtonStatus,
 8000860:	2300      	movs	r3, #0
 8000862:	9301      	str	r3, [sp, #4]
 8000864:	2301      	movs	r3, #1
 8000866:	9300      	str	r3, [sp, #0]
 8000868:	2300      	movs	r3, #0
 800086a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800086e:	490e      	ldr	r1, [pc, #56]	; (80008a8 <main+0x9c>)
 8000870:	480e      	ldr	r0, [pc, #56]	; (80008ac <main+0xa0>)
 8000872:	f001 ffa3 	bl	80027bc <xTaskCreate>
				STACKSIZE_TASK_BUTTON,
				NULL,
				PRIORITY_TASK_SWITCH,
				NULL);

	xTaskCreate(ShowStatusLCD,
 8000876:	2300      	movs	r3, #0
 8000878:	9301      	str	r3, [sp, #4]
 800087a:	2302      	movs	r3, #2
 800087c:	9300      	str	r3, [sp, #0]
 800087e:	2300      	movs	r3, #0
 8000880:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8000884:	490a      	ldr	r1, [pc, #40]	; (80008b0 <main+0xa4>)
 8000886:	480b      	ldr	r0, [pc, #44]	; (80008b4 <main+0xa8>)
 8000888:	f001 ff98 	bl	80027bc <xTaskCreate>
				STACKSIZE_TASK_LCD,
				NULL,
				PRIORYTY_TASK_LCD,
				NULL);

	vTaskStartScheduler();
 800088c:	f002 f8fc 	bl	8002a88 <vTaskStartScheduler>
	for (;;) {
	}
 8000890:	e7fe      	b.n	8000890 <main+0x84>
 8000892:	bf00      	nop
 8000894:	20000f84 	.word	0x20000f84
 8000898:	20000000 	.word	0x20000000
 800089c:	2000098c 	.word	0x2000098c
 80008a0:	08004ea0 	.word	0x08004ea0
 80008a4:	080008b9 	.word	0x080008b9
 80008a8:	08004ea8 	.word	0x08004ea8
 80008ac:	080008d5 	.word	0x080008d5
 80008b0:	08004eb0 	.word	0x08004eb0
 80008b4:	080008f1 	.word	0x080008f1

080008b8 <GetSwitchStatus>:
/**
 * @brief		Read switches.
 * @param[in]	pvargs		Not used
 */
static void GetSwitchStatus(void *pvargs)
{
 80008b8:	b580      	push	{r7, lr}
 80008ba:	b082      	sub	sp, #8
 80008bc:	af00      	add	r7, sp, #0
 80008be:	6078      	str	r0, [r7, #4]
	for(;;)
	{
		CARME_IO1_SWITCH_Get(&u8SwitchState);
 80008c0:	4803      	ldr	r0, [pc, #12]	; (80008d0 <GetSwitchStatus+0x18>)
 80008c2:	f000 fd25 	bl	8001310 <CARME_IO1_SWITCH_Get>
		vTaskDelay(100U / portTICK_RATE_MS);
 80008c6:	2064      	movs	r0, #100	; 0x64
 80008c8:	f002 f8ac 	bl	8002a24 <vTaskDelay>
	}
 80008cc:	e7f8      	b.n	80008c0 <GetSwitchStatus+0x8>
 80008ce:	bf00      	nop
 80008d0:	20013d44 	.word	0x20013d44

080008d4 <GetButtonStatus>:
/**
 * @brief		Read buttons.
 * @param[in]	pvargs		Not used
 */
static void GetButtonStatus(void *pvargs)
{
 80008d4:	b580      	push	{r7, lr}
 80008d6:	b082      	sub	sp, #8
 80008d8:	af00      	add	r7, sp, #0
 80008da:	6078      	str	r0, [r7, #4]

	for(;;)
	{
		CARME_IO1_BUTTON_Get(&u8ButtonState);
 80008dc:	4803      	ldr	r0, [pc, #12]	; (80008ec <GetButtonStatus+0x18>)
 80008de:	f000 fd29 	bl	8001334 <CARME_IO1_BUTTON_Get>
		vTaskDelay(100U / portTICK_RATE_MS);
 80008e2:	2064      	movs	r0, #100	; 0x64
 80008e4:	f002 f89e 	bl	8002a24 <vTaskDelay>
	}
 80008e8:	e7f8      	b.n	80008dc <GetButtonStatus+0x8>
 80008ea:	bf00      	nop
 80008ec:	20013d45 	.word	0x20013d45

080008f0 <ShowStatusLCD>:
/**
 * @brief		Print button and switch status to LCD.
 * @param[in]	pvargs		Not used
 */
static void ShowStatusLCD(void *pvargs)
{
 80008f0:	b580      	push	{r7, lr}
 80008f2:	b092      	sub	sp, #72	; 0x48
 80008f4:	af00      	add	r7, sp, #0
 80008f6:	6078      	str	r0, [r7, #4]
	char cBuffer[64];

	for(;;)
	{
		sprintf(cBuffer, pcButtonsValueText, (int) u8ButtonState);
 80008f8:	4b1b      	ldr	r3, [pc, #108]	; (8000968 <ShowStatusLCD+0x78>)
 80008fa:	6819      	ldr	r1, [r3, #0]
 80008fc:	4b1b      	ldr	r3, [pc, #108]	; (800096c <ShowStatusLCD+0x7c>)
 80008fe:	781b      	ldrb	r3, [r3, #0]
 8000900:	461a      	mov	r2, r3
 8000902:	f107 0308 	add.w	r3, r7, #8
 8000906:	4618      	mov	r0, r3
 8000908:	f7ff fecc 	bl	80006a4 <siprintf>
		LCD_DisplayStringCenterLine(10,cBuffer);
 800090c:	f107 0308 	add.w	r3, r7, #8
 8000910:	4619      	mov	r1, r3
 8000912:	200a      	movs	r0, #10
 8000914:	f001 ff02 	bl	800271c <LCD_DisplayStringCenterLine>

		LCD_DisplayStringCenterLine(10, "              ");
 8000918:	4915      	ldr	r1, [pc, #84]	; (8000970 <ShowStatusLCD+0x80>)
 800091a:	200a      	movs	r0, #10
 800091c:	f001 fefe 	bl	800271c <LCD_DisplayStringCenterLine>
		LCD_DisplayStringCenterLine(10, cBuffer);
 8000920:	f107 0308 	add.w	r3, r7, #8
 8000924:	4619      	mov	r1, r3
 8000926:	200a      	movs	r0, #10
 8000928:	f001 fef8 	bl	800271c <LCD_DisplayStringCenterLine>

		sprintf(cBuffer, pcSwitchesValueText, (int) u8SwitchState);
 800092c:	4b11      	ldr	r3, [pc, #68]	; (8000974 <ShowStatusLCD+0x84>)
 800092e:	6819      	ldr	r1, [r3, #0]
 8000930:	4b11      	ldr	r3, [pc, #68]	; (8000978 <ShowStatusLCD+0x88>)
 8000932:	781b      	ldrb	r3, [r3, #0]
 8000934:	461a      	mov	r2, r3
 8000936:	f107 0308 	add.w	r3, r7, #8
 800093a:	4618      	mov	r0, r3
 800093c:	f7ff feb2 	bl	80006a4 <siprintf>
		LCD_DisplayStringCenterLine(11, cBuffer);
 8000940:	f107 0308 	add.w	r3, r7, #8
 8000944:	4619      	mov	r1, r3
 8000946:	200b      	movs	r0, #11
 8000948:	f001 fee8 	bl	800271c <LCD_DisplayStringCenterLine>

		LCD_DisplayStringCenterLine(11, "              ");
 800094c:	4908      	ldr	r1, [pc, #32]	; (8000970 <ShowStatusLCD+0x80>)
 800094e:	200b      	movs	r0, #11
 8000950:	f001 fee4 	bl	800271c <LCD_DisplayStringCenterLine>
		LCD_DisplayStringCenterLine(11, cBuffer);
 8000954:	f107 0308 	add.w	r3, r7, #8
 8000958:	4619      	mov	r1, r3
 800095a:	200b      	movs	r0, #11
 800095c:	f001 fede 	bl	800271c <LCD_DisplayStringCenterLine>


		vTaskDelay(100U / portTICK_RATE_MS);
 8000960:	2064      	movs	r0, #100	; 0x64
 8000962:	f002 f85f 	bl	8002a24 <vTaskDelay>
	}
 8000966:	e7c7      	b.n	80008f8 <ShowStatusLCD+0x8>
 8000968:	20000004 	.word	0x20000004
 800096c:	20013d45 	.word	0x20013d45
 8000970:	08004ee8 	.word	0x08004ee8
 8000974:	20000008 	.word	0x20000008
 8000978:	20013d44 	.word	0x20013d44

0800097c <__libc_init_array>:
 800097c:	b570      	push	{r4, r5, r6, lr}
 800097e:	4b0e      	ldr	r3, [pc, #56]	; (80009b8 <__libc_init_array+0x3c>)
 8000980:	4c0e      	ldr	r4, [pc, #56]	; (80009bc <__libc_init_array+0x40>)
 8000982:	1ae4      	subs	r4, r4, r3
 8000984:	10a4      	asrs	r4, r4, #2
 8000986:	2500      	movs	r5, #0
 8000988:	461e      	mov	r6, r3
 800098a:	42a5      	cmp	r5, r4
 800098c:	d004      	beq.n	8000998 <__libc_init_array+0x1c>
 800098e:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000992:	4798      	blx	r3
 8000994:	3501      	adds	r5, #1
 8000996:	e7f8      	b.n	800098a <__libc_init_array+0xe>
 8000998:	f004 fb8e 	bl	80050b8 <_init>
 800099c:	4c08      	ldr	r4, [pc, #32]	; (80009c0 <__libc_init_array+0x44>)
 800099e:	4b09      	ldr	r3, [pc, #36]	; (80009c4 <__libc_init_array+0x48>)
 80009a0:	1ae4      	subs	r4, r4, r3
 80009a2:	10a4      	asrs	r4, r4, #2
 80009a4:	2500      	movs	r5, #0
 80009a6:	461e      	mov	r6, r3
 80009a8:	42a5      	cmp	r5, r4
 80009aa:	d004      	beq.n	80009b6 <__libc_init_array+0x3a>
 80009ac:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80009b0:	4798      	blx	r3
 80009b2:	3501      	adds	r5, #1
 80009b4:	e7f8      	b.n	80009a8 <__libc_init_array+0x2c>
 80009b6:	bd70      	pop	{r4, r5, r6, pc}
 80009b8:	080050d8 	.word	0x080050d8
 80009bc:	080050d8 	.word	0x080050d8
 80009c0:	080050dc 	.word	0x080050dc
 80009c4:	080050d8 	.word	0x080050d8

080009c8 <CARME_CAN_Read_Register>:
 80009c8:	b480      	push	{r7}
 80009ca:	b083      	sub	sp, #12
 80009cc:	af00      	add	r7, sp, #0
 80009ce:	4603      	mov	r3, r0
 80009d0:	71fb      	strb	r3, [r7, #7]
 80009d2:	4b07      	ldr	r3, [pc, #28]	; (80009f0 <CARME_CAN_Read_Register+0x28>)
 80009d4:	681b      	ldr	r3, [r3, #0]
 80009d6:	79fa      	ldrb	r2, [r7, #7]
 80009d8:	701a      	strb	r2, [r3, #0]
 80009da:	4b06      	ldr	r3, [pc, #24]	; (80009f4 <CARME_CAN_Read_Register+0x2c>)
 80009dc:	681b      	ldr	r3, [r3, #0]
 80009de:	781b      	ldrb	r3, [r3, #0]
 80009e0:	b2db      	uxtb	r3, r3
 80009e2:	4618      	mov	r0, r3
 80009e4:	370c      	adds	r7, #12
 80009e6:	46bd      	mov	sp, r7
 80009e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009ec:	4770      	bx	lr
 80009ee:	bf00      	nop
 80009f0:	2000000c 	.word	0x2000000c
 80009f4:	20000010 	.word	0x20000010

080009f8 <CARME_CAN_Interrupt_Handler>:
 80009f8:	b580      	push	{r7, lr}
 80009fa:	b082      	sub	sp, #8
 80009fc:	af00      	add	r7, sp, #0
 80009fe:	2003      	movs	r0, #3
 8000a00:	f7ff ffe2 	bl	80009c8 <CARME_CAN_Read_Register>
 8000a04:	4603      	mov	r3, r0
 8000a06:	71fb      	strb	r3, [r7, #7]
 8000a08:	79fb      	ldrb	r3, [r7, #7]
 8000a0a:	f003 0301 	and.w	r3, r3, #1
 8000a0e:	2b00      	cmp	r3, #0
 8000a10:	d007      	beq.n	8000a22 <CARME_CAN_Interrupt_Handler+0x2a>
 8000a12:	4b36      	ldr	r3, [pc, #216]	; (8000aec <CARME_CAN_Interrupt_Handler+0xf4>)
 8000a14:	681b      	ldr	r3, [r3, #0]
 8000a16:	2b00      	cmp	r3, #0
 8000a18:	d05c      	beq.n	8000ad4 <CARME_CAN_Interrupt_Handler+0xdc>
 8000a1a:	4b34      	ldr	r3, [pc, #208]	; (8000aec <CARME_CAN_Interrupt_Handler+0xf4>)
 8000a1c:	681b      	ldr	r3, [r3, #0]
 8000a1e:	4798      	blx	r3
 8000a20:	e058      	b.n	8000ad4 <CARME_CAN_Interrupt_Handler+0xdc>
 8000a22:	79fb      	ldrb	r3, [r7, #7]
 8000a24:	f003 0302 	and.w	r3, r3, #2
 8000a28:	2b00      	cmp	r3, #0
 8000a2a:	d007      	beq.n	8000a3c <CARME_CAN_Interrupt_Handler+0x44>
 8000a2c:	4b2f      	ldr	r3, [pc, #188]	; (8000aec <CARME_CAN_Interrupt_Handler+0xf4>)
 8000a2e:	685b      	ldr	r3, [r3, #4]
 8000a30:	2b00      	cmp	r3, #0
 8000a32:	d04f      	beq.n	8000ad4 <CARME_CAN_Interrupt_Handler+0xdc>
 8000a34:	4b2d      	ldr	r3, [pc, #180]	; (8000aec <CARME_CAN_Interrupt_Handler+0xf4>)
 8000a36:	685b      	ldr	r3, [r3, #4]
 8000a38:	4798      	blx	r3
 8000a3a:	e04b      	b.n	8000ad4 <CARME_CAN_Interrupt_Handler+0xdc>
 8000a3c:	79fb      	ldrb	r3, [r7, #7]
 8000a3e:	f003 0304 	and.w	r3, r3, #4
 8000a42:	2b00      	cmp	r3, #0
 8000a44:	d007      	beq.n	8000a56 <CARME_CAN_Interrupt_Handler+0x5e>
 8000a46:	4b29      	ldr	r3, [pc, #164]	; (8000aec <CARME_CAN_Interrupt_Handler+0xf4>)
 8000a48:	689b      	ldr	r3, [r3, #8]
 8000a4a:	2b00      	cmp	r3, #0
 8000a4c:	d042      	beq.n	8000ad4 <CARME_CAN_Interrupt_Handler+0xdc>
 8000a4e:	4b27      	ldr	r3, [pc, #156]	; (8000aec <CARME_CAN_Interrupt_Handler+0xf4>)
 8000a50:	689b      	ldr	r3, [r3, #8]
 8000a52:	4798      	blx	r3
 8000a54:	e03e      	b.n	8000ad4 <CARME_CAN_Interrupt_Handler+0xdc>
 8000a56:	79fb      	ldrb	r3, [r7, #7]
 8000a58:	f003 0308 	and.w	r3, r3, #8
 8000a5c:	2b00      	cmp	r3, #0
 8000a5e:	d007      	beq.n	8000a70 <CARME_CAN_Interrupt_Handler+0x78>
 8000a60:	4b22      	ldr	r3, [pc, #136]	; (8000aec <CARME_CAN_Interrupt_Handler+0xf4>)
 8000a62:	68db      	ldr	r3, [r3, #12]
 8000a64:	2b00      	cmp	r3, #0
 8000a66:	d035      	beq.n	8000ad4 <CARME_CAN_Interrupt_Handler+0xdc>
 8000a68:	4b20      	ldr	r3, [pc, #128]	; (8000aec <CARME_CAN_Interrupt_Handler+0xf4>)
 8000a6a:	68db      	ldr	r3, [r3, #12]
 8000a6c:	4798      	blx	r3
 8000a6e:	e031      	b.n	8000ad4 <CARME_CAN_Interrupt_Handler+0xdc>
 8000a70:	79fb      	ldrb	r3, [r7, #7]
 8000a72:	f003 0310 	and.w	r3, r3, #16
 8000a76:	2b00      	cmp	r3, #0
 8000a78:	d007      	beq.n	8000a8a <CARME_CAN_Interrupt_Handler+0x92>
 8000a7a:	4b1c      	ldr	r3, [pc, #112]	; (8000aec <CARME_CAN_Interrupt_Handler+0xf4>)
 8000a7c:	691b      	ldr	r3, [r3, #16]
 8000a7e:	2b00      	cmp	r3, #0
 8000a80:	d028      	beq.n	8000ad4 <CARME_CAN_Interrupt_Handler+0xdc>
 8000a82:	4b1a      	ldr	r3, [pc, #104]	; (8000aec <CARME_CAN_Interrupt_Handler+0xf4>)
 8000a84:	691b      	ldr	r3, [r3, #16]
 8000a86:	4798      	blx	r3
 8000a88:	e024      	b.n	8000ad4 <CARME_CAN_Interrupt_Handler+0xdc>
 8000a8a:	79fb      	ldrb	r3, [r7, #7]
 8000a8c:	f003 0320 	and.w	r3, r3, #32
 8000a90:	2b00      	cmp	r3, #0
 8000a92:	d007      	beq.n	8000aa4 <CARME_CAN_Interrupt_Handler+0xac>
 8000a94:	4b15      	ldr	r3, [pc, #84]	; (8000aec <CARME_CAN_Interrupt_Handler+0xf4>)
 8000a96:	695b      	ldr	r3, [r3, #20]
 8000a98:	2b00      	cmp	r3, #0
 8000a9a:	d01b      	beq.n	8000ad4 <CARME_CAN_Interrupt_Handler+0xdc>
 8000a9c:	4b13      	ldr	r3, [pc, #76]	; (8000aec <CARME_CAN_Interrupt_Handler+0xf4>)
 8000a9e:	695b      	ldr	r3, [r3, #20]
 8000aa0:	4798      	blx	r3
 8000aa2:	e017      	b.n	8000ad4 <CARME_CAN_Interrupt_Handler+0xdc>
 8000aa4:	79fb      	ldrb	r3, [r7, #7]
 8000aa6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8000aaa:	2b00      	cmp	r3, #0
 8000aac:	d007      	beq.n	8000abe <CARME_CAN_Interrupt_Handler+0xc6>
 8000aae:	4b0f      	ldr	r3, [pc, #60]	; (8000aec <CARME_CAN_Interrupt_Handler+0xf4>)
 8000ab0:	699b      	ldr	r3, [r3, #24]
 8000ab2:	2b00      	cmp	r3, #0
 8000ab4:	d00e      	beq.n	8000ad4 <CARME_CAN_Interrupt_Handler+0xdc>
 8000ab6:	4b0d      	ldr	r3, [pc, #52]	; (8000aec <CARME_CAN_Interrupt_Handler+0xf4>)
 8000ab8:	699b      	ldr	r3, [r3, #24]
 8000aba:	4798      	blx	r3
 8000abc:	e00a      	b.n	8000ad4 <CARME_CAN_Interrupt_Handler+0xdc>
 8000abe:	79fb      	ldrb	r3, [r7, #7]
 8000ac0:	b25b      	sxtb	r3, r3
 8000ac2:	2b00      	cmp	r3, #0
 8000ac4:	da06      	bge.n	8000ad4 <CARME_CAN_Interrupt_Handler+0xdc>
 8000ac6:	4b09      	ldr	r3, [pc, #36]	; (8000aec <CARME_CAN_Interrupt_Handler+0xf4>)
 8000ac8:	69db      	ldr	r3, [r3, #28]
 8000aca:	2b00      	cmp	r3, #0
 8000acc:	d002      	beq.n	8000ad4 <CARME_CAN_Interrupt_Handler+0xdc>
 8000ace:	4b07      	ldr	r3, [pc, #28]	; (8000aec <CARME_CAN_Interrupt_Handler+0xf4>)
 8000ad0:	69db      	ldr	r3, [r3, #28]
 8000ad2:	4798      	blx	r3
 8000ad4:	2003      	movs	r0, #3
 8000ad6:	f7ff ff77 	bl	80009c8 <CARME_CAN_Read_Register>
 8000ada:	4603      	mov	r3, r0
 8000adc:	71fb      	strb	r3, [r7, #7]
 8000ade:	79fb      	ldrb	r3, [r7, #7]
 8000ae0:	2b00      	cmp	r3, #0
 8000ae2:	d191      	bne.n	8000a08 <CARME_CAN_Interrupt_Handler+0x10>
 8000ae4:	3708      	adds	r7, #8
 8000ae6:	46bd      	mov	sp, r7
 8000ae8:	bd80      	pop	{r7, pc}
 8000aea:	bf00      	nop
 8000aec:	20000fb4 	.word	0x20000fb4

08000af0 <CARME_Init>:
 8000af0:	b580      	push	{r7, lr}
 8000af2:	af00      	add	r7, sp, #0
 8000af4:	2001      	movs	r0, #1
 8000af6:	2101      	movs	r1, #1
 8000af8:	f001 fb4e 	bl	8002198 <RCC_AHB1PeriphClockCmd>
 8000afc:	2002      	movs	r0, #2
 8000afe:	2101      	movs	r1, #1
 8000b00:	f001 fb4a 	bl	8002198 <RCC_AHB1PeriphClockCmd>
 8000b04:	2004      	movs	r0, #4
 8000b06:	2101      	movs	r1, #1
 8000b08:	f001 fb46 	bl	8002198 <RCC_AHB1PeriphClockCmd>
 8000b0c:	2008      	movs	r0, #8
 8000b0e:	2101      	movs	r1, #1
 8000b10:	f001 fb42 	bl	8002198 <RCC_AHB1PeriphClockCmd>
 8000b14:	2010      	movs	r0, #16
 8000b16:	2101      	movs	r1, #1
 8000b18:	f001 fb3e 	bl	8002198 <RCC_AHB1PeriphClockCmd>
 8000b1c:	2020      	movs	r0, #32
 8000b1e:	2101      	movs	r1, #1
 8000b20:	f001 fb3a 	bl	8002198 <RCC_AHB1PeriphClockCmd>
 8000b24:	2040      	movs	r0, #64	; 0x40
 8000b26:	2101      	movs	r1, #1
 8000b28:	f001 fb36 	bl	8002198 <RCC_AHB1PeriphClockCmd>
 8000b2c:	2080      	movs	r0, #128	; 0x80
 8000b2e:	2101      	movs	r1, #1
 8000b30:	f001 fb32 	bl	8002198 <RCC_AHB1PeriphClockCmd>
 8000b34:	f44f 7080 	mov.w	r0, #256	; 0x100
 8000b38:	2101      	movs	r1, #1
 8000b3a:	f001 fb2d 	bl	8002198 <RCC_AHB1PeriphClockCmd>
 8000b3e:	f44f 4080 	mov.w	r0, #16384	; 0x4000
 8000b42:	2101      	movs	r1, #1
 8000b44:	f001 fb82 	bl	800224c <RCC_APB2PeriphClockCmd>
 8000b48:	4810      	ldr	r0, [pc, #64]	; (8000b8c <CARME_Init+0x9c>)
 8000b4a:	f001 f939 	bl	8001dc0 <GPIO_DeInit>
 8000b4e:	4810      	ldr	r0, [pc, #64]	; (8000b90 <CARME_Init+0xa0>)
 8000b50:	f001 f936 	bl	8001dc0 <GPIO_DeInit>
 8000b54:	480f      	ldr	r0, [pc, #60]	; (8000b94 <CARME_Init+0xa4>)
 8000b56:	f001 f933 	bl	8001dc0 <GPIO_DeInit>
 8000b5a:	480f      	ldr	r0, [pc, #60]	; (8000b98 <CARME_Init+0xa8>)
 8000b5c:	f001 f930 	bl	8001dc0 <GPIO_DeInit>
 8000b60:	480e      	ldr	r0, [pc, #56]	; (8000b9c <CARME_Init+0xac>)
 8000b62:	f001 f92d 	bl	8001dc0 <GPIO_DeInit>
 8000b66:	480e      	ldr	r0, [pc, #56]	; (8000ba0 <CARME_Init+0xb0>)
 8000b68:	f001 f92a 	bl	8001dc0 <GPIO_DeInit>
 8000b6c:	480d      	ldr	r0, [pc, #52]	; (8000ba4 <CARME_Init+0xb4>)
 8000b6e:	f001 f927 	bl	8001dc0 <GPIO_DeInit>
 8000b72:	480d      	ldr	r0, [pc, #52]	; (8000ba8 <CARME_Init+0xb8>)
 8000b74:	f001 f924 	bl	8001dc0 <GPIO_DeInit>
 8000b78:	480c      	ldr	r0, [pc, #48]	; (8000bac <CARME_Init+0xbc>)
 8000b7a:	f001 f921 	bl	8001dc0 <GPIO_DeInit>
 8000b7e:	f000 f8f3 	bl	8000d68 <CARME_AGPIO_Init>
 8000b82:	f000 f815 	bl	8000bb0 <CARME_FSMC_GPIO_Init>
 8000b86:	f000 f83d 	bl	8000c04 <CARME_FSMC_Init>
 8000b8a:	bd80      	pop	{r7, pc}
 8000b8c:	40020000 	.word	0x40020000
 8000b90:	40020400 	.word	0x40020400
 8000b94:	40020800 	.word	0x40020800
 8000b98:	40020c00 	.word	0x40020c00
 8000b9c:	40021000 	.word	0x40021000
 8000ba0:	40021400 	.word	0x40021400
 8000ba4:	40021800 	.word	0x40021800
 8000ba8:	40021c00 	.word	0x40021c00
 8000bac:	40022000 	.word	0x40022000

08000bb0 <CARME_FSMC_GPIO_Init>:
 8000bb0:	b580      	push	{r7, lr}
 8000bb2:	b0ec      	sub	sp, #432	; 0x1b0
 8000bb4:	af00      	add	r7, sp, #0
 8000bb6:	f107 0208 	add.w	r2, r7, #8
 8000bba:	4b11      	ldr	r3, [pc, #68]	; (8000c00 <CARME_FSMC_GPIO_Init+0x50>)
 8000bbc:	4611      	mov	r1, r2
 8000bbe:	461a      	mov	r2, r3
 8000bc0:	f44f 73d4 	mov.w	r3, #424	; 0x1a8
 8000bc4:	4608      	mov	r0, r1
 8000bc6:	4611      	mov	r1, r2
 8000bc8:	461a      	mov	r2, r3
 8000bca:	f004 f93f 	bl	8004e4c <memcpy>
 8000bce:	463b      	mov	r3, r7
 8000bd0:	2202      	movs	r2, #2
 8000bd2:	715a      	strb	r2, [r3, #5]
 8000bd4:	463b      	mov	r3, r7
 8000bd6:	2202      	movs	r2, #2
 8000bd8:	711a      	strb	r2, [r3, #4]
 8000bda:	463b      	mov	r3, r7
 8000bdc:	2202      	movs	r2, #2
 8000bde:	71da      	strb	r2, [r3, #7]
 8000be0:	463b      	mov	r3, r7
 8000be2:	2200      	movs	r2, #0
 8000be4:	719a      	strb	r2, [r3, #6]
 8000be6:	f107 0208 	add.w	r2, r7, #8
 8000bea:	463b      	mov	r3, r7
 8000bec:	4610      	mov	r0, r2
 8000bee:	4619      	mov	r1, r3
 8000bf0:	2235      	movs	r2, #53	; 0x35
 8000bf2:	f000 f8cb 	bl	8000d8c <CARME_GPIO_Init>
 8000bf6:	f507 77d8 	add.w	r7, r7, #432	; 0x1b0
 8000bfa:	46bd      	mov	sp, r7
 8000bfc:	bd80      	pop	{r7, pc}
 8000bfe:	bf00      	nop
 8000c00:	08004ef8 	.word	0x08004ef8

08000c04 <CARME_FSMC_Init>:
 8000c04:	b580      	push	{r7, lr}
 8000c06:	b096      	sub	sp, #88	; 0x58
 8000c08:	af00      	add	r7, sp, #0
 8000c0a:	2001      	movs	r0, #1
 8000c0c:	2101      	movs	r1, #1
 8000c0e:	f001 fae1 	bl	80021d4 <RCC_AHB3PeriphClockCmd>
 8000c12:	2000      	movs	r0, #0
 8000c14:	f000 ffe4 	bl	8001be0 <FSMC_NORSRAMDeInit>
 8000c18:	2002      	movs	r0, #2
 8000c1a:	f000 ffe1 	bl	8001be0 <FSMC_NORSRAMDeInit>
 8000c1e:	2004      	movs	r0, #4
 8000c20:	f000 ffde 	bl	8001be0 <FSMC_NORSRAMDeInit>
 8000c24:	2006      	movs	r0, #6
 8000c26:	f000 ffdb 	bl	8001be0 <FSMC_NORSRAMDeInit>
 8000c2a:	463b      	mov	r3, r7
 8000c2c:	653b      	str	r3, [r7, #80]	; 0x50
 8000c2e:	463b      	mov	r3, r7
 8000c30:	657b      	str	r3, [r7, #84]	; 0x54
 8000c32:	2305      	movs	r3, #5
 8000c34:	603b      	str	r3, [r7, #0]
 8000c36:	2300      	movs	r3, #0
 8000c38:	607b      	str	r3, [r7, #4]
 8000c3a:	2309      	movs	r3, #9
 8000c3c:	60bb      	str	r3, [r7, #8]
 8000c3e:	2300      	movs	r3, #0
 8000c40:	60fb      	str	r3, [r7, #12]
 8000c42:	2300      	movs	r3, #0
 8000c44:	613b      	str	r3, [r7, #16]
 8000c46:	2300      	movs	r3, #0
 8000c48:	617b      	str	r3, [r7, #20]
 8000c4a:	2300      	movs	r3, #0
 8000c4c:	61bb      	str	r3, [r7, #24]
 8000c4e:	2302      	movs	r3, #2
 8000c50:	61fb      	str	r3, [r7, #28]
 8000c52:	2300      	movs	r3, #0
 8000c54:	623b      	str	r3, [r7, #32]
 8000c56:	2304      	movs	r3, #4
 8000c58:	627b      	str	r3, [r7, #36]	; 0x24
 8000c5a:	2310      	movs	r3, #16
 8000c5c:	62bb      	str	r3, [r7, #40]	; 0x28
 8000c5e:	2300      	movs	r3, #0
 8000c60:	62fb      	str	r3, [r7, #44]	; 0x2c
 8000c62:	2300      	movs	r3, #0
 8000c64:	633b      	str	r3, [r7, #48]	; 0x30
 8000c66:	2300      	movs	r3, #0
 8000c68:	637b      	str	r3, [r7, #52]	; 0x34
 8000c6a:	2300      	movs	r3, #0
 8000c6c:	63bb      	str	r3, [r7, #56]	; 0x38
 8000c6e:	2300      	movs	r3, #0
 8000c70:	63fb      	str	r3, [r7, #60]	; 0x3c
 8000c72:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000c76:	643b      	str	r3, [r7, #64]	; 0x40
 8000c78:	2300      	movs	r3, #0
 8000c7a:	647b      	str	r3, [r7, #68]	; 0x44
 8000c7c:	2300      	movs	r3, #0
 8000c7e:	64bb      	str	r3, [r7, #72]	; 0x48
 8000c80:	2300      	movs	r3, #0
 8000c82:	64fb      	str	r3, [r7, #76]	; 0x4c
 8000c84:	f107 031c 	add.w	r3, r7, #28
 8000c88:	4618      	mov	r0, r3
 8000c8a:	f000 ffd5 	bl	8001c38 <FSMC_NORSRAMInit>
 8000c8e:	2002      	movs	r0, #2
 8000c90:	2101      	movs	r1, #1
 8000c92:	f001 f86b 	bl	8001d6c <FSMC_NORSRAMCmd>
 8000c96:	2305      	movs	r3, #5
 8000c98:	603b      	str	r3, [r7, #0]
 8000c9a:	2300      	movs	r3, #0
 8000c9c:	607b      	str	r3, [r7, #4]
 8000c9e:	2309      	movs	r3, #9
 8000ca0:	60bb      	str	r3, [r7, #8]
 8000ca2:	2300      	movs	r3, #0
 8000ca4:	60fb      	str	r3, [r7, #12]
 8000ca6:	2300      	movs	r3, #0
 8000ca8:	613b      	str	r3, [r7, #16]
 8000caa:	2300      	movs	r3, #0
 8000cac:	617b      	str	r3, [r7, #20]
 8000cae:	2300      	movs	r3, #0
 8000cb0:	61bb      	str	r3, [r7, #24]
 8000cb2:	2304      	movs	r3, #4
 8000cb4:	61fb      	str	r3, [r7, #28]
 8000cb6:	2300      	movs	r3, #0
 8000cb8:	623b      	str	r3, [r7, #32]
 8000cba:	2300      	movs	r3, #0
 8000cbc:	627b      	str	r3, [r7, #36]	; 0x24
 8000cbe:	2310      	movs	r3, #16
 8000cc0:	62bb      	str	r3, [r7, #40]	; 0x28
 8000cc2:	2300      	movs	r3, #0
 8000cc4:	62fb      	str	r3, [r7, #44]	; 0x2c
 8000cc6:	2300      	movs	r3, #0
 8000cc8:	633b      	str	r3, [r7, #48]	; 0x30
 8000cca:	2300      	movs	r3, #0
 8000ccc:	637b      	str	r3, [r7, #52]	; 0x34
 8000cce:	2300      	movs	r3, #0
 8000cd0:	63bb      	str	r3, [r7, #56]	; 0x38
 8000cd2:	2300      	movs	r3, #0
 8000cd4:	63fb      	str	r3, [r7, #60]	; 0x3c
 8000cd6:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000cda:	643b      	str	r3, [r7, #64]	; 0x40
 8000cdc:	2300      	movs	r3, #0
 8000cde:	647b      	str	r3, [r7, #68]	; 0x44
 8000ce0:	2300      	movs	r3, #0
 8000ce2:	64bb      	str	r3, [r7, #72]	; 0x48
 8000ce4:	2300      	movs	r3, #0
 8000ce6:	64fb      	str	r3, [r7, #76]	; 0x4c
 8000ce8:	f107 031c 	add.w	r3, r7, #28
 8000cec:	4618      	mov	r0, r3
 8000cee:	f000 ffa3 	bl	8001c38 <FSMC_NORSRAMInit>
 8000cf2:	2004      	movs	r0, #4
 8000cf4:	2101      	movs	r1, #1
 8000cf6:	f001 f839 	bl	8001d6c <FSMC_NORSRAMCmd>
 8000cfa:	2301      	movs	r3, #1
 8000cfc:	603b      	str	r3, [r7, #0]
 8000cfe:	2308      	movs	r3, #8
 8000d00:	607b      	str	r3, [r7, #4]
 8000d02:	230f      	movs	r3, #15
 8000d04:	60bb      	str	r3, [r7, #8]
 8000d06:	2300      	movs	r3, #0
 8000d08:	60fb      	str	r3, [r7, #12]
 8000d0a:	2300      	movs	r3, #0
 8000d0c:	613b      	str	r3, [r7, #16]
 8000d0e:	2305      	movs	r3, #5
 8000d10:	617b      	str	r3, [r7, #20]
 8000d12:	f04f 5340 	mov.w	r3, #805306368	; 0x30000000
 8000d16:	61bb      	str	r3, [r7, #24]
 8000d18:	2306      	movs	r3, #6
 8000d1a:	61fb      	str	r3, [r7, #28]
 8000d1c:	2300      	movs	r3, #0
 8000d1e:	623b      	str	r3, [r7, #32]
 8000d20:	2300      	movs	r3, #0
 8000d22:	627b      	str	r3, [r7, #36]	; 0x24
 8000d24:	2310      	movs	r3, #16
 8000d26:	62bb      	str	r3, [r7, #40]	; 0x28
 8000d28:	2300      	movs	r3, #0
 8000d2a:	62fb      	str	r3, [r7, #44]	; 0x2c
 8000d2c:	2300      	movs	r3, #0
 8000d2e:	633b      	str	r3, [r7, #48]	; 0x30
 8000d30:	2300      	movs	r3, #0
 8000d32:	637b      	str	r3, [r7, #52]	; 0x34
 8000d34:	2300      	movs	r3, #0
 8000d36:	63bb      	str	r3, [r7, #56]	; 0x38
 8000d38:	2300      	movs	r3, #0
 8000d3a:	63fb      	str	r3, [r7, #60]	; 0x3c
 8000d3c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000d40:	643b      	str	r3, [r7, #64]	; 0x40
 8000d42:	2300      	movs	r3, #0
 8000d44:	647b      	str	r3, [r7, #68]	; 0x44
 8000d46:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8000d4a:	64bb      	str	r3, [r7, #72]	; 0x48
 8000d4c:	2300      	movs	r3, #0
 8000d4e:	64fb      	str	r3, [r7, #76]	; 0x4c
 8000d50:	f107 031c 	add.w	r3, r7, #28
 8000d54:	4618      	mov	r0, r3
 8000d56:	f000 ff6f 	bl	8001c38 <FSMC_NORSRAMInit>
 8000d5a:	2006      	movs	r0, #6
 8000d5c:	2101      	movs	r1, #1
 8000d5e:	f001 f805 	bl	8001d6c <FSMC_NORSRAMCmd>
 8000d62:	3758      	adds	r7, #88	; 0x58
 8000d64:	46bd      	mov	sp, r7
 8000d66:	bd80      	pop	{r7, pc}

08000d68 <CARME_AGPIO_Init>:
 8000d68:	b580      	push	{r7, lr}
 8000d6a:	b082      	sub	sp, #8
 8000d6c:	af00      	add	r7, sp, #0
 8000d6e:	463b      	mov	r3, r7
 8000d70:	4618      	mov	r0, r3
 8000d72:	f001 f965 	bl	8002040 <GPIO_StructInit>
 8000d76:	463b      	mov	r3, r7
 8000d78:	4803      	ldr	r0, [pc, #12]	; (8000d88 <CARME_AGPIO_Init+0x20>)
 8000d7a:	4619      	mov	r1, r3
 8000d7c:	2214      	movs	r2, #20
 8000d7e:	f000 f805 	bl	8000d8c <CARME_GPIO_Init>
 8000d82:	3708      	adds	r7, #8
 8000d84:	46bd      	mov	sp, r7
 8000d86:	bd80      	pop	{r7, pc}
 8000d88:	20000014 	.word	0x20000014

08000d8c <CARME_GPIO_Init>:
 8000d8c:	b580      	push	{r7, lr}
 8000d8e:	b086      	sub	sp, #24
 8000d90:	af00      	add	r7, sp, #0
 8000d92:	60f8      	str	r0, [r7, #12]
 8000d94:	60b9      	str	r1, [r7, #8]
 8000d96:	4613      	mov	r3, r2
 8000d98:	71fb      	strb	r3, [r7, #7]
 8000d9a:	2300      	movs	r3, #0
 8000d9c:	75fb      	strb	r3, [r7, #23]
 8000d9e:	e0e6      	b.n	8000f6e <CARME_GPIO_Init+0x1e2>
 8000da0:	7dfb      	ldrb	r3, [r7, #23]
 8000da2:	00db      	lsls	r3, r3, #3
 8000da4:	68fa      	ldr	r2, [r7, #12]
 8000da6:	4413      	add	r3, r2
 8000da8:	889b      	ldrh	r3, [r3, #4]
 8000daa:	461a      	mov	r2, r3
 8000dac:	68bb      	ldr	r3, [r7, #8]
 8000dae:	601a      	str	r2, [r3, #0]
 8000db0:	7dfb      	ldrb	r3, [r7, #23]
 8000db2:	00db      	lsls	r3, r3, #3
 8000db4:	68fa      	ldr	r2, [r7, #12]
 8000db6:	4413      	add	r3, r2
 8000db8:	799a      	ldrb	r2, [r3, #6]
 8000dba:	68bb      	ldr	r3, [r7, #8]
 8000dbc:	711a      	strb	r2, [r3, #4]
 8000dbe:	7dfb      	ldrb	r3, [r7, #23]
 8000dc0:	00db      	lsls	r3, r3, #3
 8000dc2:	68fa      	ldr	r2, [r7, #12]
 8000dc4:	4413      	add	r3, r2
 8000dc6:	681b      	ldr	r3, [r3, #0]
 8000dc8:	4618      	mov	r0, r3
 8000dca:	68b9      	ldr	r1, [r7, #8]
 8000dcc:	f001 f8aa 	bl	8001f24 <GPIO_Init>
 8000dd0:	7dfb      	ldrb	r3, [r7, #23]
 8000dd2:	00db      	lsls	r3, r3, #3
 8000dd4:	68fa      	ldr	r2, [r7, #12]
 8000dd6:	4413      	add	r3, r2
 8000dd8:	799b      	ldrb	r3, [r3, #6]
 8000dda:	2b02      	cmp	r3, #2
 8000ddc:	f040 80c4 	bne.w	8000f68 <CARME_GPIO_Init+0x1dc>
 8000de0:	7dfb      	ldrb	r3, [r7, #23]
 8000de2:	00db      	lsls	r3, r3, #3
 8000de4:	68fa      	ldr	r2, [r7, #12]
 8000de6:	4413      	add	r3, r2
 8000de8:	6819      	ldr	r1, [r3, #0]
 8000dea:	7dfb      	ldrb	r3, [r7, #23]
 8000dec:	00db      	lsls	r3, r3, #3
 8000dee:	68fa      	ldr	r2, [r7, #12]
 8000df0:	4413      	add	r3, r2
 8000df2:	889b      	ldrh	r3, [r3, #4]
 8000df4:	f003 0301 	and.w	r3, r3, #1
 8000df8:	2b00      	cmp	r3, #0
 8000dfa:	f040 80ab 	bne.w	8000f54 <CARME_GPIO_Init+0x1c8>
 8000dfe:	7dfb      	ldrb	r3, [r7, #23]
 8000e00:	00db      	lsls	r3, r3, #3
 8000e02:	68fa      	ldr	r2, [r7, #12]
 8000e04:	4413      	add	r3, r2
 8000e06:	889b      	ldrh	r3, [r3, #4]
 8000e08:	f003 0302 	and.w	r3, r3, #2
 8000e0c:	2b00      	cmp	r3, #0
 8000e0e:	f040 809f 	bne.w	8000f50 <CARME_GPIO_Init+0x1c4>
 8000e12:	7dfb      	ldrb	r3, [r7, #23]
 8000e14:	00db      	lsls	r3, r3, #3
 8000e16:	68fa      	ldr	r2, [r7, #12]
 8000e18:	4413      	add	r3, r2
 8000e1a:	889b      	ldrh	r3, [r3, #4]
 8000e1c:	f003 0304 	and.w	r3, r3, #4
 8000e20:	2b00      	cmp	r3, #0
 8000e22:	f040 8093 	bne.w	8000f4c <CARME_GPIO_Init+0x1c0>
 8000e26:	7dfb      	ldrb	r3, [r7, #23]
 8000e28:	00db      	lsls	r3, r3, #3
 8000e2a:	68fa      	ldr	r2, [r7, #12]
 8000e2c:	4413      	add	r3, r2
 8000e2e:	889b      	ldrh	r3, [r3, #4]
 8000e30:	f003 0308 	and.w	r3, r3, #8
 8000e34:	2b00      	cmp	r3, #0
 8000e36:	f040 8087 	bne.w	8000f48 <CARME_GPIO_Init+0x1bc>
 8000e3a:	7dfb      	ldrb	r3, [r7, #23]
 8000e3c:	00db      	lsls	r3, r3, #3
 8000e3e:	68fa      	ldr	r2, [r7, #12]
 8000e40:	4413      	add	r3, r2
 8000e42:	889b      	ldrh	r3, [r3, #4]
 8000e44:	f003 0310 	and.w	r3, r3, #16
 8000e48:	2b00      	cmp	r3, #0
 8000e4a:	d17b      	bne.n	8000f44 <CARME_GPIO_Init+0x1b8>
 8000e4c:	7dfb      	ldrb	r3, [r7, #23]
 8000e4e:	00db      	lsls	r3, r3, #3
 8000e50:	68fa      	ldr	r2, [r7, #12]
 8000e52:	4413      	add	r3, r2
 8000e54:	889b      	ldrh	r3, [r3, #4]
 8000e56:	f003 0320 	and.w	r3, r3, #32
 8000e5a:	2b00      	cmp	r3, #0
 8000e5c:	d170      	bne.n	8000f40 <CARME_GPIO_Init+0x1b4>
 8000e5e:	7dfb      	ldrb	r3, [r7, #23]
 8000e60:	00db      	lsls	r3, r3, #3
 8000e62:	68fa      	ldr	r2, [r7, #12]
 8000e64:	4413      	add	r3, r2
 8000e66:	889b      	ldrh	r3, [r3, #4]
 8000e68:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8000e6c:	2b00      	cmp	r3, #0
 8000e6e:	d165      	bne.n	8000f3c <CARME_GPIO_Init+0x1b0>
 8000e70:	7dfb      	ldrb	r3, [r7, #23]
 8000e72:	00db      	lsls	r3, r3, #3
 8000e74:	68fa      	ldr	r2, [r7, #12]
 8000e76:	4413      	add	r3, r2
 8000e78:	889b      	ldrh	r3, [r3, #4]
 8000e7a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000e7e:	2b00      	cmp	r3, #0
 8000e80:	d15a      	bne.n	8000f38 <CARME_GPIO_Init+0x1ac>
 8000e82:	7dfb      	ldrb	r3, [r7, #23]
 8000e84:	00db      	lsls	r3, r3, #3
 8000e86:	68fa      	ldr	r2, [r7, #12]
 8000e88:	4413      	add	r3, r2
 8000e8a:	889b      	ldrh	r3, [r3, #4]
 8000e8c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8000e90:	2b00      	cmp	r3, #0
 8000e92:	d14f      	bne.n	8000f34 <CARME_GPIO_Init+0x1a8>
 8000e94:	7dfb      	ldrb	r3, [r7, #23]
 8000e96:	00db      	lsls	r3, r3, #3
 8000e98:	68fa      	ldr	r2, [r7, #12]
 8000e9a:	4413      	add	r3, r2
 8000e9c:	889b      	ldrh	r3, [r3, #4]
 8000e9e:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8000ea2:	2b00      	cmp	r3, #0
 8000ea4:	d144      	bne.n	8000f30 <CARME_GPIO_Init+0x1a4>
 8000ea6:	7dfb      	ldrb	r3, [r7, #23]
 8000ea8:	00db      	lsls	r3, r3, #3
 8000eaa:	68fa      	ldr	r2, [r7, #12]
 8000eac:	4413      	add	r3, r2
 8000eae:	889b      	ldrh	r3, [r3, #4]
 8000eb0:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8000eb4:	2b00      	cmp	r3, #0
 8000eb6:	d139      	bne.n	8000f2c <CARME_GPIO_Init+0x1a0>
 8000eb8:	7dfb      	ldrb	r3, [r7, #23]
 8000eba:	00db      	lsls	r3, r3, #3
 8000ebc:	68fa      	ldr	r2, [r7, #12]
 8000ebe:	4413      	add	r3, r2
 8000ec0:	889b      	ldrh	r3, [r3, #4]
 8000ec2:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8000ec6:	2b00      	cmp	r3, #0
 8000ec8:	d12e      	bne.n	8000f28 <CARME_GPIO_Init+0x19c>
 8000eca:	7dfb      	ldrb	r3, [r7, #23]
 8000ecc:	00db      	lsls	r3, r3, #3
 8000ece:	68fa      	ldr	r2, [r7, #12]
 8000ed0:	4413      	add	r3, r2
 8000ed2:	889b      	ldrh	r3, [r3, #4]
 8000ed4:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8000ed8:	2b00      	cmp	r3, #0
 8000eda:	d123      	bne.n	8000f24 <CARME_GPIO_Init+0x198>
 8000edc:	7dfb      	ldrb	r3, [r7, #23]
 8000ede:	00db      	lsls	r3, r3, #3
 8000ee0:	68fa      	ldr	r2, [r7, #12]
 8000ee2:	4413      	add	r3, r2
 8000ee4:	889b      	ldrh	r3, [r3, #4]
 8000ee6:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8000eea:	2b00      	cmp	r3, #0
 8000eec:	d118      	bne.n	8000f20 <CARME_GPIO_Init+0x194>
 8000eee:	7dfb      	ldrb	r3, [r7, #23]
 8000ef0:	00db      	lsls	r3, r3, #3
 8000ef2:	68fa      	ldr	r2, [r7, #12]
 8000ef4:	4413      	add	r3, r2
 8000ef6:	889b      	ldrh	r3, [r3, #4]
 8000ef8:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8000efc:	2b00      	cmp	r3, #0
 8000efe:	d10d      	bne.n	8000f1c <CARME_GPIO_Init+0x190>
 8000f00:	7dfb      	ldrb	r3, [r7, #23]
 8000f02:	00db      	lsls	r3, r3, #3
 8000f04:	68fa      	ldr	r2, [r7, #12]
 8000f06:	4413      	add	r3, r2
 8000f08:	889b      	ldrh	r3, [r3, #4]
 8000f0a:	b29b      	uxth	r3, r3
 8000f0c:	b21b      	sxth	r3, r3
 8000f0e:	2b00      	cmp	r3, #0
 8000f10:	da01      	bge.n	8000f16 <CARME_GPIO_Init+0x18a>
 8000f12:	230f      	movs	r3, #15
 8000f14:	e01f      	b.n	8000f56 <CARME_GPIO_Init+0x1ca>
 8000f16:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8000f1a:	e01c      	b.n	8000f56 <CARME_GPIO_Init+0x1ca>
 8000f1c:	230e      	movs	r3, #14
 8000f1e:	e01a      	b.n	8000f56 <CARME_GPIO_Init+0x1ca>
 8000f20:	230d      	movs	r3, #13
 8000f22:	e018      	b.n	8000f56 <CARME_GPIO_Init+0x1ca>
 8000f24:	230c      	movs	r3, #12
 8000f26:	e016      	b.n	8000f56 <CARME_GPIO_Init+0x1ca>
 8000f28:	230b      	movs	r3, #11
 8000f2a:	e014      	b.n	8000f56 <CARME_GPIO_Init+0x1ca>
 8000f2c:	230a      	movs	r3, #10
 8000f2e:	e012      	b.n	8000f56 <CARME_GPIO_Init+0x1ca>
 8000f30:	2309      	movs	r3, #9
 8000f32:	e010      	b.n	8000f56 <CARME_GPIO_Init+0x1ca>
 8000f34:	2308      	movs	r3, #8
 8000f36:	e00e      	b.n	8000f56 <CARME_GPIO_Init+0x1ca>
 8000f38:	2307      	movs	r3, #7
 8000f3a:	e00c      	b.n	8000f56 <CARME_GPIO_Init+0x1ca>
 8000f3c:	2306      	movs	r3, #6
 8000f3e:	e00a      	b.n	8000f56 <CARME_GPIO_Init+0x1ca>
 8000f40:	2305      	movs	r3, #5
 8000f42:	e008      	b.n	8000f56 <CARME_GPIO_Init+0x1ca>
 8000f44:	2304      	movs	r3, #4
 8000f46:	e006      	b.n	8000f56 <CARME_GPIO_Init+0x1ca>
 8000f48:	2303      	movs	r3, #3
 8000f4a:	e004      	b.n	8000f56 <CARME_GPIO_Init+0x1ca>
 8000f4c:	2302      	movs	r3, #2
 8000f4e:	e002      	b.n	8000f56 <CARME_GPIO_Init+0x1ca>
 8000f50:	2301      	movs	r3, #1
 8000f52:	e000      	b.n	8000f56 <CARME_GPIO_Init+0x1ca>
 8000f54:	2300      	movs	r3, #0
 8000f56:	7dfa      	ldrb	r2, [r7, #23]
 8000f58:	00d2      	lsls	r2, r2, #3
 8000f5a:	68f8      	ldr	r0, [r7, #12]
 8000f5c:	4402      	add	r2, r0
 8000f5e:	79d2      	ldrb	r2, [r2, #7]
 8000f60:	4608      	mov	r0, r1
 8000f62:	4619      	mov	r1, r3
 8000f64:	f001 f8d2 	bl	800210c <GPIO_PinAFConfig>
 8000f68:	7dfb      	ldrb	r3, [r7, #23]
 8000f6a:	3301      	adds	r3, #1
 8000f6c:	75fb      	strb	r3, [r7, #23]
 8000f6e:	7dfa      	ldrb	r2, [r7, #23]
 8000f70:	79fb      	ldrb	r3, [r7, #7]
 8000f72:	429a      	cmp	r2, r3
 8000f74:	f4ff af14 	bcc.w	8000da0 <CARME_GPIO_Init+0x14>
 8000f78:	3718      	adds	r7, #24
 8000f7a:	46bd      	mov	sp, r7
 8000f7c:	bd80      	pop	{r7, pc}
 8000f7e:	bf00      	nop

08000f80 <CARME_AGPIO_Get>:
 8000f80:	b580      	push	{r7, lr}
 8000f82:	b084      	sub	sp, #16
 8000f84:	af00      	add	r7, sp, #0
 8000f86:	6078      	str	r0, [r7, #4]
 8000f88:	2300      	movs	r3, #0
 8000f8a:	60bb      	str	r3, [r7, #8]
 8000f8c:	2300      	movs	r3, #0
 8000f8e:	73fb      	strb	r3, [r7, #15]
 8000f90:	e051      	b.n	8001036 <CARME_AGPIO_Get+0xb6>
 8000f92:	7bfa      	ldrb	r2, [r7, #15]
 8000f94:	4b2c      	ldr	r3, [pc, #176]	; (8001048 <CARME_AGPIO_Get+0xc8>)
 8000f96:	f853 2032 	ldr.w	r2, [r3, r2, lsl #3]
 8000f9a:	7bfb      	ldrb	r3, [r7, #15]
 8000f9c:	492a      	ldr	r1, [pc, #168]	; (8001048 <CARME_AGPIO_Get+0xc8>)
 8000f9e:	00db      	lsls	r3, r3, #3
 8000fa0:	440b      	add	r3, r1
 8000fa2:	889b      	ldrh	r3, [r3, #4]
 8000fa4:	4610      	mov	r0, r2
 8000fa6:	4619      	mov	r1, r3
 8000fa8:	f000 f850 	bl	800104c <CARME_AGPIO_GetMode>
 8000fac:	4603      	mov	r3, r0
 8000fae:	2b00      	cmp	r3, #0
 8000fb0:	d117      	bne.n	8000fe2 <CARME_AGPIO_Get+0x62>
 8000fb2:	7bfa      	ldrb	r2, [r7, #15]
 8000fb4:	4b24      	ldr	r3, [pc, #144]	; (8001048 <CARME_AGPIO_Get+0xc8>)
 8000fb6:	f853 2032 	ldr.w	r2, [r3, r2, lsl #3]
 8000fba:	7bfb      	ldrb	r3, [r7, #15]
 8000fbc:	4922      	ldr	r1, [pc, #136]	; (8001048 <CARME_AGPIO_Get+0xc8>)
 8000fbe:	00db      	lsls	r3, r3, #3
 8000fc0:	440b      	add	r3, r1
 8000fc2:	889b      	ldrh	r3, [r3, #4]
 8000fc4:	4610      	mov	r0, r2
 8000fc6:	4619      	mov	r1, r3
 8000fc8:	f001 f854 	bl	8002074 <GPIO_ReadInputDataBit>
 8000fcc:	4603      	mov	r3, r0
 8000fce:	2b00      	cmp	r3, #0
 8000fd0:	d02e      	beq.n	8001030 <CARME_AGPIO_Get+0xb0>
 8000fd2:	7bfb      	ldrb	r3, [r7, #15]
 8000fd4:	2201      	movs	r2, #1
 8000fd6:	fa02 f303 	lsl.w	r3, r2, r3
 8000fda:	68ba      	ldr	r2, [r7, #8]
 8000fdc:	4313      	orrs	r3, r2
 8000fde:	60bb      	str	r3, [r7, #8]
 8000fe0:	e026      	b.n	8001030 <CARME_AGPIO_Get+0xb0>
 8000fe2:	7bfa      	ldrb	r2, [r7, #15]
 8000fe4:	4b18      	ldr	r3, [pc, #96]	; (8001048 <CARME_AGPIO_Get+0xc8>)
 8000fe6:	f853 2032 	ldr.w	r2, [r3, r2, lsl #3]
 8000fea:	7bfb      	ldrb	r3, [r7, #15]
 8000fec:	4916      	ldr	r1, [pc, #88]	; (8001048 <CARME_AGPIO_Get+0xc8>)
 8000fee:	00db      	lsls	r3, r3, #3
 8000ff0:	440b      	add	r3, r1
 8000ff2:	889b      	ldrh	r3, [r3, #4]
 8000ff4:	4610      	mov	r0, r2
 8000ff6:	4619      	mov	r1, r3
 8000ff8:	f000 f828 	bl	800104c <CARME_AGPIO_GetMode>
 8000ffc:	4603      	mov	r3, r0
 8000ffe:	2b01      	cmp	r3, #1
 8001000:	d116      	bne.n	8001030 <CARME_AGPIO_Get+0xb0>
 8001002:	7bfa      	ldrb	r2, [r7, #15]
 8001004:	4b10      	ldr	r3, [pc, #64]	; (8001048 <CARME_AGPIO_Get+0xc8>)
 8001006:	f853 2032 	ldr.w	r2, [r3, r2, lsl #3]
 800100a:	7bfb      	ldrb	r3, [r7, #15]
 800100c:	490e      	ldr	r1, [pc, #56]	; (8001048 <CARME_AGPIO_Get+0xc8>)
 800100e:	00db      	lsls	r3, r3, #3
 8001010:	440b      	add	r3, r1
 8001012:	889b      	ldrh	r3, [r3, #4]
 8001014:	4610      	mov	r0, r2
 8001016:	4619      	mov	r1, r3
 8001018:	f001 f846 	bl	80020a8 <GPIO_ReadOutputDataBit>
 800101c:	4603      	mov	r3, r0
 800101e:	2b00      	cmp	r3, #0
 8001020:	d006      	beq.n	8001030 <CARME_AGPIO_Get+0xb0>
 8001022:	7bfb      	ldrb	r3, [r7, #15]
 8001024:	2201      	movs	r2, #1
 8001026:	fa02 f303 	lsl.w	r3, r2, r3
 800102a:	68ba      	ldr	r2, [r7, #8]
 800102c:	4313      	orrs	r3, r2
 800102e:	60bb      	str	r3, [r7, #8]
 8001030:	7bfb      	ldrb	r3, [r7, #15]
 8001032:	3301      	adds	r3, #1
 8001034:	73fb      	strb	r3, [r7, #15]
 8001036:	7bfb      	ldrb	r3, [r7, #15]
 8001038:	2b13      	cmp	r3, #19
 800103a:	d9aa      	bls.n	8000f92 <CARME_AGPIO_Get+0x12>
 800103c:	687b      	ldr	r3, [r7, #4]
 800103e:	68ba      	ldr	r2, [r7, #8]
 8001040:	601a      	str	r2, [r3, #0]
 8001042:	3710      	adds	r7, #16
 8001044:	46bd      	mov	sp, r7
 8001046:	bd80      	pop	{r7, pc}
 8001048:	20000014 	.word	0x20000014

0800104c <CARME_AGPIO_GetMode>:
 800104c:	b480      	push	{r7}
 800104e:	b085      	sub	sp, #20
 8001050:	af00      	add	r7, sp, #0
 8001052:	6078      	str	r0, [r7, #4]
 8001054:	460b      	mov	r3, r1
 8001056:	807b      	strh	r3, [r7, #2]
 8001058:	687b      	ldr	r3, [r7, #4]
 800105a:	681a      	ldr	r2, [r3, #0]
 800105c:	887b      	ldrh	r3, [r7, #2]
 800105e:	f003 0301 	and.w	r3, r3, #1
 8001062:	2b00      	cmp	r3, #0
 8001064:	d176      	bne.n	8001154 <CARME_AGPIO_GetMode+0x108>
 8001066:	887b      	ldrh	r3, [r7, #2]
 8001068:	f003 0302 	and.w	r3, r3, #2
 800106c:	2b00      	cmp	r3, #0
 800106e:	d16f      	bne.n	8001150 <CARME_AGPIO_GetMode+0x104>
 8001070:	887b      	ldrh	r3, [r7, #2]
 8001072:	f003 0304 	and.w	r3, r3, #4
 8001076:	2b00      	cmp	r3, #0
 8001078:	d168      	bne.n	800114c <CARME_AGPIO_GetMode+0x100>
 800107a:	887b      	ldrh	r3, [r7, #2]
 800107c:	f003 0308 	and.w	r3, r3, #8
 8001080:	2b00      	cmp	r3, #0
 8001082:	d161      	bne.n	8001148 <CARME_AGPIO_GetMode+0xfc>
 8001084:	887b      	ldrh	r3, [r7, #2]
 8001086:	f003 0310 	and.w	r3, r3, #16
 800108a:	2b00      	cmp	r3, #0
 800108c:	d159      	bne.n	8001142 <CARME_AGPIO_GetMode+0xf6>
 800108e:	887b      	ldrh	r3, [r7, #2]
 8001090:	f003 0320 	and.w	r3, r3, #32
 8001094:	2b00      	cmp	r3, #0
 8001096:	d151      	bne.n	800113c <CARME_AGPIO_GetMode+0xf0>
 8001098:	887b      	ldrh	r3, [r7, #2]
 800109a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800109e:	2b00      	cmp	r3, #0
 80010a0:	d149      	bne.n	8001136 <CARME_AGPIO_GetMode+0xea>
 80010a2:	887b      	ldrh	r3, [r7, #2]
 80010a4:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80010a8:	2b00      	cmp	r3, #0
 80010aa:	d141      	bne.n	8001130 <CARME_AGPIO_GetMode+0xe4>
 80010ac:	887b      	ldrh	r3, [r7, #2]
 80010ae:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80010b2:	2b00      	cmp	r3, #0
 80010b4:	d139      	bne.n	800112a <CARME_AGPIO_GetMode+0xde>
 80010b6:	887b      	ldrh	r3, [r7, #2]
 80010b8:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80010bc:	2b00      	cmp	r3, #0
 80010be:	d131      	bne.n	8001124 <CARME_AGPIO_GetMode+0xd8>
 80010c0:	887b      	ldrh	r3, [r7, #2]
 80010c2:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80010c6:	2b00      	cmp	r3, #0
 80010c8:	d129      	bne.n	800111e <CARME_AGPIO_GetMode+0xd2>
 80010ca:	887b      	ldrh	r3, [r7, #2]
 80010cc:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80010d0:	2b00      	cmp	r3, #0
 80010d2:	d121      	bne.n	8001118 <CARME_AGPIO_GetMode+0xcc>
 80010d4:	887b      	ldrh	r3, [r7, #2]
 80010d6:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80010da:	2b00      	cmp	r3, #0
 80010dc:	d119      	bne.n	8001112 <CARME_AGPIO_GetMode+0xc6>
 80010de:	887b      	ldrh	r3, [r7, #2]
 80010e0:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 80010e4:	2b00      	cmp	r3, #0
 80010e6:	d111      	bne.n	800110c <CARME_AGPIO_GetMode+0xc0>
 80010e8:	887b      	ldrh	r3, [r7, #2]
 80010ea:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80010ee:	2b00      	cmp	r3, #0
 80010f0:	d109      	bne.n	8001106 <CARME_AGPIO_GetMode+0xba>
 80010f2:	887b      	ldrh	r3, [r7, #2]
 80010f4:	b21b      	sxth	r3, r3
 80010f6:	2b00      	cmp	r3, #0
 80010f8:	da02      	bge.n	8001100 <CARME_AGPIO_GetMode+0xb4>
 80010fa:	f04f 4340 	mov.w	r3, #3221225472	; 0xc0000000
 80010fe:	e02a      	b.n	8001156 <CARME_AGPIO_GetMode+0x10a>
 8001100:	f04f 33ff 	mov.w	r3, #4294967295
 8001104:	e027      	b.n	8001156 <CARME_AGPIO_GetMode+0x10a>
 8001106:	f04f 5340 	mov.w	r3, #805306368	; 0x30000000
 800110a:	e024      	b.n	8001156 <CARME_AGPIO_GetMode+0x10a>
 800110c:	f04f 6340 	mov.w	r3, #201326592	; 0xc000000
 8001110:	e021      	b.n	8001156 <CARME_AGPIO_GetMode+0x10a>
 8001112:	f04f 7340 	mov.w	r3, #50331648	; 0x3000000
 8001116:	e01e      	b.n	8001156 <CARME_AGPIO_GetMode+0x10a>
 8001118:	f44f 0340 	mov.w	r3, #12582912	; 0xc00000
 800111c:	e01b      	b.n	8001156 <CARME_AGPIO_GetMode+0x10a>
 800111e:	f44f 1340 	mov.w	r3, #3145728	; 0x300000
 8001122:	e018      	b.n	8001156 <CARME_AGPIO_GetMode+0x10a>
 8001124:	f44f 2340 	mov.w	r3, #786432	; 0xc0000
 8001128:	e015      	b.n	8001156 <CARME_AGPIO_GetMode+0x10a>
 800112a:	f44f 3340 	mov.w	r3, #196608	; 0x30000
 800112e:	e012      	b.n	8001156 <CARME_AGPIO_GetMode+0x10a>
 8001130:	f44f 4340 	mov.w	r3, #49152	; 0xc000
 8001134:	e00f      	b.n	8001156 <CARME_AGPIO_GetMode+0x10a>
 8001136:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 800113a:	e00c      	b.n	8001156 <CARME_AGPIO_GetMode+0x10a>
 800113c:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8001140:	e009      	b.n	8001156 <CARME_AGPIO_GetMode+0x10a>
 8001142:	f44f 7340 	mov.w	r3, #768	; 0x300
 8001146:	e006      	b.n	8001156 <CARME_AGPIO_GetMode+0x10a>
 8001148:	23c0      	movs	r3, #192	; 0xc0
 800114a:	e004      	b.n	8001156 <CARME_AGPIO_GetMode+0x10a>
 800114c:	2330      	movs	r3, #48	; 0x30
 800114e:	e002      	b.n	8001156 <CARME_AGPIO_GetMode+0x10a>
 8001150:	230c      	movs	r3, #12
 8001152:	e000      	b.n	8001156 <CARME_AGPIO_GetMode+0x10a>
 8001154:	2303      	movs	r3, #3
 8001156:	4013      	ands	r3, r2
 8001158:	60fb      	str	r3, [r7, #12]
 800115a:	887b      	ldrh	r3, [r7, #2]
 800115c:	f003 0301 	and.w	r3, r3, #1
 8001160:	2b00      	cmp	r3, #0
 8001162:	d16a      	bne.n	800123a <CARME_AGPIO_GetMode+0x1ee>
 8001164:	887b      	ldrh	r3, [r7, #2]
 8001166:	f003 0302 	and.w	r3, r3, #2
 800116a:	2b00      	cmp	r3, #0
 800116c:	d163      	bne.n	8001236 <CARME_AGPIO_GetMode+0x1ea>
 800116e:	887b      	ldrh	r3, [r7, #2]
 8001170:	f003 0304 	and.w	r3, r3, #4
 8001174:	2b00      	cmp	r3, #0
 8001176:	d15c      	bne.n	8001232 <CARME_AGPIO_GetMode+0x1e6>
 8001178:	887b      	ldrh	r3, [r7, #2]
 800117a:	f003 0308 	and.w	r3, r3, #8
 800117e:	2b00      	cmp	r3, #0
 8001180:	d155      	bne.n	800122e <CARME_AGPIO_GetMode+0x1e2>
 8001182:	887b      	ldrh	r3, [r7, #2]
 8001184:	f003 0310 	and.w	r3, r3, #16
 8001188:	2b00      	cmp	r3, #0
 800118a:	d14e      	bne.n	800122a <CARME_AGPIO_GetMode+0x1de>
 800118c:	887b      	ldrh	r3, [r7, #2]
 800118e:	f003 0320 	and.w	r3, r3, #32
 8001192:	2b00      	cmp	r3, #0
 8001194:	d147      	bne.n	8001226 <CARME_AGPIO_GetMode+0x1da>
 8001196:	887b      	ldrh	r3, [r7, #2]
 8001198:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800119c:	2b00      	cmp	r3, #0
 800119e:	d140      	bne.n	8001222 <CARME_AGPIO_GetMode+0x1d6>
 80011a0:	887b      	ldrh	r3, [r7, #2]
 80011a2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80011a6:	2b00      	cmp	r3, #0
 80011a8:	d139      	bne.n	800121e <CARME_AGPIO_GetMode+0x1d2>
 80011aa:	887b      	ldrh	r3, [r7, #2]
 80011ac:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80011b0:	2b00      	cmp	r3, #0
 80011b2:	d132      	bne.n	800121a <CARME_AGPIO_GetMode+0x1ce>
 80011b4:	887b      	ldrh	r3, [r7, #2]
 80011b6:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80011ba:	2b00      	cmp	r3, #0
 80011bc:	d12b      	bne.n	8001216 <CARME_AGPIO_GetMode+0x1ca>
 80011be:	887b      	ldrh	r3, [r7, #2]
 80011c0:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80011c4:	2b00      	cmp	r3, #0
 80011c6:	d124      	bne.n	8001212 <CARME_AGPIO_GetMode+0x1c6>
 80011c8:	887b      	ldrh	r3, [r7, #2]
 80011ca:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80011ce:	2b00      	cmp	r3, #0
 80011d0:	d11d      	bne.n	800120e <CARME_AGPIO_GetMode+0x1c2>
 80011d2:	887b      	ldrh	r3, [r7, #2]
 80011d4:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80011d8:	2b00      	cmp	r3, #0
 80011da:	d116      	bne.n	800120a <CARME_AGPIO_GetMode+0x1be>
 80011dc:	887b      	ldrh	r3, [r7, #2]
 80011de:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 80011e2:	2b00      	cmp	r3, #0
 80011e4:	d10f      	bne.n	8001206 <CARME_AGPIO_GetMode+0x1ba>
 80011e6:	887b      	ldrh	r3, [r7, #2]
 80011e8:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80011ec:	2b00      	cmp	r3, #0
 80011ee:	d108      	bne.n	8001202 <CARME_AGPIO_GetMode+0x1b6>
 80011f0:	887b      	ldrh	r3, [r7, #2]
 80011f2:	b21b      	sxth	r3, r3
 80011f4:	2b00      	cmp	r3, #0
 80011f6:	da01      	bge.n	80011fc <CARME_AGPIO_GetMode+0x1b0>
 80011f8:	231e      	movs	r3, #30
 80011fa:	e01f      	b.n	800123c <CARME_AGPIO_GetMode+0x1f0>
 80011fc:	f06f 0301 	mvn.w	r3, #1
 8001200:	e01c      	b.n	800123c <CARME_AGPIO_GetMode+0x1f0>
 8001202:	231c      	movs	r3, #28
 8001204:	e01a      	b.n	800123c <CARME_AGPIO_GetMode+0x1f0>
 8001206:	231a      	movs	r3, #26
 8001208:	e018      	b.n	800123c <CARME_AGPIO_GetMode+0x1f0>
 800120a:	2318      	movs	r3, #24
 800120c:	e016      	b.n	800123c <CARME_AGPIO_GetMode+0x1f0>
 800120e:	2316      	movs	r3, #22
 8001210:	e014      	b.n	800123c <CARME_AGPIO_GetMode+0x1f0>
 8001212:	2314      	movs	r3, #20
 8001214:	e012      	b.n	800123c <CARME_AGPIO_GetMode+0x1f0>
 8001216:	2312      	movs	r3, #18
 8001218:	e010      	b.n	800123c <CARME_AGPIO_GetMode+0x1f0>
 800121a:	2310      	movs	r3, #16
 800121c:	e00e      	b.n	800123c <CARME_AGPIO_GetMode+0x1f0>
 800121e:	230e      	movs	r3, #14
 8001220:	e00c      	b.n	800123c <CARME_AGPIO_GetMode+0x1f0>
 8001222:	230c      	movs	r3, #12
 8001224:	e00a      	b.n	800123c <CARME_AGPIO_GetMode+0x1f0>
 8001226:	230a      	movs	r3, #10
 8001228:	e008      	b.n	800123c <CARME_AGPIO_GetMode+0x1f0>
 800122a:	2308      	movs	r3, #8
 800122c:	e006      	b.n	800123c <CARME_AGPIO_GetMode+0x1f0>
 800122e:	2306      	movs	r3, #6
 8001230:	e004      	b.n	800123c <CARME_AGPIO_GetMode+0x1f0>
 8001232:	2304      	movs	r3, #4
 8001234:	e002      	b.n	800123c <CARME_AGPIO_GetMode+0x1f0>
 8001236:	2302      	movs	r3, #2
 8001238:	e000      	b.n	800123c <CARME_AGPIO_GetMode+0x1f0>
 800123a:	2300      	movs	r3, #0
 800123c:	68fa      	ldr	r2, [r7, #12]
 800123e:	fa22 f303 	lsr.w	r3, r2, r3
 8001242:	b2db      	uxtb	r3, r3
 8001244:	4618      	mov	r0, r3
 8001246:	3714      	adds	r7, #20
 8001248:	46bd      	mov	sp, r7
 800124a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800124e:	4770      	bx	lr

08001250 <CARME_IO1_Init>:
 8001250:	b580      	push	{r7, lr}
 8001252:	b082      	sub	sp, #8
 8001254:	af00      	add	r7, sp, #0
 8001256:	463b      	mov	r3, r7
 8001258:	4618      	mov	r0, r3
 800125a:	f000 fef1 	bl	8002040 <GPIO_StructInit>
 800125e:	463b      	mov	r3, r7
 8001260:	4803      	ldr	r0, [pc, #12]	; (8001270 <CARME_IO1_Init+0x20>)
 8001262:	4619      	mov	r1, r3
 8001264:	2204      	movs	r2, #4
 8001266:	f7ff fd91 	bl	8000d8c <CARME_GPIO_Init>
 800126a:	3708      	adds	r7, #8
 800126c:	46bd      	mov	sp, r7
 800126e:	bd80      	pop	{r7, pc}
 8001270:	200000bc 	.word	0x200000bc

08001274 <CARME_IO1_LED_Set>:
 8001274:	b480      	push	{r7}
 8001276:	b085      	sub	sp, #20
 8001278:	af00      	add	r7, sp, #0
 800127a:	4602      	mov	r2, r0
 800127c:	460b      	mov	r3, r1
 800127e:	71fa      	strb	r2, [r7, #7]
 8001280:	71bb      	strb	r3, [r7, #6]
 8001282:	2300      	movs	r3, #0
 8001284:	73fb      	strb	r3, [r7, #15]
 8001286:	e031      	b.n	80012ec <CARME_IO1_LED_Set+0x78>
 8001288:	79ba      	ldrb	r2, [r7, #6]
 800128a:	7bfb      	ldrb	r3, [r7, #15]
 800128c:	fa42 f303 	asr.w	r3, r2, r3
 8001290:	f003 0301 	and.w	r3, r3, #1
 8001294:	2b00      	cmp	r3, #0
 8001296:	d026      	beq.n	80012e6 <CARME_IO1_LED_Set+0x72>
 8001298:	79fa      	ldrb	r2, [r7, #7]
 800129a:	7bfb      	ldrb	r3, [r7, #15]
 800129c:	fa42 f303 	asr.w	r3, r2, r3
 80012a0:	f003 0301 	and.w	r3, r3, #1
 80012a4:	2b00      	cmp	r3, #0
 80012a6:	d00e      	beq.n	80012c6 <CARME_IO1_LED_Set+0x52>
 80012a8:	7bfb      	ldrb	r3, [r7, #15]
 80012aa:	2201      	movs	r2, #1
 80012ac:	fa02 f303 	lsl.w	r3, r2, r3
 80012b0:	b2da      	uxtb	r2, r3
 80012b2:	4b15      	ldr	r3, [pc, #84]	; (8001308 <CARME_IO1_LED_Set+0x94>)
 80012b4:	781b      	ldrb	r3, [r3, #0]
 80012b6:	b2db      	uxtb	r3, r3
 80012b8:	b2db      	uxtb	r3, r3
 80012ba:	4313      	orrs	r3, r2
 80012bc:	b2db      	uxtb	r3, r3
 80012be:	b2da      	uxtb	r2, r3
 80012c0:	4b11      	ldr	r3, [pc, #68]	; (8001308 <CARME_IO1_LED_Set+0x94>)
 80012c2:	701a      	strb	r2, [r3, #0]
 80012c4:	e00f      	b.n	80012e6 <CARME_IO1_LED_Set+0x72>
 80012c6:	7bfb      	ldrb	r3, [r7, #15]
 80012c8:	2201      	movs	r2, #1
 80012ca:	fa02 f303 	lsl.w	r3, r2, r3
 80012ce:	b2db      	uxtb	r3, r3
 80012d0:	43db      	mvns	r3, r3
 80012d2:	b2da      	uxtb	r2, r3
 80012d4:	4b0c      	ldr	r3, [pc, #48]	; (8001308 <CARME_IO1_LED_Set+0x94>)
 80012d6:	781b      	ldrb	r3, [r3, #0]
 80012d8:	b2db      	uxtb	r3, r3
 80012da:	b2db      	uxtb	r3, r3
 80012dc:	4013      	ands	r3, r2
 80012de:	b2db      	uxtb	r3, r3
 80012e0:	b2da      	uxtb	r2, r3
 80012e2:	4b09      	ldr	r3, [pc, #36]	; (8001308 <CARME_IO1_LED_Set+0x94>)
 80012e4:	701a      	strb	r2, [r3, #0]
 80012e6:	7bfb      	ldrb	r3, [r7, #15]
 80012e8:	3301      	adds	r3, #1
 80012ea:	73fb      	strb	r3, [r7, #15]
 80012ec:	7bfb      	ldrb	r3, [r7, #15]
 80012ee:	2b07      	cmp	r3, #7
 80012f0:	d9ca      	bls.n	8001288 <CARME_IO1_LED_Set+0x14>
 80012f2:	4b06      	ldr	r3, [pc, #24]	; (800130c <CARME_IO1_LED_Set+0x98>)
 80012f4:	681b      	ldr	r3, [r3, #0]
 80012f6:	4a04      	ldr	r2, [pc, #16]	; (8001308 <CARME_IO1_LED_Set+0x94>)
 80012f8:	7812      	ldrb	r2, [r2, #0]
 80012fa:	b2d2      	uxtb	r2, r2
 80012fc:	701a      	strb	r2, [r3, #0]
 80012fe:	3714      	adds	r7, #20
 8001300:	46bd      	mov	sp, r7
 8001302:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001306:	4770      	bx	lr
 8001308:	20000fd4 	.word	0x20000fd4
 800130c:	200000b4 	.word	0x200000b4

08001310 <CARME_IO1_SWITCH_Get>:
 8001310:	b480      	push	{r7}
 8001312:	b083      	sub	sp, #12
 8001314:	af00      	add	r7, sp, #0
 8001316:	6078      	str	r0, [r7, #4]
 8001318:	4b05      	ldr	r3, [pc, #20]	; (8001330 <CARME_IO1_SWITCH_Get+0x20>)
 800131a:	681b      	ldr	r3, [r3, #0]
 800131c:	781b      	ldrb	r3, [r3, #0]
 800131e:	b2da      	uxtb	r2, r3
 8001320:	687b      	ldr	r3, [r7, #4]
 8001322:	701a      	strb	r2, [r3, #0]
 8001324:	370c      	adds	r7, #12
 8001326:	46bd      	mov	sp, r7
 8001328:	f85d 7b04 	ldr.w	r7, [sp], #4
 800132c:	4770      	bx	lr
 800132e:	bf00      	nop
 8001330:	200000b8 	.word	0x200000b8

08001334 <CARME_IO1_BUTTON_Get>:
 8001334:	b580      	push	{r7, lr}
 8001336:	b084      	sub	sp, #16
 8001338:	af00      	add	r7, sp, #0
 800133a:	6078      	str	r0, [r7, #4]
 800133c:	2300      	movs	r3, #0
 800133e:	73fb      	strb	r3, [r7, #15]
 8001340:	f107 0308 	add.w	r3, r7, #8
 8001344:	4618      	mov	r0, r3
 8001346:	f7ff fe1b 	bl	8000f80 <CARME_AGPIO_Get>
 800134a:	68bb      	ldr	r3, [r7, #8]
 800134c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001350:	2b00      	cmp	r3, #0
 8001352:	bf0c      	ite	eq
 8001354:	2300      	moveq	r3, #0
 8001356:	2301      	movne	r3, #1
 8001358:	b2db      	uxtb	r3, r3
 800135a:	b2da      	uxtb	r2, r3
 800135c:	7bfb      	ldrb	r3, [r7, #15]
 800135e:	4313      	orrs	r3, r2
 8001360:	b2db      	uxtb	r3, r3
 8001362:	73fb      	strb	r3, [r7, #15]
 8001364:	68bb      	ldr	r3, [r7, #8]
 8001366:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800136a:	2b00      	cmp	r3, #0
 800136c:	d001      	beq.n	8001372 <CARME_IO1_BUTTON_Get+0x3e>
 800136e:	2302      	movs	r3, #2
 8001370:	e000      	b.n	8001374 <CARME_IO1_BUTTON_Get+0x40>
 8001372:	2300      	movs	r3, #0
 8001374:	7bf9      	ldrb	r1, [r7, #15]
 8001376:	461a      	mov	r2, r3
 8001378:	460b      	mov	r3, r1
 800137a:	4313      	orrs	r3, r2
 800137c:	b2db      	uxtb	r3, r3
 800137e:	73fb      	strb	r3, [r7, #15]
 8001380:	68bb      	ldr	r3, [r7, #8]
 8001382:	f003 0320 	and.w	r3, r3, #32
 8001386:	2b00      	cmp	r3, #0
 8001388:	d001      	beq.n	800138e <CARME_IO1_BUTTON_Get+0x5a>
 800138a:	2304      	movs	r3, #4
 800138c:	e000      	b.n	8001390 <CARME_IO1_BUTTON_Get+0x5c>
 800138e:	2300      	movs	r3, #0
 8001390:	7bf9      	ldrb	r1, [r7, #15]
 8001392:	461a      	mov	r2, r3
 8001394:	460b      	mov	r3, r1
 8001396:	4313      	orrs	r3, r2
 8001398:	b2db      	uxtb	r3, r3
 800139a:	73fb      	strb	r3, [r7, #15]
 800139c:	68bb      	ldr	r3, [r7, #8]
 800139e:	f003 0310 	and.w	r3, r3, #16
 80013a2:	2b00      	cmp	r3, #0
 80013a4:	d001      	beq.n	80013aa <CARME_IO1_BUTTON_Get+0x76>
 80013a6:	2308      	movs	r3, #8
 80013a8:	e000      	b.n	80013ac <CARME_IO1_BUTTON_Get+0x78>
 80013aa:	2300      	movs	r3, #0
 80013ac:	7bf9      	ldrb	r1, [r7, #15]
 80013ae:	461a      	mov	r2, r3
 80013b0:	460b      	mov	r3, r1
 80013b2:	4313      	orrs	r3, r2
 80013b4:	b2db      	uxtb	r3, r3
 80013b6:	73fb      	strb	r3, [r7, #15]
 80013b8:	687b      	ldr	r3, [r7, #4]
 80013ba:	7bfa      	ldrb	r2, [r7, #15]
 80013bc:	701a      	strb	r2, [r3, #0]
 80013be:	3710      	adds	r7, #16
 80013c0:	46bd      	mov	sp, r7
 80013c2:	bd80      	pop	{r7, pc}

080013c4 <CARME_IO2_Init>:
 80013c4:	b580      	push	{r7, lr}
 80013c6:	b092      	sub	sp, #72	; 0x48
 80013c8:	af00      	add	r7, sp, #0
 80013ca:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80013ce:	4618      	mov	r0, r3
 80013d0:	f000 fe36 	bl	8002040 <GPIO_StructInit>
 80013d4:	2302      	movs	r3, #2
 80013d6:	f887 3045 	strb.w	r3, [r7, #69]	; 0x45
 80013da:	2300      	movs	r3, #0
 80013dc:	f887 3046 	strb.w	r3, [r7, #70]	; 0x46
 80013e0:	2300      	movs	r3, #0
 80013e2:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
 80013e6:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80013ea:	483a      	ldr	r0, [pc, #232]	; (80014d4 <CARME_IO2_Init+0x110>)
 80013ec:	4619      	mov	r1, r3
 80013ee:	2204      	movs	r2, #4
 80013f0:	f7ff fccc 	bl	8000d8c <CARME_GPIO_Init>
 80013f4:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80013f8:	4837      	ldr	r0, [pc, #220]	; (80014d8 <CARME_IO2_Init+0x114>)
 80013fa:	4619      	mov	r1, r3
 80013fc:	2202      	movs	r2, #2
 80013fe:	f7ff fcc5 	bl	8000d8c <CARME_GPIO_Init>
 8001402:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8001406:	4835      	ldr	r0, [pc, #212]	; (80014dc <CARME_IO2_Init+0x118>)
 8001408:	4619      	mov	r1, r3
 800140a:	2202      	movs	r2, #2
 800140c:	f7ff fcbe 	bl	8000d8c <CARME_GPIO_Init>
 8001410:	2301      	movs	r3, #1
 8001412:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
 8001416:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800141a:	4831      	ldr	r0, [pc, #196]	; (80014e0 <CARME_IO2_Init+0x11c>)
 800141c:	4619      	mov	r1, r3
 800141e:	2211      	movs	r2, #17
 8001420:	f7ff fcb4 	bl	8000d8c <CARME_GPIO_Init>
 8001424:	f44f 7080 	mov.w	r0, #256	; 0x100
 8001428:	2101      	movs	r1, #1
 800142a:	f000 ff0f 	bl	800224c <RCC_APB2PeriphClockCmd>
 800142e:	f000 faeb 	bl	8001a08 <ADC_DeInit>
 8001432:	2300      	movs	r3, #0
 8001434:	633b      	str	r3, [r7, #48]	; 0x30
 8001436:	2300      	movs	r3, #0
 8001438:	637b      	str	r3, [r7, #52]	; 0x34
 800143a:	2300      	movs	r3, #0
 800143c:	63bb      	str	r3, [r7, #56]	; 0x38
 800143e:	2300      	movs	r3, #0
 8001440:	63fb      	str	r3, [r7, #60]	; 0x3c
 8001442:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8001446:	4618      	mov	r0, r3
 8001448:	f000 fb5e 	bl	8001b08 <ADC_CommonInit>
 800144c:	f107 0318 	add.w	r3, r7, #24
 8001450:	4618      	mov	r0, r3
 8001452:	f000 fb3b 	bl	8001acc <ADC_StructInit>
 8001456:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800145a:	61bb      	str	r3, [r7, #24]
 800145c:	2301      	movs	r3, #1
 800145e:	f887 302c 	strb.w	r3, [r7, #44]	; 0x2c
 8001462:	f107 0318 	add.w	r3, r7, #24
 8001466:	481f      	ldr	r0, [pc, #124]	; (80014e4 <CARME_IO2_Init+0x120>)
 8001468:	4619      	mov	r1, r3
 800146a:	f000 fadb 	bl	8001a24 <ADC_Init>
 800146e:	481d      	ldr	r0, [pc, #116]	; (80014e4 <CARME_IO2_Init+0x120>)
 8001470:	2101      	movs	r1, #1
 8001472:	f000 fb71 	bl	8001b58 <ADC_Cmd>
 8001476:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 800147a:	2101      	movs	r1, #1
 800147c:	f000 fee6 	bl	800224c <RCC_APB2PeriphClockCmd>
 8001480:	2001      	movs	r0, #1
 8001482:	f000 f833 	bl	80014ec <CARME_IO2_SPI_CS_Out>
 8001486:	4818      	ldr	r0, [pc, #96]	; (80014e8 <CARME_IO2_Init+0x124>)
 8001488:	f000 ff58 	bl	800233c <SPI_I2S_DeInit>
 800148c:	1d3b      	adds	r3, r7, #4
 800148e:	4618      	mov	r0, r3
 8001490:	f001 f804 	bl	800249c <SPI_StructInit>
 8001494:	f44f 7382 	mov.w	r3, #260	; 0x104
 8001498:	80fb      	strh	r3, [r7, #6]
 800149a:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800149e:	813b      	strh	r3, [r7, #8]
 80014a0:	2302      	movs	r3, #2
 80014a2:	817b      	strh	r3, [r7, #10]
 80014a4:	2301      	movs	r3, #1
 80014a6:	81bb      	strh	r3, [r7, #12]
 80014a8:	f44f 7340 	mov.w	r3, #768	; 0x300
 80014ac:	81fb      	strh	r3, [r7, #14]
 80014ae:	2328      	movs	r3, #40	; 0x28
 80014b0:	823b      	strh	r3, [r7, #16]
 80014b2:	1d3b      	adds	r3, r7, #4
 80014b4:	480c      	ldr	r0, [pc, #48]	; (80014e8 <CARME_IO2_Init+0x124>)
 80014b6:	4619      	mov	r1, r3
 80014b8:	f000 ffac 	bl	8002414 <SPI_Init>
 80014bc:	480a      	ldr	r0, [pc, #40]	; (80014e8 <CARME_IO2_Init+0x124>)
 80014be:	2101      	movs	r1, #1
 80014c0:	f001 f810 	bl	80024e4 <SPI_Cmd>
 80014c4:	2008      	movs	r0, #8
 80014c6:	2101      	movs	r1, #1
 80014c8:	f000 fea2 	bl	8002210 <RCC_APB1PeriphClockCmd>
 80014cc:	3748      	adds	r7, #72	; 0x48
 80014ce:	46bd      	mov	sp, r7
 80014d0:	bd80      	pop	{r7, pc}
 80014d2:	bf00      	nop
 80014d4:	20000164 	.word	0x20000164
 80014d8:	20000184 	.word	0x20000184
 80014dc:	20000194 	.word	0x20000194
 80014e0:	200000dc 	.word	0x200000dc
 80014e4:	40012000 	.word	0x40012000
 80014e8:	40013000 	.word	0x40013000

080014ec <CARME_IO2_SPI_CS_Out>:
 80014ec:	b580      	push	{r7, lr}
 80014ee:	b082      	sub	sp, #8
 80014f0:	af00      	add	r7, sp, #0
 80014f2:	4603      	mov	r3, r0
 80014f4:	71fb      	strb	r3, [r7, #7]
 80014f6:	79fb      	ldrb	r3, [r7, #7]
 80014f8:	4803      	ldr	r0, [pc, #12]	; (8001508 <CARME_IO2_SPI_CS_Out+0x1c>)
 80014fa:	2110      	movs	r1, #16
 80014fc:	461a      	mov	r2, r3
 80014fe:	f000 fded 	bl	80020dc <GPIO_WriteBit>
 8001502:	3708      	adds	r7, #8
 8001504:	46bd      	mov	sp, r7
 8001506:	bd80      	pop	{r7, pc}
 8001508:	40020000 	.word	0x40020000

0800150c <SSD1963_WriteCommand>:
 800150c:	b480      	push	{r7}
 800150e:	b083      	sub	sp, #12
 8001510:	af00      	add	r7, sp, #0
 8001512:	4603      	mov	r3, r0
 8001514:	80fb      	strh	r3, [r7, #6]
 8001516:	f04f 43d0 	mov.w	r3, #1744830464	; 0x68000000
 800151a:	88fa      	ldrh	r2, [r7, #6]
 800151c:	801a      	strh	r2, [r3, #0]
 800151e:	370c      	adds	r7, #12
 8001520:	46bd      	mov	sp, r7
 8001522:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001526:	4770      	bx	lr

08001528 <SSD1963_WriteData>:
 8001528:	b480      	push	{r7}
 800152a:	b083      	sub	sp, #12
 800152c:	af00      	add	r7, sp, #0
 800152e:	4603      	mov	r3, r0
 8001530:	80fb      	strh	r3, [r7, #6]
 8001532:	f04f 43d0 	mov.w	r3, #1744830464	; 0x68000000
 8001536:	88fa      	ldrh	r2, [r7, #6]
 8001538:	805a      	strh	r2, [r3, #2]
 800153a:	370c      	adds	r7, #12
 800153c:	46bd      	mov	sp, r7
 800153e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001542:	4770      	bx	lr

08001544 <SSD1963_ReadData>:
 8001544:	b480      	push	{r7}
 8001546:	af00      	add	r7, sp, #0
 8001548:	f04f 43d0 	mov.w	r3, #1744830464	; 0x68000000
 800154c:	885b      	ldrh	r3, [r3, #2]
 800154e:	b29b      	uxth	r3, r3
 8001550:	4618      	mov	r0, r3
 8001552:	46bd      	mov	sp, r7
 8001554:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001558:	4770      	bx	lr
 800155a:	bf00      	nop

0800155c <SSD1963_DisplayOn>:
 800155c:	b580      	push	{r7, lr}
 800155e:	af00      	add	r7, sp, #0
 8001560:	2029      	movs	r0, #41	; 0x29
 8001562:	f7ff ffd3 	bl	800150c <SSD1963_WriteCommand>
 8001566:	bd80      	pop	{r7, pc}

08001568 <SSD1963_Delay>:
 8001568:	b480      	push	{r7}
 800156a:	b085      	sub	sp, #20
 800156c:	af00      	add	r7, sp, #0
 800156e:	6078      	str	r0, [r7, #4]
 8001570:	2300      	movs	r3, #0
 8001572:	60fb      	str	r3, [r7, #12]
 8001574:	687b      	ldr	r3, [r7, #4]
 8001576:	4a08      	ldr	r2, [pc, #32]	; (8001598 <SSD1963_Delay+0x30>)
 8001578:	fb02 f303 	mul.w	r3, r2, r3
 800157c:	60fb      	str	r3, [r7, #12]
 800157e:	e002      	b.n	8001586 <SSD1963_Delay+0x1e>
 8001580:	68fb      	ldr	r3, [r7, #12]
 8001582:	3b01      	subs	r3, #1
 8001584:	60fb      	str	r3, [r7, #12]
 8001586:	68fb      	ldr	r3, [r7, #12]
 8001588:	2b00      	cmp	r3, #0
 800158a:	d1f9      	bne.n	8001580 <SSD1963_Delay+0x18>
 800158c:	3714      	adds	r7, #20
 800158e:	46bd      	mov	sp, r7
 8001590:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001594:	4770      	bx	lr
 8001596:	bf00      	nop
 8001598:	000186a0 	.word	0x000186a0

0800159c <SSD1963_Init>:
 800159c:	b580      	push	{r7, lr}
 800159e:	b082      	sub	sp, #8
 80015a0:	af02      	add	r7, sp, #8
 80015a2:	f000 f953 	bl	800184c <SSD1963_LLD_Init>
 80015a6:	484d      	ldr	r0, [pc, #308]	; (80016dc <SSD1963_Init+0x140>)
 80015a8:	f000 f934 	bl	8001814 <SSD1963_GetDeviceDescriptorBlock>
 80015ac:	2001      	movs	r0, #1
 80015ae:	f7ff ffad 	bl	800150c <SSD1963_WriteCommand>
 80015b2:	200a      	movs	r0, #10
 80015b4:	f7ff ffd8 	bl	8001568 <SSD1963_Delay>
 80015b8:	20e2      	movs	r0, #226	; 0xe2
 80015ba:	f7ff ffa7 	bl	800150c <SSD1963_WriteCommand>
 80015be:	202c      	movs	r0, #44	; 0x2c
 80015c0:	f7ff ffb2 	bl	8001528 <SSD1963_WriteData>
 80015c4:	2002      	movs	r0, #2
 80015c6:	f7ff ffaf 	bl	8001528 <SSD1963_WriteData>
 80015ca:	20a5      	movs	r0, #165	; 0xa5
 80015cc:	f7ff ffac 	bl	8001528 <SSD1963_WriteData>
 80015d0:	20e0      	movs	r0, #224	; 0xe0
 80015d2:	f7ff ff9b 	bl	800150c <SSD1963_WriteCommand>
 80015d6:	2001      	movs	r0, #1
 80015d8:	f7ff ffa6 	bl	8001528 <SSD1963_WriteData>
 80015dc:	200a      	movs	r0, #10
 80015de:	f7ff ffc3 	bl	8001568 <SSD1963_Delay>
 80015e2:	20e0      	movs	r0, #224	; 0xe0
 80015e4:	f7ff ff92 	bl	800150c <SSD1963_WriteCommand>
 80015e8:	2003      	movs	r0, #3
 80015ea:	f7ff ff9d 	bl	8001528 <SSD1963_WriteData>
 80015ee:	200a      	movs	r0, #10
 80015f0:	f7ff ffba 	bl	8001568 <SSD1963_Delay>
 80015f4:	20b0      	movs	r0, #176	; 0xb0
 80015f6:	f7ff ff89 	bl	800150c <SSD1963_WriteCommand>
 80015fa:	200c      	movs	r0, #12
 80015fc:	f7ff ff94 	bl	8001528 <SSD1963_WriteData>
 8001600:	2000      	movs	r0, #0
 8001602:	f7ff ff91 	bl	8001528 <SSD1963_WriteData>
 8001606:	2001      	movs	r0, #1
 8001608:	f7ff ff8e 	bl	8001528 <SSD1963_WriteData>
 800160c:	203f      	movs	r0, #63	; 0x3f
 800160e:	f7ff ff8b 	bl	8001528 <SSD1963_WriteData>
 8001612:	2000      	movs	r0, #0
 8001614:	f7ff ff88 	bl	8001528 <SSD1963_WriteData>
 8001618:	20ef      	movs	r0, #239	; 0xef
 800161a:	f7ff ff85 	bl	8001528 <SSD1963_WriteData>
 800161e:	2000      	movs	r0, #0
 8001620:	f7ff ff82 	bl	8001528 <SSD1963_WriteData>
 8001624:	20f0      	movs	r0, #240	; 0xf0
 8001626:	f7ff ff71 	bl	800150c <SSD1963_WriteCommand>
 800162a:	2003      	movs	r0, #3
 800162c:	f7ff ff7c 	bl	8001528 <SSD1963_WriteData>
 8001630:	20e6      	movs	r0, #230	; 0xe6
 8001632:	f7ff ff6b 	bl	800150c <SSD1963_WriteCommand>
 8001636:	2000      	movs	r0, #0
 8001638:	f7ff ff76 	bl	8001528 <SSD1963_WriteData>
 800163c:	20dc      	movs	r0, #220	; 0xdc
 800163e:	f7ff ff73 	bl	8001528 <SSD1963_WriteData>
 8001642:	2098      	movs	r0, #152	; 0x98
 8001644:	f7ff ff70 	bl	8001528 <SSD1963_WriteData>
 8001648:	20b4      	movs	r0, #180	; 0xb4
 800164a:	f7ff ff5f 	bl	800150c <SSD1963_WriteCommand>
 800164e:	2001      	movs	r0, #1
 8001650:	f7ff ff6a 	bl	8001528 <SSD1963_WriteData>
 8001654:	2098      	movs	r0, #152	; 0x98
 8001656:	f7ff ff67 	bl	8001528 <SSD1963_WriteData>
 800165a:	2000      	movs	r0, #0
 800165c:	f7ff ff64 	bl	8001528 <SSD1963_WriteData>
 8001660:	2044      	movs	r0, #68	; 0x44
 8001662:	f7ff ff61 	bl	8001528 <SSD1963_WriteData>
 8001666:	201c      	movs	r0, #28
 8001668:	f7ff ff5e 	bl	8001528 <SSD1963_WriteData>
 800166c:	2000      	movs	r0, #0
 800166e:	f7ff ff5b 	bl	8001528 <SSD1963_WriteData>
 8001672:	2000      	movs	r0, #0
 8001674:	f7ff ff58 	bl	8001528 <SSD1963_WriteData>
 8001678:	2000      	movs	r0, #0
 800167a:	f7ff ff55 	bl	8001528 <SSD1963_WriteData>
 800167e:	20b6      	movs	r0, #182	; 0xb6
 8001680:	f7ff ff44 	bl	800150c <SSD1963_WriteCommand>
 8001684:	2001      	movs	r0, #1
 8001686:	f7ff ff4f 	bl	8001528 <SSD1963_WriteData>
 800168a:	2008      	movs	r0, #8
 800168c:	f7ff ff4c 	bl	8001528 <SSD1963_WriteData>
 8001690:	2000      	movs	r0, #0
 8001692:	f7ff ff49 	bl	8001528 <SSD1963_WriteData>
 8001696:	2014      	movs	r0, #20
 8001698:	f7ff ff46 	bl	8001528 <SSD1963_WriteData>
 800169c:	2003      	movs	r0, #3
 800169e:	f7ff ff43 	bl	8001528 <SSD1963_WriteData>
 80016a2:	2000      	movs	r0, #0
 80016a4:	f7ff ff40 	bl	8001528 <SSD1963_WriteData>
 80016a8:	2000      	movs	r0, #0
 80016aa:	f7ff ff3d 	bl	8001528 <SSD1963_WriteData>
 80016ae:	20b8      	movs	r0, #184	; 0xb8
 80016b0:	f7ff ff2c 	bl	800150c <SSD1963_WriteCommand>
 80016b4:	200f      	movs	r0, #15
 80016b6:	f7ff ff37 	bl	8001528 <SSD1963_WriteData>
 80016ba:	2001      	movs	r0, #1
 80016bc:	f7ff ff34 	bl	8001528 <SSD1963_WriteData>
 80016c0:	2300      	movs	r3, #0
 80016c2:	9300      	str	r3, [sp, #0]
 80016c4:	2000      	movs	r0, #0
 80016c6:	2100      	movs	r1, #0
 80016c8:	f240 123f 	movw	r2, #319	; 0x13f
 80016cc:	23ef      	movs	r3, #239	; 0xef
 80016ce:	f000 f847 	bl	8001760 <SSD1963_FillArea>
 80016d2:	f7ff ff43 	bl	800155c <SSD1963_DisplayOn>
 80016d6:	46bd      	mov	sp, r7
 80016d8:	bd80      	pop	{r7, pc}
 80016da:	bf00      	nop
 80016dc:	20000fd8 	.word	0x20000fd8

080016e0 <SSD1963_SetArea>:
 80016e0:	b580      	push	{r7, lr}
 80016e2:	b082      	sub	sp, #8
 80016e4:	af00      	add	r7, sp, #0
 80016e6:	80f8      	strh	r0, [r7, #6]
 80016e8:	80b9      	strh	r1, [r7, #4]
 80016ea:	807a      	strh	r2, [r7, #2]
 80016ec:	803b      	strh	r3, [r7, #0]
 80016ee:	202a      	movs	r0, #42	; 0x2a
 80016f0:	f7ff ff0c 	bl	800150c <SSD1963_WriteCommand>
 80016f4:	88fb      	ldrh	r3, [r7, #6]
 80016f6:	0a1b      	lsrs	r3, r3, #8
 80016f8:	b29b      	uxth	r3, r3
 80016fa:	4618      	mov	r0, r3
 80016fc:	f7ff ff14 	bl	8001528 <SSD1963_WriteData>
 8001700:	88fb      	ldrh	r3, [r7, #6]
 8001702:	b2db      	uxtb	r3, r3
 8001704:	b29b      	uxth	r3, r3
 8001706:	4618      	mov	r0, r3
 8001708:	f7ff ff0e 	bl	8001528 <SSD1963_WriteData>
 800170c:	887b      	ldrh	r3, [r7, #2]
 800170e:	0a1b      	lsrs	r3, r3, #8
 8001710:	b29b      	uxth	r3, r3
 8001712:	4618      	mov	r0, r3
 8001714:	f7ff ff08 	bl	8001528 <SSD1963_WriteData>
 8001718:	887b      	ldrh	r3, [r7, #2]
 800171a:	b2db      	uxtb	r3, r3
 800171c:	b29b      	uxth	r3, r3
 800171e:	4618      	mov	r0, r3
 8001720:	f7ff ff02 	bl	8001528 <SSD1963_WriteData>
 8001724:	202b      	movs	r0, #43	; 0x2b
 8001726:	f7ff fef1 	bl	800150c <SSD1963_WriteCommand>
 800172a:	88bb      	ldrh	r3, [r7, #4]
 800172c:	0a1b      	lsrs	r3, r3, #8
 800172e:	b29b      	uxth	r3, r3
 8001730:	4618      	mov	r0, r3
 8001732:	f7ff fef9 	bl	8001528 <SSD1963_WriteData>
 8001736:	88bb      	ldrh	r3, [r7, #4]
 8001738:	b2db      	uxtb	r3, r3
 800173a:	b29b      	uxth	r3, r3
 800173c:	4618      	mov	r0, r3
 800173e:	f7ff fef3 	bl	8001528 <SSD1963_WriteData>
 8001742:	883b      	ldrh	r3, [r7, #0]
 8001744:	0a1b      	lsrs	r3, r3, #8
 8001746:	b29b      	uxth	r3, r3
 8001748:	4618      	mov	r0, r3
 800174a:	f7ff feed 	bl	8001528 <SSD1963_WriteData>
 800174e:	883b      	ldrh	r3, [r7, #0]
 8001750:	b2db      	uxtb	r3, r3
 8001752:	b29b      	uxth	r3, r3
 8001754:	4618      	mov	r0, r3
 8001756:	f7ff fee7 	bl	8001528 <SSD1963_WriteData>
 800175a:	3708      	adds	r7, #8
 800175c:	46bd      	mov	sp, r7
 800175e:	bd80      	pop	{r7, pc}

08001760 <SSD1963_FillArea>:
 8001760:	b580      	push	{r7, lr}
 8001762:	b084      	sub	sp, #16
 8001764:	af00      	add	r7, sp, #0
 8001766:	80f8      	strh	r0, [r7, #6]
 8001768:	80b9      	strh	r1, [r7, #4]
 800176a:	807a      	strh	r2, [r7, #2]
 800176c:	803b      	strh	r3, [r7, #0]
 800176e:	88f8      	ldrh	r0, [r7, #6]
 8001770:	88b9      	ldrh	r1, [r7, #4]
 8001772:	887a      	ldrh	r2, [r7, #2]
 8001774:	883b      	ldrh	r3, [r7, #0]
 8001776:	f7ff ffb3 	bl	80016e0 <SSD1963_SetArea>
 800177a:	202c      	movs	r0, #44	; 0x2c
 800177c:	f7ff fec6 	bl	800150c <SSD1963_WriteCommand>
 8001780:	2300      	movs	r3, #0
 8001782:	60fb      	str	r3, [r7, #12]
 8001784:	e006      	b.n	8001794 <SSD1963_FillArea+0x34>
 8001786:	8b3b      	ldrh	r3, [r7, #24]
 8001788:	4618      	mov	r0, r3
 800178a:	f7ff fecd 	bl	8001528 <SSD1963_WriteData>
 800178e:	68fb      	ldr	r3, [r7, #12]
 8001790:	3301      	adds	r3, #1
 8001792:	60fb      	str	r3, [r7, #12]
 8001794:	887a      	ldrh	r2, [r7, #2]
 8001796:	88fb      	ldrh	r3, [r7, #6]
 8001798:	1ad3      	subs	r3, r2, r3
 800179a:	3301      	adds	r3, #1
 800179c:	8839      	ldrh	r1, [r7, #0]
 800179e:	88ba      	ldrh	r2, [r7, #4]
 80017a0:	1a8a      	subs	r2, r1, r2
 80017a2:	3201      	adds	r2, #1
 80017a4:	fb02 f303 	mul.w	r3, r2, r3
 80017a8:	461a      	mov	r2, r3
 80017aa:	68fb      	ldr	r3, [r7, #12]
 80017ac:	429a      	cmp	r2, r3
 80017ae:	d8ea      	bhi.n	8001786 <SSD1963_FillArea+0x26>
 80017b0:	3710      	adds	r7, #16
 80017b2:	46bd      	mov	sp, r7
 80017b4:	bd80      	pop	{r7, pc}
 80017b6:	bf00      	nop

080017b8 <SSD1963_WriteArea>:
 80017b8:	b580      	push	{r7, lr}
 80017ba:	b084      	sub	sp, #16
 80017bc:	af00      	add	r7, sp, #0
 80017be:	80f8      	strh	r0, [r7, #6]
 80017c0:	80b9      	strh	r1, [r7, #4]
 80017c2:	807a      	strh	r2, [r7, #2]
 80017c4:	803b      	strh	r3, [r7, #0]
 80017c6:	88f8      	ldrh	r0, [r7, #6]
 80017c8:	88b9      	ldrh	r1, [r7, #4]
 80017ca:	887a      	ldrh	r2, [r7, #2]
 80017cc:	883b      	ldrh	r3, [r7, #0]
 80017ce:	f7ff ff87 	bl	80016e0 <SSD1963_SetArea>
 80017d2:	202c      	movs	r0, #44	; 0x2c
 80017d4:	f7ff fe9a 	bl	800150c <SSD1963_WriteCommand>
 80017d8:	2300      	movs	r3, #0
 80017da:	60fb      	str	r3, [r7, #12]
 80017dc:	e009      	b.n	80017f2 <SSD1963_WriteArea+0x3a>
 80017de:	69bb      	ldr	r3, [r7, #24]
 80017e0:	1c9a      	adds	r2, r3, #2
 80017e2:	61ba      	str	r2, [r7, #24]
 80017e4:	881b      	ldrh	r3, [r3, #0]
 80017e6:	4618      	mov	r0, r3
 80017e8:	f7ff fe9e 	bl	8001528 <SSD1963_WriteData>
 80017ec:	68fb      	ldr	r3, [r7, #12]
 80017ee:	3301      	adds	r3, #1
 80017f0:	60fb      	str	r3, [r7, #12]
 80017f2:	887a      	ldrh	r2, [r7, #2]
 80017f4:	88fb      	ldrh	r3, [r7, #6]
 80017f6:	1ad3      	subs	r3, r2, r3
 80017f8:	3301      	adds	r3, #1
 80017fa:	8839      	ldrh	r1, [r7, #0]
 80017fc:	88ba      	ldrh	r2, [r7, #4]
 80017fe:	1a8a      	subs	r2, r1, r2
 8001800:	3201      	adds	r2, #1
 8001802:	fb02 f303 	mul.w	r3, r2, r3
 8001806:	461a      	mov	r2, r3
 8001808:	68fb      	ldr	r3, [r7, #12]
 800180a:	429a      	cmp	r2, r3
 800180c:	d8e7      	bhi.n	80017de <SSD1963_WriteArea+0x26>
 800180e:	3710      	adds	r7, #16
 8001810:	46bd      	mov	sp, r7
 8001812:	bd80      	pop	{r7, pc}

08001814 <SSD1963_GetDeviceDescriptorBlock>:
 8001814:	b590      	push	{r4, r7, lr}
 8001816:	b083      	sub	sp, #12
 8001818:	af00      	add	r7, sp, #0
 800181a:	6078      	str	r0, [r7, #4]
 800181c:	20a1      	movs	r0, #161	; 0xa1
 800181e:	f7ff fe75 	bl	800150c <SSD1963_WriteCommand>
 8001822:	f7ff fe8f 	bl	8001544 <SSD1963_ReadData>
 8001826:	4603      	mov	r3, r0
 8001828:	461a      	mov	r2, r3
 800182a:	687b      	ldr	r3, [r7, #4]
 800182c:	801a      	strh	r2, [r3, #0]
 800182e:	687b      	ldr	r3, [r7, #4]
 8001830:	1c9c      	adds	r4, r3, #2
 8001832:	f7ff fe87 	bl	8001544 <SSD1963_ReadData>
 8001836:	4603      	mov	r3, r0
 8001838:	8023      	strh	r3, [r4, #0]
 800183a:	687b      	ldr	r3, [r7, #4]
 800183c:	1d1c      	adds	r4, r3, #4
 800183e:	f7ff fe81 	bl	8001544 <SSD1963_ReadData>
 8001842:	4603      	mov	r3, r0
 8001844:	8023      	strh	r3, [r4, #0]
 8001846:	370c      	adds	r7, #12
 8001848:	46bd      	mov	sp, r7
 800184a:	bd90      	pop	{r4, r7, pc}

0800184c <SSD1963_LLD_Init>:
 800184c:	b580      	push	{r7, lr}
 800184e:	b082      	sub	sp, #8
 8001850:	af00      	add	r7, sp, #0
 8001852:	2302      	movs	r3, #2
 8001854:	717b      	strb	r3, [r7, #5]
 8001856:	2302      	movs	r3, #2
 8001858:	713b      	strb	r3, [r7, #4]
 800185a:	2300      	movs	r3, #0
 800185c:	71fb      	strb	r3, [r7, #7]
 800185e:	2300      	movs	r3, #0
 8001860:	71bb      	strb	r3, [r7, #6]
 8001862:	463b      	mov	r3, r7
 8001864:	4806      	ldr	r0, [pc, #24]	; (8001880 <SSD1963_LLD_Init+0x34>)
 8001866:	4619      	mov	r1, r3
 8001868:	2202      	movs	r2, #2
 800186a:	f7ff fa8f 	bl	8000d8c <CARME_GPIO_Init>
 800186e:	4805      	ldr	r0, [pc, #20]	; (8001884 <SSD1963_LLD_Init+0x38>)
 8001870:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8001874:	2201      	movs	r2, #1
 8001876:	f000 fc31 	bl	80020dc <GPIO_WriteBit>
 800187a:	3708      	adds	r7, #8
 800187c:	46bd      	mov	sp, r7
 800187e:	bd80      	pop	{r7, pc}
 8001880:	200001a4 	.word	0x200001a4
 8001884:	40021c00 	.word	0x40021c00

08001888 <SystemInit>:
 8001888:	b580      	push	{r7, lr}
 800188a:	af00      	add	r7, sp, #0
 800188c:	4b15      	ldr	r3, [pc, #84]	; (80018e4 <SystemInit+0x5c>)
 800188e:	4a15      	ldr	r2, [pc, #84]	; (80018e4 <SystemInit+0x5c>)
 8001890:	f8d2 2088 	ldr.w	r2, [r2, #136]	; 0x88
 8001894:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8001898:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800189c:	4b12      	ldr	r3, [pc, #72]	; (80018e8 <SystemInit+0x60>)
 800189e:	4a12      	ldr	r2, [pc, #72]	; (80018e8 <SystemInit+0x60>)
 80018a0:	6812      	ldr	r2, [r2, #0]
 80018a2:	f042 0201 	orr.w	r2, r2, #1
 80018a6:	601a      	str	r2, [r3, #0]
 80018a8:	4b0f      	ldr	r3, [pc, #60]	; (80018e8 <SystemInit+0x60>)
 80018aa:	2200      	movs	r2, #0
 80018ac:	609a      	str	r2, [r3, #8]
 80018ae:	4a0e      	ldr	r2, [pc, #56]	; (80018e8 <SystemInit+0x60>)
 80018b0:	4b0d      	ldr	r3, [pc, #52]	; (80018e8 <SystemInit+0x60>)
 80018b2:	681b      	ldr	r3, [r3, #0]
 80018b4:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 80018b8:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80018bc:	6013      	str	r3, [r2, #0]
 80018be:	4b0a      	ldr	r3, [pc, #40]	; (80018e8 <SystemInit+0x60>)
 80018c0:	4a0a      	ldr	r2, [pc, #40]	; (80018ec <SystemInit+0x64>)
 80018c2:	605a      	str	r2, [r3, #4]
 80018c4:	4b08      	ldr	r3, [pc, #32]	; (80018e8 <SystemInit+0x60>)
 80018c6:	4a08      	ldr	r2, [pc, #32]	; (80018e8 <SystemInit+0x60>)
 80018c8:	6812      	ldr	r2, [r2, #0]
 80018ca:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80018ce:	601a      	str	r2, [r3, #0]
 80018d0:	4b05      	ldr	r3, [pc, #20]	; (80018e8 <SystemInit+0x60>)
 80018d2:	2200      	movs	r2, #0
 80018d4:	60da      	str	r2, [r3, #12]
 80018d6:	f000 f80b 	bl	80018f0 <SetSysClock>
 80018da:	4b02      	ldr	r3, [pc, #8]	; (80018e4 <SystemInit+0x5c>)
 80018dc:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80018e0:	609a      	str	r2, [r3, #8]
 80018e2:	bd80      	pop	{r7, pc}
 80018e4:	e000ed00 	.word	0xe000ed00
 80018e8:	40023800 	.word	0x40023800
 80018ec:	24003010 	.word	0x24003010

080018f0 <SetSysClock>:
 80018f0:	b480      	push	{r7}
 80018f2:	b083      	sub	sp, #12
 80018f4:	af00      	add	r7, sp, #0
 80018f6:	2300      	movs	r3, #0
 80018f8:	607b      	str	r3, [r7, #4]
 80018fa:	2300      	movs	r3, #0
 80018fc:	603b      	str	r3, [r7, #0]
 80018fe:	4b35      	ldr	r3, [pc, #212]	; (80019d4 <SetSysClock+0xe4>)
 8001900:	4a34      	ldr	r2, [pc, #208]	; (80019d4 <SetSysClock+0xe4>)
 8001902:	6812      	ldr	r2, [r2, #0]
 8001904:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8001908:	601a      	str	r2, [r3, #0]
 800190a:	4b32      	ldr	r3, [pc, #200]	; (80019d4 <SetSysClock+0xe4>)
 800190c:	681b      	ldr	r3, [r3, #0]
 800190e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001912:	603b      	str	r3, [r7, #0]
 8001914:	687b      	ldr	r3, [r7, #4]
 8001916:	3301      	adds	r3, #1
 8001918:	607b      	str	r3, [r7, #4]
 800191a:	683b      	ldr	r3, [r7, #0]
 800191c:	2b00      	cmp	r3, #0
 800191e:	d103      	bne.n	8001928 <SetSysClock+0x38>
 8001920:	687b      	ldr	r3, [r7, #4]
 8001922:	f5b3 4fa0 	cmp.w	r3, #20480	; 0x5000
 8001926:	d1f0      	bne.n	800190a <SetSysClock+0x1a>
 8001928:	4b2a      	ldr	r3, [pc, #168]	; (80019d4 <SetSysClock+0xe4>)
 800192a:	681b      	ldr	r3, [r3, #0]
 800192c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001930:	2b00      	cmp	r3, #0
 8001932:	d002      	beq.n	800193a <SetSysClock+0x4a>
 8001934:	2301      	movs	r3, #1
 8001936:	603b      	str	r3, [r7, #0]
 8001938:	e001      	b.n	800193e <SetSysClock+0x4e>
 800193a:	2300      	movs	r3, #0
 800193c:	603b      	str	r3, [r7, #0]
 800193e:	683b      	ldr	r3, [r7, #0]
 8001940:	2b01      	cmp	r3, #1
 8001942:	d142      	bne.n	80019ca <SetSysClock+0xda>
 8001944:	4b23      	ldr	r3, [pc, #140]	; (80019d4 <SetSysClock+0xe4>)
 8001946:	4a23      	ldr	r2, [pc, #140]	; (80019d4 <SetSysClock+0xe4>)
 8001948:	6c12      	ldr	r2, [r2, #64]	; 0x40
 800194a:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800194e:	641a      	str	r2, [r3, #64]	; 0x40
 8001950:	4b21      	ldr	r3, [pc, #132]	; (80019d8 <SetSysClock+0xe8>)
 8001952:	4a21      	ldr	r2, [pc, #132]	; (80019d8 <SetSysClock+0xe8>)
 8001954:	6812      	ldr	r2, [r2, #0]
 8001956:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 800195a:	601a      	str	r2, [r3, #0]
 800195c:	4b1d      	ldr	r3, [pc, #116]	; (80019d4 <SetSysClock+0xe4>)
 800195e:	4a1d      	ldr	r2, [pc, #116]	; (80019d4 <SetSysClock+0xe4>)
 8001960:	6892      	ldr	r2, [r2, #8]
 8001962:	609a      	str	r2, [r3, #8]
 8001964:	4b1b      	ldr	r3, [pc, #108]	; (80019d4 <SetSysClock+0xe4>)
 8001966:	4a1b      	ldr	r2, [pc, #108]	; (80019d4 <SetSysClock+0xe4>)
 8001968:	6892      	ldr	r2, [r2, #8]
 800196a:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800196e:	609a      	str	r2, [r3, #8]
 8001970:	4b18      	ldr	r3, [pc, #96]	; (80019d4 <SetSysClock+0xe4>)
 8001972:	4a18      	ldr	r2, [pc, #96]	; (80019d4 <SetSysClock+0xe4>)
 8001974:	6892      	ldr	r2, [r2, #8]
 8001976:	f442 52a0 	orr.w	r2, r2, #5120	; 0x1400
 800197a:	609a      	str	r2, [r3, #8]
 800197c:	4b15      	ldr	r3, [pc, #84]	; (80019d4 <SetSysClock+0xe4>)
 800197e:	4a17      	ldr	r2, [pc, #92]	; (80019dc <SetSysClock+0xec>)
 8001980:	605a      	str	r2, [r3, #4]
 8001982:	4b14      	ldr	r3, [pc, #80]	; (80019d4 <SetSysClock+0xe4>)
 8001984:	4a13      	ldr	r2, [pc, #76]	; (80019d4 <SetSysClock+0xe4>)
 8001986:	6812      	ldr	r2, [r2, #0]
 8001988:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 800198c:	601a      	str	r2, [r3, #0]
 800198e:	bf00      	nop
 8001990:	4b10      	ldr	r3, [pc, #64]	; (80019d4 <SetSysClock+0xe4>)
 8001992:	681b      	ldr	r3, [r3, #0]
 8001994:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001998:	2b00      	cmp	r3, #0
 800199a:	d0f9      	beq.n	8001990 <SetSysClock+0xa0>
 800199c:	4b10      	ldr	r3, [pc, #64]	; (80019e0 <SetSysClock+0xf0>)
 800199e:	f240 7205 	movw	r2, #1797	; 0x705
 80019a2:	601a      	str	r2, [r3, #0]
 80019a4:	4b0b      	ldr	r3, [pc, #44]	; (80019d4 <SetSysClock+0xe4>)
 80019a6:	4a0b      	ldr	r2, [pc, #44]	; (80019d4 <SetSysClock+0xe4>)
 80019a8:	6892      	ldr	r2, [r2, #8]
 80019aa:	f022 0203 	bic.w	r2, r2, #3
 80019ae:	609a      	str	r2, [r3, #8]
 80019b0:	4b08      	ldr	r3, [pc, #32]	; (80019d4 <SetSysClock+0xe4>)
 80019b2:	4a08      	ldr	r2, [pc, #32]	; (80019d4 <SetSysClock+0xe4>)
 80019b4:	6892      	ldr	r2, [r2, #8]
 80019b6:	f042 0202 	orr.w	r2, r2, #2
 80019ba:	609a      	str	r2, [r3, #8]
 80019bc:	bf00      	nop
 80019be:	4b05      	ldr	r3, [pc, #20]	; (80019d4 <SetSysClock+0xe4>)
 80019c0:	689b      	ldr	r3, [r3, #8]
 80019c2:	f003 030c 	and.w	r3, r3, #12
 80019c6:	2b08      	cmp	r3, #8
 80019c8:	d1f9      	bne.n	80019be <SetSysClock+0xce>
 80019ca:	370c      	adds	r7, #12
 80019cc:	46bd      	mov	sp, r7
 80019ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019d2:	4770      	bx	lr
 80019d4:	40023800 	.word	0x40023800
 80019d8:	40007000 	.word	0x40007000
 80019dc:	07405419 	.word	0x07405419
 80019e0:	40023c00 	.word	0x40023c00

080019e4 <NVIC_PriorityGroupConfig>:
 80019e4:	b480      	push	{r7}
 80019e6:	b083      	sub	sp, #12
 80019e8:	af00      	add	r7, sp, #0
 80019ea:	6078      	str	r0, [r7, #4]
 80019ec:	4a05      	ldr	r2, [pc, #20]	; (8001a04 <NVIC_PriorityGroupConfig+0x20>)
 80019ee:	687b      	ldr	r3, [r7, #4]
 80019f0:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80019f4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80019f8:	60d3      	str	r3, [r2, #12]
 80019fa:	370c      	adds	r7, #12
 80019fc:	46bd      	mov	sp, r7
 80019fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a02:	4770      	bx	lr
 8001a04:	e000ed00 	.word	0xe000ed00

08001a08 <ADC_DeInit>:
 8001a08:	b580      	push	{r7, lr}
 8001a0a:	af00      	add	r7, sp, #0
 8001a0c:	f44f 7080 	mov.w	r0, #256	; 0x100
 8001a10:	2101      	movs	r1, #1
 8001a12:	f000 fc75 	bl	8002300 <RCC_APB2PeriphResetCmd>
 8001a16:	f44f 7080 	mov.w	r0, #256	; 0x100
 8001a1a:	2100      	movs	r1, #0
 8001a1c:	f000 fc70 	bl	8002300 <RCC_APB2PeriphResetCmd>
 8001a20:	bd80      	pop	{r7, pc}
 8001a22:	bf00      	nop

08001a24 <ADC_Init>:
 8001a24:	b480      	push	{r7}
 8001a26:	b085      	sub	sp, #20
 8001a28:	af00      	add	r7, sp, #0
 8001a2a:	6078      	str	r0, [r7, #4]
 8001a2c:	6039      	str	r1, [r7, #0]
 8001a2e:	2300      	movs	r3, #0
 8001a30:	60fb      	str	r3, [r7, #12]
 8001a32:	2300      	movs	r3, #0
 8001a34:	72fb      	strb	r3, [r7, #11]
 8001a36:	687b      	ldr	r3, [r7, #4]
 8001a38:	685b      	ldr	r3, [r3, #4]
 8001a3a:	60fb      	str	r3, [r7, #12]
 8001a3c:	68fb      	ldr	r3, [r7, #12]
 8001a3e:	f023 7340 	bic.w	r3, r3, #50331648	; 0x3000000
 8001a42:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8001a46:	60fb      	str	r3, [r7, #12]
 8001a48:	683b      	ldr	r3, [r7, #0]
 8001a4a:	791b      	ldrb	r3, [r3, #4]
 8001a4c:	021a      	lsls	r2, r3, #8
 8001a4e:	683b      	ldr	r3, [r7, #0]
 8001a50:	681b      	ldr	r3, [r3, #0]
 8001a52:	4313      	orrs	r3, r2
 8001a54:	68fa      	ldr	r2, [r7, #12]
 8001a56:	4313      	orrs	r3, r2
 8001a58:	60fb      	str	r3, [r7, #12]
 8001a5a:	687b      	ldr	r3, [r7, #4]
 8001a5c:	68fa      	ldr	r2, [r7, #12]
 8001a5e:	605a      	str	r2, [r3, #4]
 8001a60:	687b      	ldr	r3, [r7, #4]
 8001a62:	689b      	ldr	r3, [r3, #8]
 8001a64:	60fb      	str	r3, [r7, #12]
 8001a66:	68fa      	ldr	r2, [r7, #12]
 8001a68:	4b17      	ldr	r3, [pc, #92]	; (8001ac8 <ADC_Init+0xa4>)
 8001a6a:	4013      	ands	r3, r2
 8001a6c:	60fb      	str	r3, [r7, #12]
 8001a6e:	683b      	ldr	r3, [r7, #0]
 8001a70:	691a      	ldr	r2, [r3, #16]
 8001a72:	683b      	ldr	r3, [r7, #0]
 8001a74:	68db      	ldr	r3, [r3, #12]
 8001a76:	431a      	orrs	r2, r3
 8001a78:	683b      	ldr	r3, [r7, #0]
 8001a7a:	689b      	ldr	r3, [r3, #8]
 8001a7c:	431a      	orrs	r2, r3
 8001a7e:	683b      	ldr	r3, [r7, #0]
 8001a80:	795b      	ldrb	r3, [r3, #5]
 8001a82:	005b      	lsls	r3, r3, #1
 8001a84:	4313      	orrs	r3, r2
 8001a86:	68fa      	ldr	r2, [r7, #12]
 8001a88:	4313      	orrs	r3, r2
 8001a8a:	60fb      	str	r3, [r7, #12]
 8001a8c:	687b      	ldr	r3, [r7, #4]
 8001a8e:	68fa      	ldr	r2, [r7, #12]
 8001a90:	609a      	str	r2, [r3, #8]
 8001a92:	687b      	ldr	r3, [r7, #4]
 8001a94:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001a96:	60fb      	str	r3, [r7, #12]
 8001a98:	68fb      	ldr	r3, [r7, #12]
 8001a9a:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8001a9e:	60fb      	str	r3, [r7, #12]
 8001aa0:	683b      	ldr	r3, [r7, #0]
 8001aa2:	7d1b      	ldrb	r3, [r3, #20]
 8001aa4:	3b01      	subs	r3, #1
 8001aa6:	b2da      	uxtb	r2, r3
 8001aa8:	7afb      	ldrb	r3, [r7, #11]
 8001aaa:	4313      	orrs	r3, r2
 8001aac:	72fb      	strb	r3, [r7, #11]
 8001aae:	7afb      	ldrb	r3, [r7, #11]
 8001ab0:	051b      	lsls	r3, r3, #20
 8001ab2:	68fa      	ldr	r2, [r7, #12]
 8001ab4:	4313      	orrs	r3, r2
 8001ab6:	60fb      	str	r3, [r7, #12]
 8001ab8:	687b      	ldr	r3, [r7, #4]
 8001aba:	68fa      	ldr	r2, [r7, #12]
 8001abc:	62da      	str	r2, [r3, #44]	; 0x2c
 8001abe:	3714      	adds	r7, #20
 8001ac0:	46bd      	mov	sp, r7
 8001ac2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ac6:	4770      	bx	lr
 8001ac8:	c0fff7fd 	.word	0xc0fff7fd

08001acc <ADC_StructInit>:
 8001acc:	b480      	push	{r7}
 8001ace:	b083      	sub	sp, #12
 8001ad0:	af00      	add	r7, sp, #0
 8001ad2:	6078      	str	r0, [r7, #4]
 8001ad4:	687b      	ldr	r3, [r7, #4]
 8001ad6:	2200      	movs	r2, #0
 8001ad8:	601a      	str	r2, [r3, #0]
 8001ada:	687b      	ldr	r3, [r7, #4]
 8001adc:	2200      	movs	r2, #0
 8001ade:	711a      	strb	r2, [r3, #4]
 8001ae0:	687b      	ldr	r3, [r7, #4]
 8001ae2:	2200      	movs	r2, #0
 8001ae4:	715a      	strb	r2, [r3, #5]
 8001ae6:	687b      	ldr	r3, [r7, #4]
 8001ae8:	2200      	movs	r2, #0
 8001aea:	609a      	str	r2, [r3, #8]
 8001aec:	687b      	ldr	r3, [r7, #4]
 8001aee:	2200      	movs	r2, #0
 8001af0:	60da      	str	r2, [r3, #12]
 8001af2:	687b      	ldr	r3, [r7, #4]
 8001af4:	2200      	movs	r2, #0
 8001af6:	611a      	str	r2, [r3, #16]
 8001af8:	687b      	ldr	r3, [r7, #4]
 8001afa:	2201      	movs	r2, #1
 8001afc:	751a      	strb	r2, [r3, #20]
 8001afe:	370c      	adds	r7, #12
 8001b00:	46bd      	mov	sp, r7
 8001b02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b06:	4770      	bx	lr

08001b08 <ADC_CommonInit>:
 8001b08:	b480      	push	{r7}
 8001b0a:	b085      	sub	sp, #20
 8001b0c:	af00      	add	r7, sp, #0
 8001b0e:	6078      	str	r0, [r7, #4]
 8001b10:	2300      	movs	r3, #0
 8001b12:	60fb      	str	r3, [r7, #12]
 8001b14:	4b0e      	ldr	r3, [pc, #56]	; (8001b50 <ADC_CommonInit+0x48>)
 8001b16:	685b      	ldr	r3, [r3, #4]
 8001b18:	60fb      	str	r3, [r7, #12]
 8001b1a:	68fa      	ldr	r2, [r7, #12]
 8001b1c:	4b0d      	ldr	r3, [pc, #52]	; (8001b54 <ADC_CommonInit+0x4c>)
 8001b1e:	4013      	ands	r3, r2
 8001b20:	60fb      	str	r3, [r7, #12]
 8001b22:	687b      	ldr	r3, [r7, #4]
 8001b24:	681a      	ldr	r2, [r3, #0]
 8001b26:	687b      	ldr	r3, [r7, #4]
 8001b28:	685b      	ldr	r3, [r3, #4]
 8001b2a:	431a      	orrs	r2, r3
 8001b2c:	687b      	ldr	r3, [r7, #4]
 8001b2e:	689b      	ldr	r3, [r3, #8]
 8001b30:	431a      	orrs	r2, r3
 8001b32:	687b      	ldr	r3, [r7, #4]
 8001b34:	68db      	ldr	r3, [r3, #12]
 8001b36:	4313      	orrs	r3, r2
 8001b38:	68fa      	ldr	r2, [r7, #12]
 8001b3a:	4313      	orrs	r3, r2
 8001b3c:	60fb      	str	r3, [r7, #12]
 8001b3e:	4b04      	ldr	r3, [pc, #16]	; (8001b50 <ADC_CommonInit+0x48>)
 8001b40:	68fa      	ldr	r2, [r7, #12]
 8001b42:	605a      	str	r2, [r3, #4]
 8001b44:	3714      	adds	r7, #20
 8001b46:	46bd      	mov	sp, r7
 8001b48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b4c:	4770      	bx	lr
 8001b4e:	bf00      	nop
 8001b50:	40012300 	.word	0x40012300
 8001b54:	fffc30e0 	.word	0xfffc30e0

08001b58 <ADC_Cmd>:
 8001b58:	b480      	push	{r7}
 8001b5a:	b083      	sub	sp, #12
 8001b5c:	af00      	add	r7, sp, #0
 8001b5e:	6078      	str	r0, [r7, #4]
 8001b60:	460b      	mov	r3, r1
 8001b62:	70fb      	strb	r3, [r7, #3]
 8001b64:	78fb      	ldrb	r3, [r7, #3]
 8001b66:	2b00      	cmp	r3, #0
 8001b68:	d006      	beq.n	8001b78 <ADC_Cmd+0x20>
 8001b6a:	687b      	ldr	r3, [r7, #4]
 8001b6c:	689b      	ldr	r3, [r3, #8]
 8001b6e:	f043 0201 	orr.w	r2, r3, #1
 8001b72:	687b      	ldr	r3, [r7, #4]
 8001b74:	609a      	str	r2, [r3, #8]
 8001b76:	e005      	b.n	8001b84 <ADC_Cmd+0x2c>
 8001b78:	687b      	ldr	r3, [r7, #4]
 8001b7a:	689b      	ldr	r3, [r3, #8]
 8001b7c:	f023 0201 	bic.w	r2, r3, #1
 8001b80:	687b      	ldr	r3, [r7, #4]
 8001b82:	609a      	str	r2, [r3, #8]
 8001b84:	370c      	adds	r7, #12
 8001b86:	46bd      	mov	sp, r7
 8001b88:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b8c:	4770      	bx	lr
 8001b8e:	bf00      	nop

08001b90 <EXTI_GetITStatus>:
 8001b90:	b480      	push	{r7}
 8001b92:	b085      	sub	sp, #20
 8001b94:	af00      	add	r7, sp, #0
 8001b96:	6078      	str	r0, [r7, #4]
 8001b98:	2300      	movs	r3, #0
 8001b9a:	73fb      	strb	r3, [r7, #15]
 8001b9c:	4b08      	ldr	r3, [pc, #32]	; (8001bc0 <EXTI_GetITStatus+0x30>)
 8001b9e:	695a      	ldr	r2, [r3, #20]
 8001ba0:	687b      	ldr	r3, [r7, #4]
 8001ba2:	4013      	ands	r3, r2
 8001ba4:	2b00      	cmp	r3, #0
 8001ba6:	d002      	beq.n	8001bae <EXTI_GetITStatus+0x1e>
 8001ba8:	2301      	movs	r3, #1
 8001baa:	73fb      	strb	r3, [r7, #15]
 8001bac:	e001      	b.n	8001bb2 <EXTI_GetITStatus+0x22>
 8001bae:	2300      	movs	r3, #0
 8001bb0:	73fb      	strb	r3, [r7, #15]
 8001bb2:	7bfb      	ldrb	r3, [r7, #15]
 8001bb4:	4618      	mov	r0, r3
 8001bb6:	3714      	adds	r7, #20
 8001bb8:	46bd      	mov	sp, r7
 8001bba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bbe:	4770      	bx	lr
 8001bc0:	40013c00 	.word	0x40013c00

08001bc4 <EXTI_ClearITPendingBit>:
 8001bc4:	b480      	push	{r7}
 8001bc6:	b083      	sub	sp, #12
 8001bc8:	af00      	add	r7, sp, #0
 8001bca:	6078      	str	r0, [r7, #4]
 8001bcc:	4b03      	ldr	r3, [pc, #12]	; (8001bdc <EXTI_ClearITPendingBit+0x18>)
 8001bce:	687a      	ldr	r2, [r7, #4]
 8001bd0:	615a      	str	r2, [r3, #20]
 8001bd2:	370c      	adds	r7, #12
 8001bd4:	46bd      	mov	sp, r7
 8001bd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bda:	4770      	bx	lr
 8001bdc:	40013c00 	.word	0x40013c00

08001be0 <FSMC_NORSRAMDeInit>:
 8001be0:	b480      	push	{r7}
 8001be2:	b083      	sub	sp, #12
 8001be4:	af00      	add	r7, sp, #0
 8001be6:	6078      	str	r0, [r7, #4]
 8001be8:	687b      	ldr	r3, [r7, #4]
 8001bea:	2b00      	cmp	r3, #0
 8001bec:	d107      	bne.n	8001bfe <FSMC_NORSRAMDeInit+0x1e>
 8001bee:	f04f 4320 	mov.w	r3, #2684354560	; 0xa0000000
 8001bf2:	687a      	ldr	r2, [r7, #4]
 8001bf4:	f243 01db 	movw	r1, #12507	; 0x30db
 8001bf8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8001bfc:	e006      	b.n	8001c0c <FSMC_NORSRAMDeInit+0x2c>
 8001bfe:	f04f 4320 	mov.w	r3, #2684354560	; 0xa0000000
 8001c02:	687a      	ldr	r2, [r7, #4]
 8001c04:	f243 01d2 	movw	r1, #12498	; 0x30d2
 8001c08:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8001c0c:	f04f 4320 	mov.w	r3, #2684354560	; 0xa0000000
 8001c10:	687a      	ldr	r2, [r7, #4]
 8001c12:	3201      	adds	r2, #1
 8001c14:	f06f 4170 	mvn.w	r1, #4026531840	; 0xf0000000
 8001c18:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8001c1c:	4b05      	ldr	r3, [pc, #20]	; (8001c34 <FSMC_NORSRAMDeInit+0x54>)
 8001c1e:	687a      	ldr	r2, [r7, #4]
 8001c20:	f06f 4170 	mvn.w	r1, #4026531840	; 0xf0000000
 8001c24:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8001c28:	370c      	adds	r7, #12
 8001c2a:	46bd      	mov	sp, r7
 8001c2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c30:	4770      	bx	lr
 8001c32:	bf00      	nop
 8001c34:	a0000104 	.word	0xa0000104

08001c38 <FSMC_NORSRAMInit>:
 8001c38:	b480      	push	{r7}
 8001c3a:	b083      	sub	sp, #12
 8001c3c:	af00      	add	r7, sp, #0
 8001c3e:	6078      	str	r0, [r7, #4]
 8001c40:	f04f 4320 	mov.w	r3, #2684354560	; 0xa0000000
 8001c44:	687a      	ldr	r2, [r7, #4]
 8001c46:	6812      	ldr	r2, [r2, #0]
 8001c48:	6879      	ldr	r1, [r7, #4]
 8001c4a:	6848      	ldr	r0, [r1, #4]
 8001c4c:	6879      	ldr	r1, [r7, #4]
 8001c4e:	6889      	ldr	r1, [r1, #8]
 8001c50:	4308      	orrs	r0, r1
 8001c52:	6879      	ldr	r1, [r7, #4]
 8001c54:	68c9      	ldr	r1, [r1, #12]
 8001c56:	4308      	orrs	r0, r1
 8001c58:	6879      	ldr	r1, [r7, #4]
 8001c5a:	6909      	ldr	r1, [r1, #16]
 8001c5c:	4308      	orrs	r0, r1
 8001c5e:	6879      	ldr	r1, [r7, #4]
 8001c60:	6949      	ldr	r1, [r1, #20]
 8001c62:	4308      	orrs	r0, r1
 8001c64:	6879      	ldr	r1, [r7, #4]
 8001c66:	6989      	ldr	r1, [r1, #24]
 8001c68:	4308      	orrs	r0, r1
 8001c6a:	6879      	ldr	r1, [r7, #4]
 8001c6c:	69c9      	ldr	r1, [r1, #28]
 8001c6e:	4308      	orrs	r0, r1
 8001c70:	6879      	ldr	r1, [r7, #4]
 8001c72:	6a09      	ldr	r1, [r1, #32]
 8001c74:	4308      	orrs	r0, r1
 8001c76:	6879      	ldr	r1, [r7, #4]
 8001c78:	6a49      	ldr	r1, [r1, #36]	; 0x24
 8001c7a:	4308      	orrs	r0, r1
 8001c7c:	6879      	ldr	r1, [r7, #4]
 8001c7e:	6a89      	ldr	r1, [r1, #40]	; 0x28
 8001c80:	4308      	orrs	r0, r1
 8001c82:	6879      	ldr	r1, [r7, #4]
 8001c84:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
 8001c86:	4308      	orrs	r0, r1
 8001c88:	6879      	ldr	r1, [r7, #4]
 8001c8a:	6b09      	ldr	r1, [r1, #48]	; 0x30
 8001c8c:	4301      	orrs	r1, r0
 8001c8e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8001c92:	687b      	ldr	r3, [r7, #4]
 8001c94:	689b      	ldr	r3, [r3, #8]
 8001c96:	2b08      	cmp	r3, #8
 8001c98:	d10d      	bne.n	8001cb6 <FSMC_NORSRAMInit+0x7e>
 8001c9a:	f04f 4320 	mov.w	r3, #2684354560	; 0xa0000000
 8001c9e:	687a      	ldr	r2, [r7, #4]
 8001ca0:	6812      	ldr	r2, [r2, #0]
 8001ca2:	f04f 4120 	mov.w	r1, #2684354560	; 0xa0000000
 8001ca6:	6878      	ldr	r0, [r7, #4]
 8001ca8:	6800      	ldr	r0, [r0, #0]
 8001caa:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 8001cae:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 8001cb2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8001cb6:	f04f 4320 	mov.w	r3, #2684354560	; 0xa0000000
 8001cba:	687a      	ldr	r2, [r7, #4]
 8001cbc:	6812      	ldr	r2, [r2, #0]
 8001cbe:	3201      	adds	r2, #1
 8001cc0:	6879      	ldr	r1, [r7, #4]
 8001cc2:	6b49      	ldr	r1, [r1, #52]	; 0x34
 8001cc4:	6808      	ldr	r0, [r1, #0]
 8001cc6:	6879      	ldr	r1, [r7, #4]
 8001cc8:	6b49      	ldr	r1, [r1, #52]	; 0x34
 8001cca:	6849      	ldr	r1, [r1, #4]
 8001ccc:	0109      	lsls	r1, r1, #4
 8001cce:	4308      	orrs	r0, r1
 8001cd0:	6879      	ldr	r1, [r7, #4]
 8001cd2:	6b49      	ldr	r1, [r1, #52]	; 0x34
 8001cd4:	6889      	ldr	r1, [r1, #8]
 8001cd6:	0209      	lsls	r1, r1, #8
 8001cd8:	4308      	orrs	r0, r1
 8001cda:	6879      	ldr	r1, [r7, #4]
 8001cdc:	6b49      	ldr	r1, [r1, #52]	; 0x34
 8001cde:	68c9      	ldr	r1, [r1, #12]
 8001ce0:	0409      	lsls	r1, r1, #16
 8001ce2:	4308      	orrs	r0, r1
 8001ce4:	6879      	ldr	r1, [r7, #4]
 8001ce6:	6b49      	ldr	r1, [r1, #52]	; 0x34
 8001ce8:	6909      	ldr	r1, [r1, #16]
 8001cea:	0509      	lsls	r1, r1, #20
 8001cec:	4308      	orrs	r0, r1
 8001cee:	6879      	ldr	r1, [r7, #4]
 8001cf0:	6b49      	ldr	r1, [r1, #52]	; 0x34
 8001cf2:	6949      	ldr	r1, [r1, #20]
 8001cf4:	0609      	lsls	r1, r1, #24
 8001cf6:	4308      	orrs	r0, r1
 8001cf8:	6879      	ldr	r1, [r7, #4]
 8001cfa:	6b49      	ldr	r1, [r1, #52]	; 0x34
 8001cfc:	6989      	ldr	r1, [r1, #24]
 8001cfe:	4301      	orrs	r1, r0
 8001d00:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8001d04:	687b      	ldr	r3, [r7, #4]
 8001d06:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001d08:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8001d0c:	d120      	bne.n	8001d50 <FSMC_NORSRAMInit+0x118>
 8001d0e:	4b16      	ldr	r3, [pc, #88]	; (8001d68 <FSMC_NORSRAMInit+0x130>)
 8001d10:	687a      	ldr	r2, [r7, #4]
 8001d12:	6812      	ldr	r2, [r2, #0]
 8001d14:	6879      	ldr	r1, [r7, #4]
 8001d16:	6b89      	ldr	r1, [r1, #56]	; 0x38
 8001d18:	6808      	ldr	r0, [r1, #0]
 8001d1a:	6879      	ldr	r1, [r7, #4]
 8001d1c:	6b89      	ldr	r1, [r1, #56]	; 0x38
 8001d1e:	6849      	ldr	r1, [r1, #4]
 8001d20:	0109      	lsls	r1, r1, #4
 8001d22:	4308      	orrs	r0, r1
 8001d24:	6879      	ldr	r1, [r7, #4]
 8001d26:	6b89      	ldr	r1, [r1, #56]	; 0x38
 8001d28:	6889      	ldr	r1, [r1, #8]
 8001d2a:	0209      	lsls	r1, r1, #8
 8001d2c:	4308      	orrs	r0, r1
 8001d2e:	6879      	ldr	r1, [r7, #4]
 8001d30:	6b89      	ldr	r1, [r1, #56]	; 0x38
 8001d32:	6909      	ldr	r1, [r1, #16]
 8001d34:	0509      	lsls	r1, r1, #20
 8001d36:	4308      	orrs	r0, r1
 8001d38:	6879      	ldr	r1, [r7, #4]
 8001d3a:	6b89      	ldr	r1, [r1, #56]	; 0x38
 8001d3c:	6949      	ldr	r1, [r1, #20]
 8001d3e:	0609      	lsls	r1, r1, #24
 8001d40:	4308      	orrs	r0, r1
 8001d42:	6879      	ldr	r1, [r7, #4]
 8001d44:	6b89      	ldr	r1, [r1, #56]	; 0x38
 8001d46:	6989      	ldr	r1, [r1, #24]
 8001d48:	4301      	orrs	r1, r0
 8001d4a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8001d4e:	e006      	b.n	8001d5e <FSMC_NORSRAMInit+0x126>
 8001d50:	4b05      	ldr	r3, [pc, #20]	; (8001d68 <FSMC_NORSRAMInit+0x130>)
 8001d52:	687a      	ldr	r2, [r7, #4]
 8001d54:	6812      	ldr	r2, [r2, #0]
 8001d56:	f06f 4170 	mvn.w	r1, #4026531840	; 0xf0000000
 8001d5a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8001d5e:	370c      	adds	r7, #12
 8001d60:	46bd      	mov	sp, r7
 8001d62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d66:	4770      	bx	lr
 8001d68:	a0000104 	.word	0xa0000104

08001d6c <FSMC_NORSRAMCmd>:
 8001d6c:	b480      	push	{r7}
 8001d6e:	b083      	sub	sp, #12
 8001d70:	af00      	add	r7, sp, #0
 8001d72:	6078      	str	r0, [r7, #4]
 8001d74:	460b      	mov	r3, r1
 8001d76:	70fb      	strb	r3, [r7, #3]
 8001d78:	78fb      	ldrb	r3, [r7, #3]
 8001d7a:	2b00      	cmp	r3, #0
 8001d7c:	d00c      	beq.n	8001d98 <FSMC_NORSRAMCmd+0x2c>
 8001d7e:	f04f 4320 	mov.w	r3, #2684354560	; 0xa0000000
 8001d82:	f04f 4220 	mov.w	r2, #2684354560	; 0xa0000000
 8001d86:	6879      	ldr	r1, [r7, #4]
 8001d88:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 8001d8c:	f042 0101 	orr.w	r1, r2, #1
 8001d90:	687a      	ldr	r2, [r7, #4]
 8001d92:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8001d96:	e00b      	b.n	8001db0 <FSMC_NORSRAMCmd+0x44>
 8001d98:	f04f 4220 	mov.w	r2, #2684354560	; 0xa0000000
 8001d9c:	f04f 4320 	mov.w	r3, #2684354560	; 0xa0000000
 8001da0:	6879      	ldr	r1, [r7, #4]
 8001da2:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
 8001da6:	4b05      	ldr	r3, [pc, #20]	; (8001dbc <FSMC_NORSRAMCmd+0x50>)
 8001da8:	400b      	ands	r3, r1
 8001daa:	6879      	ldr	r1, [r7, #4]
 8001dac:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
 8001db0:	370c      	adds	r7, #12
 8001db2:	46bd      	mov	sp, r7
 8001db4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001db8:	4770      	bx	lr
 8001dba:	bf00      	nop
 8001dbc:	000ffffe 	.word	0x000ffffe

08001dc0 <GPIO_DeInit>:
 8001dc0:	b580      	push	{r7, lr}
 8001dc2:	b082      	sub	sp, #8
 8001dc4:	af00      	add	r7, sp, #0
 8001dc6:	6078      	str	r0, [r7, #4]
 8001dc8:	687a      	ldr	r2, [r7, #4]
 8001dca:	4b4b      	ldr	r3, [pc, #300]	; (8001ef8 <GPIO_DeInit+0x138>)
 8001dcc:	429a      	cmp	r2, r3
 8001dce:	d108      	bne.n	8001de2 <GPIO_DeInit+0x22>
 8001dd0:	2001      	movs	r0, #1
 8001dd2:	2101      	movs	r1, #1
 8001dd4:	f000 fa58 	bl	8002288 <RCC_AHB1PeriphResetCmd>
 8001dd8:	2001      	movs	r0, #1
 8001dda:	2100      	movs	r1, #0
 8001ddc:	f000 fa54 	bl	8002288 <RCC_AHB1PeriphResetCmd>
 8001de0:	e086      	b.n	8001ef0 <GPIO_DeInit+0x130>
 8001de2:	687a      	ldr	r2, [r7, #4]
 8001de4:	4b45      	ldr	r3, [pc, #276]	; (8001efc <GPIO_DeInit+0x13c>)
 8001de6:	429a      	cmp	r2, r3
 8001de8:	d108      	bne.n	8001dfc <GPIO_DeInit+0x3c>
 8001dea:	2002      	movs	r0, #2
 8001dec:	2101      	movs	r1, #1
 8001dee:	f000 fa4b 	bl	8002288 <RCC_AHB1PeriphResetCmd>
 8001df2:	2002      	movs	r0, #2
 8001df4:	2100      	movs	r1, #0
 8001df6:	f000 fa47 	bl	8002288 <RCC_AHB1PeriphResetCmd>
 8001dfa:	e079      	b.n	8001ef0 <GPIO_DeInit+0x130>
 8001dfc:	687a      	ldr	r2, [r7, #4]
 8001dfe:	4b40      	ldr	r3, [pc, #256]	; (8001f00 <GPIO_DeInit+0x140>)
 8001e00:	429a      	cmp	r2, r3
 8001e02:	d108      	bne.n	8001e16 <GPIO_DeInit+0x56>
 8001e04:	2004      	movs	r0, #4
 8001e06:	2101      	movs	r1, #1
 8001e08:	f000 fa3e 	bl	8002288 <RCC_AHB1PeriphResetCmd>
 8001e0c:	2004      	movs	r0, #4
 8001e0e:	2100      	movs	r1, #0
 8001e10:	f000 fa3a 	bl	8002288 <RCC_AHB1PeriphResetCmd>
 8001e14:	e06c      	b.n	8001ef0 <GPIO_DeInit+0x130>
 8001e16:	687a      	ldr	r2, [r7, #4]
 8001e18:	4b3a      	ldr	r3, [pc, #232]	; (8001f04 <GPIO_DeInit+0x144>)
 8001e1a:	429a      	cmp	r2, r3
 8001e1c:	d108      	bne.n	8001e30 <GPIO_DeInit+0x70>
 8001e1e:	2008      	movs	r0, #8
 8001e20:	2101      	movs	r1, #1
 8001e22:	f000 fa31 	bl	8002288 <RCC_AHB1PeriphResetCmd>
 8001e26:	2008      	movs	r0, #8
 8001e28:	2100      	movs	r1, #0
 8001e2a:	f000 fa2d 	bl	8002288 <RCC_AHB1PeriphResetCmd>
 8001e2e:	e05f      	b.n	8001ef0 <GPIO_DeInit+0x130>
 8001e30:	687a      	ldr	r2, [r7, #4]
 8001e32:	4b35      	ldr	r3, [pc, #212]	; (8001f08 <GPIO_DeInit+0x148>)
 8001e34:	429a      	cmp	r2, r3
 8001e36:	d108      	bne.n	8001e4a <GPIO_DeInit+0x8a>
 8001e38:	2010      	movs	r0, #16
 8001e3a:	2101      	movs	r1, #1
 8001e3c:	f000 fa24 	bl	8002288 <RCC_AHB1PeriphResetCmd>
 8001e40:	2010      	movs	r0, #16
 8001e42:	2100      	movs	r1, #0
 8001e44:	f000 fa20 	bl	8002288 <RCC_AHB1PeriphResetCmd>
 8001e48:	e052      	b.n	8001ef0 <GPIO_DeInit+0x130>
 8001e4a:	687a      	ldr	r2, [r7, #4]
 8001e4c:	4b2f      	ldr	r3, [pc, #188]	; (8001f0c <GPIO_DeInit+0x14c>)
 8001e4e:	429a      	cmp	r2, r3
 8001e50:	d108      	bne.n	8001e64 <GPIO_DeInit+0xa4>
 8001e52:	2020      	movs	r0, #32
 8001e54:	2101      	movs	r1, #1
 8001e56:	f000 fa17 	bl	8002288 <RCC_AHB1PeriphResetCmd>
 8001e5a:	2020      	movs	r0, #32
 8001e5c:	2100      	movs	r1, #0
 8001e5e:	f000 fa13 	bl	8002288 <RCC_AHB1PeriphResetCmd>
 8001e62:	e045      	b.n	8001ef0 <GPIO_DeInit+0x130>
 8001e64:	687a      	ldr	r2, [r7, #4]
 8001e66:	4b2a      	ldr	r3, [pc, #168]	; (8001f10 <GPIO_DeInit+0x150>)
 8001e68:	429a      	cmp	r2, r3
 8001e6a:	d108      	bne.n	8001e7e <GPIO_DeInit+0xbe>
 8001e6c:	2040      	movs	r0, #64	; 0x40
 8001e6e:	2101      	movs	r1, #1
 8001e70:	f000 fa0a 	bl	8002288 <RCC_AHB1PeriphResetCmd>
 8001e74:	2040      	movs	r0, #64	; 0x40
 8001e76:	2100      	movs	r1, #0
 8001e78:	f000 fa06 	bl	8002288 <RCC_AHB1PeriphResetCmd>
 8001e7c:	e038      	b.n	8001ef0 <GPIO_DeInit+0x130>
 8001e7e:	687a      	ldr	r2, [r7, #4]
 8001e80:	4b24      	ldr	r3, [pc, #144]	; (8001f14 <GPIO_DeInit+0x154>)
 8001e82:	429a      	cmp	r2, r3
 8001e84:	d108      	bne.n	8001e98 <GPIO_DeInit+0xd8>
 8001e86:	2080      	movs	r0, #128	; 0x80
 8001e88:	2101      	movs	r1, #1
 8001e8a:	f000 f9fd 	bl	8002288 <RCC_AHB1PeriphResetCmd>
 8001e8e:	2080      	movs	r0, #128	; 0x80
 8001e90:	2100      	movs	r1, #0
 8001e92:	f000 f9f9 	bl	8002288 <RCC_AHB1PeriphResetCmd>
 8001e96:	e02b      	b.n	8001ef0 <GPIO_DeInit+0x130>
 8001e98:	687a      	ldr	r2, [r7, #4]
 8001e9a:	4b1f      	ldr	r3, [pc, #124]	; (8001f18 <GPIO_DeInit+0x158>)
 8001e9c:	429a      	cmp	r2, r3
 8001e9e:	d10a      	bne.n	8001eb6 <GPIO_DeInit+0xf6>
 8001ea0:	f44f 7080 	mov.w	r0, #256	; 0x100
 8001ea4:	2101      	movs	r1, #1
 8001ea6:	f000 f9ef 	bl	8002288 <RCC_AHB1PeriphResetCmd>
 8001eaa:	f44f 7080 	mov.w	r0, #256	; 0x100
 8001eae:	2100      	movs	r1, #0
 8001eb0:	f000 f9ea 	bl	8002288 <RCC_AHB1PeriphResetCmd>
 8001eb4:	e01c      	b.n	8001ef0 <GPIO_DeInit+0x130>
 8001eb6:	687a      	ldr	r2, [r7, #4]
 8001eb8:	4b18      	ldr	r3, [pc, #96]	; (8001f1c <GPIO_DeInit+0x15c>)
 8001eba:	429a      	cmp	r2, r3
 8001ebc:	d10a      	bne.n	8001ed4 <GPIO_DeInit+0x114>
 8001ebe:	f44f 7000 	mov.w	r0, #512	; 0x200
 8001ec2:	2101      	movs	r1, #1
 8001ec4:	f000 f9e0 	bl	8002288 <RCC_AHB1PeriphResetCmd>
 8001ec8:	f44f 7000 	mov.w	r0, #512	; 0x200
 8001ecc:	2100      	movs	r1, #0
 8001ece:	f000 f9db 	bl	8002288 <RCC_AHB1PeriphResetCmd>
 8001ed2:	e00d      	b.n	8001ef0 <GPIO_DeInit+0x130>
 8001ed4:	687a      	ldr	r2, [r7, #4]
 8001ed6:	4b12      	ldr	r3, [pc, #72]	; (8001f20 <GPIO_DeInit+0x160>)
 8001ed8:	429a      	cmp	r2, r3
 8001eda:	d109      	bne.n	8001ef0 <GPIO_DeInit+0x130>
 8001edc:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8001ee0:	2101      	movs	r1, #1
 8001ee2:	f000 f9d1 	bl	8002288 <RCC_AHB1PeriphResetCmd>
 8001ee6:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8001eea:	2100      	movs	r1, #0
 8001eec:	f000 f9cc 	bl	8002288 <RCC_AHB1PeriphResetCmd>
 8001ef0:	3708      	adds	r7, #8
 8001ef2:	46bd      	mov	sp, r7
 8001ef4:	bd80      	pop	{r7, pc}
 8001ef6:	bf00      	nop
 8001ef8:	40020000 	.word	0x40020000
 8001efc:	40020400 	.word	0x40020400
 8001f00:	40020800 	.word	0x40020800
 8001f04:	40020c00 	.word	0x40020c00
 8001f08:	40021000 	.word	0x40021000
 8001f0c:	40021400 	.word	0x40021400
 8001f10:	40021800 	.word	0x40021800
 8001f14:	40021c00 	.word	0x40021c00
 8001f18:	40022000 	.word	0x40022000
 8001f1c:	40022400 	.word	0x40022400
 8001f20:	40022800 	.word	0x40022800

08001f24 <GPIO_Init>:
 8001f24:	b480      	push	{r7}
 8001f26:	b087      	sub	sp, #28
 8001f28:	af00      	add	r7, sp, #0
 8001f2a:	6078      	str	r0, [r7, #4]
 8001f2c:	6039      	str	r1, [r7, #0]
 8001f2e:	2300      	movs	r3, #0
 8001f30:	617b      	str	r3, [r7, #20]
 8001f32:	2300      	movs	r3, #0
 8001f34:	613b      	str	r3, [r7, #16]
 8001f36:	2300      	movs	r3, #0
 8001f38:	60fb      	str	r3, [r7, #12]
 8001f3a:	2300      	movs	r3, #0
 8001f3c:	617b      	str	r3, [r7, #20]
 8001f3e:	e076      	b.n	800202e <GPIO_Init+0x10a>
 8001f40:	697b      	ldr	r3, [r7, #20]
 8001f42:	2201      	movs	r2, #1
 8001f44:	fa02 f303 	lsl.w	r3, r2, r3
 8001f48:	613b      	str	r3, [r7, #16]
 8001f4a:	683b      	ldr	r3, [r7, #0]
 8001f4c:	681a      	ldr	r2, [r3, #0]
 8001f4e:	693b      	ldr	r3, [r7, #16]
 8001f50:	4013      	ands	r3, r2
 8001f52:	60fb      	str	r3, [r7, #12]
 8001f54:	68fa      	ldr	r2, [r7, #12]
 8001f56:	693b      	ldr	r3, [r7, #16]
 8001f58:	429a      	cmp	r2, r3
 8001f5a:	d165      	bne.n	8002028 <GPIO_Init+0x104>
 8001f5c:	687b      	ldr	r3, [r7, #4]
 8001f5e:	681a      	ldr	r2, [r3, #0]
 8001f60:	697b      	ldr	r3, [r7, #20]
 8001f62:	005b      	lsls	r3, r3, #1
 8001f64:	2103      	movs	r1, #3
 8001f66:	fa01 f303 	lsl.w	r3, r1, r3
 8001f6a:	43db      	mvns	r3, r3
 8001f6c:	401a      	ands	r2, r3
 8001f6e:	687b      	ldr	r3, [r7, #4]
 8001f70:	601a      	str	r2, [r3, #0]
 8001f72:	687b      	ldr	r3, [r7, #4]
 8001f74:	681a      	ldr	r2, [r3, #0]
 8001f76:	683b      	ldr	r3, [r7, #0]
 8001f78:	791b      	ldrb	r3, [r3, #4]
 8001f7a:	4619      	mov	r1, r3
 8001f7c:	697b      	ldr	r3, [r7, #20]
 8001f7e:	005b      	lsls	r3, r3, #1
 8001f80:	fa01 f303 	lsl.w	r3, r1, r3
 8001f84:	431a      	orrs	r2, r3
 8001f86:	687b      	ldr	r3, [r7, #4]
 8001f88:	601a      	str	r2, [r3, #0]
 8001f8a:	683b      	ldr	r3, [r7, #0]
 8001f8c:	791b      	ldrb	r3, [r3, #4]
 8001f8e:	2b01      	cmp	r3, #1
 8001f90:	d003      	beq.n	8001f9a <GPIO_Init+0x76>
 8001f92:	683b      	ldr	r3, [r7, #0]
 8001f94:	791b      	ldrb	r3, [r3, #4]
 8001f96:	2b02      	cmp	r3, #2
 8001f98:	d12e      	bne.n	8001ff8 <GPIO_Init+0xd4>
 8001f9a:	687b      	ldr	r3, [r7, #4]
 8001f9c:	689a      	ldr	r2, [r3, #8]
 8001f9e:	697b      	ldr	r3, [r7, #20]
 8001fa0:	005b      	lsls	r3, r3, #1
 8001fa2:	2103      	movs	r1, #3
 8001fa4:	fa01 f303 	lsl.w	r3, r1, r3
 8001fa8:	43db      	mvns	r3, r3
 8001faa:	401a      	ands	r2, r3
 8001fac:	687b      	ldr	r3, [r7, #4]
 8001fae:	609a      	str	r2, [r3, #8]
 8001fb0:	687b      	ldr	r3, [r7, #4]
 8001fb2:	689a      	ldr	r2, [r3, #8]
 8001fb4:	683b      	ldr	r3, [r7, #0]
 8001fb6:	795b      	ldrb	r3, [r3, #5]
 8001fb8:	4619      	mov	r1, r3
 8001fba:	697b      	ldr	r3, [r7, #20]
 8001fbc:	005b      	lsls	r3, r3, #1
 8001fbe:	fa01 f303 	lsl.w	r3, r1, r3
 8001fc2:	431a      	orrs	r2, r3
 8001fc4:	687b      	ldr	r3, [r7, #4]
 8001fc6:	609a      	str	r2, [r3, #8]
 8001fc8:	687b      	ldr	r3, [r7, #4]
 8001fca:	685a      	ldr	r2, [r3, #4]
 8001fcc:	697b      	ldr	r3, [r7, #20]
 8001fce:	b29b      	uxth	r3, r3
 8001fd0:	2101      	movs	r1, #1
 8001fd2:	fa01 f303 	lsl.w	r3, r1, r3
 8001fd6:	43db      	mvns	r3, r3
 8001fd8:	401a      	ands	r2, r3
 8001fda:	687b      	ldr	r3, [r7, #4]
 8001fdc:	605a      	str	r2, [r3, #4]
 8001fde:	687b      	ldr	r3, [r7, #4]
 8001fe0:	685a      	ldr	r2, [r3, #4]
 8001fe2:	683b      	ldr	r3, [r7, #0]
 8001fe4:	799b      	ldrb	r3, [r3, #6]
 8001fe6:	4619      	mov	r1, r3
 8001fe8:	697b      	ldr	r3, [r7, #20]
 8001fea:	b29b      	uxth	r3, r3
 8001fec:	fa01 f303 	lsl.w	r3, r1, r3
 8001ff0:	b29b      	uxth	r3, r3
 8001ff2:	431a      	orrs	r2, r3
 8001ff4:	687b      	ldr	r3, [r7, #4]
 8001ff6:	605a      	str	r2, [r3, #4]
 8001ff8:	687b      	ldr	r3, [r7, #4]
 8001ffa:	68da      	ldr	r2, [r3, #12]
 8001ffc:	697b      	ldr	r3, [r7, #20]
 8001ffe:	b29b      	uxth	r3, r3
 8002000:	005b      	lsls	r3, r3, #1
 8002002:	2103      	movs	r1, #3
 8002004:	fa01 f303 	lsl.w	r3, r1, r3
 8002008:	43db      	mvns	r3, r3
 800200a:	401a      	ands	r2, r3
 800200c:	687b      	ldr	r3, [r7, #4]
 800200e:	60da      	str	r2, [r3, #12]
 8002010:	687b      	ldr	r3, [r7, #4]
 8002012:	68da      	ldr	r2, [r3, #12]
 8002014:	683b      	ldr	r3, [r7, #0]
 8002016:	79db      	ldrb	r3, [r3, #7]
 8002018:	4619      	mov	r1, r3
 800201a:	697b      	ldr	r3, [r7, #20]
 800201c:	005b      	lsls	r3, r3, #1
 800201e:	fa01 f303 	lsl.w	r3, r1, r3
 8002022:	431a      	orrs	r2, r3
 8002024:	687b      	ldr	r3, [r7, #4]
 8002026:	60da      	str	r2, [r3, #12]
 8002028:	697b      	ldr	r3, [r7, #20]
 800202a:	3301      	adds	r3, #1
 800202c:	617b      	str	r3, [r7, #20]
 800202e:	697b      	ldr	r3, [r7, #20]
 8002030:	2b0f      	cmp	r3, #15
 8002032:	d985      	bls.n	8001f40 <GPIO_Init+0x1c>
 8002034:	371c      	adds	r7, #28
 8002036:	46bd      	mov	sp, r7
 8002038:	f85d 7b04 	ldr.w	r7, [sp], #4
 800203c:	4770      	bx	lr
 800203e:	bf00      	nop

08002040 <GPIO_StructInit>:
 8002040:	b480      	push	{r7}
 8002042:	b083      	sub	sp, #12
 8002044:	af00      	add	r7, sp, #0
 8002046:	6078      	str	r0, [r7, #4]
 8002048:	687b      	ldr	r3, [r7, #4]
 800204a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800204e:	601a      	str	r2, [r3, #0]
 8002050:	687b      	ldr	r3, [r7, #4]
 8002052:	2200      	movs	r2, #0
 8002054:	711a      	strb	r2, [r3, #4]
 8002056:	687b      	ldr	r3, [r7, #4]
 8002058:	2200      	movs	r2, #0
 800205a:	715a      	strb	r2, [r3, #5]
 800205c:	687b      	ldr	r3, [r7, #4]
 800205e:	2200      	movs	r2, #0
 8002060:	719a      	strb	r2, [r3, #6]
 8002062:	687b      	ldr	r3, [r7, #4]
 8002064:	2200      	movs	r2, #0
 8002066:	71da      	strb	r2, [r3, #7]
 8002068:	370c      	adds	r7, #12
 800206a:	46bd      	mov	sp, r7
 800206c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002070:	4770      	bx	lr
 8002072:	bf00      	nop

08002074 <GPIO_ReadInputDataBit>:
 8002074:	b480      	push	{r7}
 8002076:	b085      	sub	sp, #20
 8002078:	af00      	add	r7, sp, #0
 800207a:	6078      	str	r0, [r7, #4]
 800207c:	460b      	mov	r3, r1
 800207e:	807b      	strh	r3, [r7, #2]
 8002080:	2300      	movs	r3, #0
 8002082:	73fb      	strb	r3, [r7, #15]
 8002084:	687b      	ldr	r3, [r7, #4]
 8002086:	691a      	ldr	r2, [r3, #16]
 8002088:	887b      	ldrh	r3, [r7, #2]
 800208a:	4013      	ands	r3, r2
 800208c:	2b00      	cmp	r3, #0
 800208e:	d002      	beq.n	8002096 <GPIO_ReadInputDataBit+0x22>
 8002090:	2301      	movs	r3, #1
 8002092:	73fb      	strb	r3, [r7, #15]
 8002094:	e001      	b.n	800209a <GPIO_ReadInputDataBit+0x26>
 8002096:	2300      	movs	r3, #0
 8002098:	73fb      	strb	r3, [r7, #15]
 800209a:	7bfb      	ldrb	r3, [r7, #15]
 800209c:	4618      	mov	r0, r3
 800209e:	3714      	adds	r7, #20
 80020a0:	46bd      	mov	sp, r7
 80020a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020a6:	4770      	bx	lr

080020a8 <GPIO_ReadOutputDataBit>:
 80020a8:	b480      	push	{r7}
 80020aa:	b085      	sub	sp, #20
 80020ac:	af00      	add	r7, sp, #0
 80020ae:	6078      	str	r0, [r7, #4]
 80020b0:	460b      	mov	r3, r1
 80020b2:	807b      	strh	r3, [r7, #2]
 80020b4:	2300      	movs	r3, #0
 80020b6:	73fb      	strb	r3, [r7, #15]
 80020b8:	687b      	ldr	r3, [r7, #4]
 80020ba:	695a      	ldr	r2, [r3, #20]
 80020bc:	887b      	ldrh	r3, [r7, #2]
 80020be:	4013      	ands	r3, r2
 80020c0:	2b00      	cmp	r3, #0
 80020c2:	d002      	beq.n	80020ca <GPIO_ReadOutputDataBit+0x22>
 80020c4:	2301      	movs	r3, #1
 80020c6:	73fb      	strb	r3, [r7, #15]
 80020c8:	e001      	b.n	80020ce <GPIO_ReadOutputDataBit+0x26>
 80020ca:	2300      	movs	r3, #0
 80020cc:	73fb      	strb	r3, [r7, #15]
 80020ce:	7bfb      	ldrb	r3, [r7, #15]
 80020d0:	4618      	mov	r0, r3
 80020d2:	3714      	adds	r7, #20
 80020d4:	46bd      	mov	sp, r7
 80020d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020da:	4770      	bx	lr

080020dc <GPIO_WriteBit>:
 80020dc:	b480      	push	{r7}
 80020de:	b083      	sub	sp, #12
 80020e0:	af00      	add	r7, sp, #0
 80020e2:	6078      	str	r0, [r7, #4]
 80020e4:	4613      	mov	r3, r2
 80020e6:	460a      	mov	r2, r1
 80020e8:	807a      	strh	r2, [r7, #2]
 80020ea:	707b      	strb	r3, [r7, #1]
 80020ec:	787b      	ldrb	r3, [r7, #1]
 80020ee:	2b00      	cmp	r3, #0
 80020f0:	d003      	beq.n	80020fa <GPIO_WriteBit+0x1e>
 80020f2:	687b      	ldr	r3, [r7, #4]
 80020f4:	887a      	ldrh	r2, [r7, #2]
 80020f6:	831a      	strh	r2, [r3, #24]
 80020f8:	e002      	b.n	8002100 <GPIO_WriteBit+0x24>
 80020fa:	687b      	ldr	r3, [r7, #4]
 80020fc:	887a      	ldrh	r2, [r7, #2]
 80020fe:	835a      	strh	r2, [r3, #26]
 8002100:	370c      	adds	r7, #12
 8002102:	46bd      	mov	sp, r7
 8002104:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002108:	4770      	bx	lr
 800210a:	bf00      	nop

0800210c <GPIO_PinAFConfig>:
 800210c:	b480      	push	{r7}
 800210e:	b085      	sub	sp, #20
 8002110:	af00      	add	r7, sp, #0
 8002112:	6078      	str	r0, [r7, #4]
 8002114:	4613      	mov	r3, r2
 8002116:	460a      	mov	r2, r1
 8002118:	807a      	strh	r2, [r7, #2]
 800211a:	707b      	strb	r3, [r7, #1]
 800211c:	2300      	movs	r3, #0
 800211e:	60fb      	str	r3, [r7, #12]
 8002120:	2300      	movs	r3, #0
 8002122:	60bb      	str	r3, [r7, #8]
 8002124:	787a      	ldrb	r2, [r7, #1]
 8002126:	887b      	ldrh	r3, [r7, #2]
 8002128:	f003 0307 	and.w	r3, r3, #7
 800212c:	009b      	lsls	r3, r3, #2
 800212e:	fa02 f303 	lsl.w	r3, r2, r3
 8002132:	60fb      	str	r3, [r7, #12]
 8002134:	887b      	ldrh	r3, [r7, #2]
 8002136:	08db      	lsrs	r3, r3, #3
 8002138:	b29b      	uxth	r3, r3
 800213a:	461a      	mov	r2, r3
 800213c:	887b      	ldrh	r3, [r7, #2]
 800213e:	08db      	lsrs	r3, r3, #3
 8002140:	b29b      	uxth	r3, r3
 8002142:	4619      	mov	r1, r3
 8002144:	687b      	ldr	r3, [r7, #4]
 8002146:	3108      	adds	r1, #8
 8002148:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
 800214c:	887b      	ldrh	r3, [r7, #2]
 800214e:	f003 0307 	and.w	r3, r3, #7
 8002152:	009b      	lsls	r3, r3, #2
 8002154:	200f      	movs	r0, #15
 8002156:	fa00 f303 	lsl.w	r3, r0, r3
 800215a:	43db      	mvns	r3, r3
 800215c:	4019      	ands	r1, r3
 800215e:	687b      	ldr	r3, [r7, #4]
 8002160:	3208      	adds	r2, #8
 8002162:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8002166:	887b      	ldrh	r3, [r7, #2]
 8002168:	08db      	lsrs	r3, r3, #3
 800216a:	b29b      	uxth	r3, r3
 800216c:	461a      	mov	r2, r3
 800216e:	687b      	ldr	r3, [r7, #4]
 8002170:	3208      	adds	r2, #8
 8002172:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8002176:	68fb      	ldr	r3, [r7, #12]
 8002178:	4313      	orrs	r3, r2
 800217a:	60bb      	str	r3, [r7, #8]
 800217c:	887b      	ldrh	r3, [r7, #2]
 800217e:	08db      	lsrs	r3, r3, #3
 8002180:	b29b      	uxth	r3, r3
 8002182:	461a      	mov	r2, r3
 8002184:	687b      	ldr	r3, [r7, #4]
 8002186:	3208      	adds	r2, #8
 8002188:	68b9      	ldr	r1, [r7, #8]
 800218a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800218e:	3714      	adds	r7, #20
 8002190:	46bd      	mov	sp, r7
 8002192:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002196:	4770      	bx	lr

08002198 <RCC_AHB1PeriphClockCmd>:
 8002198:	b480      	push	{r7}
 800219a:	b083      	sub	sp, #12
 800219c:	af00      	add	r7, sp, #0
 800219e:	6078      	str	r0, [r7, #4]
 80021a0:	460b      	mov	r3, r1
 80021a2:	70fb      	strb	r3, [r7, #3]
 80021a4:	78fb      	ldrb	r3, [r7, #3]
 80021a6:	2b00      	cmp	r3, #0
 80021a8:	d006      	beq.n	80021b8 <RCC_AHB1PeriphClockCmd+0x20>
 80021aa:	4b09      	ldr	r3, [pc, #36]	; (80021d0 <RCC_AHB1PeriphClockCmd+0x38>)
 80021ac:	4a08      	ldr	r2, [pc, #32]	; (80021d0 <RCC_AHB1PeriphClockCmd+0x38>)
 80021ae:	6b11      	ldr	r1, [r2, #48]	; 0x30
 80021b0:	687a      	ldr	r2, [r7, #4]
 80021b2:	430a      	orrs	r2, r1
 80021b4:	631a      	str	r2, [r3, #48]	; 0x30
 80021b6:	e006      	b.n	80021c6 <RCC_AHB1PeriphClockCmd+0x2e>
 80021b8:	4b05      	ldr	r3, [pc, #20]	; (80021d0 <RCC_AHB1PeriphClockCmd+0x38>)
 80021ba:	4a05      	ldr	r2, [pc, #20]	; (80021d0 <RCC_AHB1PeriphClockCmd+0x38>)
 80021bc:	6b11      	ldr	r1, [r2, #48]	; 0x30
 80021be:	687a      	ldr	r2, [r7, #4]
 80021c0:	43d2      	mvns	r2, r2
 80021c2:	400a      	ands	r2, r1
 80021c4:	631a      	str	r2, [r3, #48]	; 0x30
 80021c6:	370c      	adds	r7, #12
 80021c8:	46bd      	mov	sp, r7
 80021ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021ce:	4770      	bx	lr
 80021d0:	40023800 	.word	0x40023800

080021d4 <RCC_AHB3PeriphClockCmd>:
 80021d4:	b480      	push	{r7}
 80021d6:	b083      	sub	sp, #12
 80021d8:	af00      	add	r7, sp, #0
 80021da:	6078      	str	r0, [r7, #4]
 80021dc:	460b      	mov	r3, r1
 80021de:	70fb      	strb	r3, [r7, #3]
 80021e0:	78fb      	ldrb	r3, [r7, #3]
 80021e2:	2b00      	cmp	r3, #0
 80021e4:	d006      	beq.n	80021f4 <RCC_AHB3PeriphClockCmd+0x20>
 80021e6:	4b09      	ldr	r3, [pc, #36]	; (800220c <RCC_AHB3PeriphClockCmd+0x38>)
 80021e8:	4a08      	ldr	r2, [pc, #32]	; (800220c <RCC_AHB3PeriphClockCmd+0x38>)
 80021ea:	6b91      	ldr	r1, [r2, #56]	; 0x38
 80021ec:	687a      	ldr	r2, [r7, #4]
 80021ee:	430a      	orrs	r2, r1
 80021f0:	639a      	str	r2, [r3, #56]	; 0x38
 80021f2:	e006      	b.n	8002202 <RCC_AHB3PeriphClockCmd+0x2e>
 80021f4:	4b05      	ldr	r3, [pc, #20]	; (800220c <RCC_AHB3PeriphClockCmd+0x38>)
 80021f6:	4a05      	ldr	r2, [pc, #20]	; (800220c <RCC_AHB3PeriphClockCmd+0x38>)
 80021f8:	6b91      	ldr	r1, [r2, #56]	; 0x38
 80021fa:	687a      	ldr	r2, [r7, #4]
 80021fc:	43d2      	mvns	r2, r2
 80021fe:	400a      	ands	r2, r1
 8002200:	639a      	str	r2, [r3, #56]	; 0x38
 8002202:	370c      	adds	r7, #12
 8002204:	46bd      	mov	sp, r7
 8002206:	f85d 7b04 	ldr.w	r7, [sp], #4
 800220a:	4770      	bx	lr
 800220c:	40023800 	.word	0x40023800

08002210 <RCC_APB1PeriphClockCmd>:
 8002210:	b480      	push	{r7}
 8002212:	b083      	sub	sp, #12
 8002214:	af00      	add	r7, sp, #0
 8002216:	6078      	str	r0, [r7, #4]
 8002218:	460b      	mov	r3, r1
 800221a:	70fb      	strb	r3, [r7, #3]
 800221c:	78fb      	ldrb	r3, [r7, #3]
 800221e:	2b00      	cmp	r3, #0
 8002220:	d006      	beq.n	8002230 <RCC_APB1PeriphClockCmd+0x20>
 8002222:	4b09      	ldr	r3, [pc, #36]	; (8002248 <RCC_APB1PeriphClockCmd+0x38>)
 8002224:	4a08      	ldr	r2, [pc, #32]	; (8002248 <RCC_APB1PeriphClockCmd+0x38>)
 8002226:	6c11      	ldr	r1, [r2, #64]	; 0x40
 8002228:	687a      	ldr	r2, [r7, #4]
 800222a:	430a      	orrs	r2, r1
 800222c:	641a      	str	r2, [r3, #64]	; 0x40
 800222e:	e006      	b.n	800223e <RCC_APB1PeriphClockCmd+0x2e>
 8002230:	4b05      	ldr	r3, [pc, #20]	; (8002248 <RCC_APB1PeriphClockCmd+0x38>)
 8002232:	4a05      	ldr	r2, [pc, #20]	; (8002248 <RCC_APB1PeriphClockCmd+0x38>)
 8002234:	6c11      	ldr	r1, [r2, #64]	; 0x40
 8002236:	687a      	ldr	r2, [r7, #4]
 8002238:	43d2      	mvns	r2, r2
 800223a:	400a      	ands	r2, r1
 800223c:	641a      	str	r2, [r3, #64]	; 0x40
 800223e:	370c      	adds	r7, #12
 8002240:	46bd      	mov	sp, r7
 8002242:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002246:	4770      	bx	lr
 8002248:	40023800 	.word	0x40023800

0800224c <RCC_APB2PeriphClockCmd>:
 800224c:	b480      	push	{r7}
 800224e:	b083      	sub	sp, #12
 8002250:	af00      	add	r7, sp, #0
 8002252:	6078      	str	r0, [r7, #4]
 8002254:	460b      	mov	r3, r1
 8002256:	70fb      	strb	r3, [r7, #3]
 8002258:	78fb      	ldrb	r3, [r7, #3]
 800225a:	2b00      	cmp	r3, #0
 800225c:	d006      	beq.n	800226c <RCC_APB2PeriphClockCmd+0x20>
 800225e:	4b09      	ldr	r3, [pc, #36]	; (8002284 <RCC_APB2PeriphClockCmd+0x38>)
 8002260:	4a08      	ldr	r2, [pc, #32]	; (8002284 <RCC_APB2PeriphClockCmd+0x38>)
 8002262:	6c51      	ldr	r1, [r2, #68]	; 0x44
 8002264:	687a      	ldr	r2, [r7, #4]
 8002266:	430a      	orrs	r2, r1
 8002268:	645a      	str	r2, [r3, #68]	; 0x44
 800226a:	e006      	b.n	800227a <RCC_APB2PeriphClockCmd+0x2e>
 800226c:	4b05      	ldr	r3, [pc, #20]	; (8002284 <RCC_APB2PeriphClockCmd+0x38>)
 800226e:	4a05      	ldr	r2, [pc, #20]	; (8002284 <RCC_APB2PeriphClockCmd+0x38>)
 8002270:	6c51      	ldr	r1, [r2, #68]	; 0x44
 8002272:	687a      	ldr	r2, [r7, #4]
 8002274:	43d2      	mvns	r2, r2
 8002276:	400a      	ands	r2, r1
 8002278:	645a      	str	r2, [r3, #68]	; 0x44
 800227a:	370c      	adds	r7, #12
 800227c:	46bd      	mov	sp, r7
 800227e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002282:	4770      	bx	lr
 8002284:	40023800 	.word	0x40023800

08002288 <RCC_AHB1PeriphResetCmd>:
 8002288:	b480      	push	{r7}
 800228a:	b083      	sub	sp, #12
 800228c:	af00      	add	r7, sp, #0
 800228e:	6078      	str	r0, [r7, #4]
 8002290:	460b      	mov	r3, r1
 8002292:	70fb      	strb	r3, [r7, #3]
 8002294:	78fb      	ldrb	r3, [r7, #3]
 8002296:	2b00      	cmp	r3, #0
 8002298:	d006      	beq.n	80022a8 <RCC_AHB1PeriphResetCmd+0x20>
 800229a:	4b09      	ldr	r3, [pc, #36]	; (80022c0 <RCC_AHB1PeriphResetCmd+0x38>)
 800229c:	4a08      	ldr	r2, [pc, #32]	; (80022c0 <RCC_AHB1PeriphResetCmd+0x38>)
 800229e:	6911      	ldr	r1, [r2, #16]
 80022a0:	687a      	ldr	r2, [r7, #4]
 80022a2:	430a      	orrs	r2, r1
 80022a4:	611a      	str	r2, [r3, #16]
 80022a6:	e006      	b.n	80022b6 <RCC_AHB1PeriphResetCmd+0x2e>
 80022a8:	4b05      	ldr	r3, [pc, #20]	; (80022c0 <RCC_AHB1PeriphResetCmd+0x38>)
 80022aa:	4a05      	ldr	r2, [pc, #20]	; (80022c0 <RCC_AHB1PeriphResetCmd+0x38>)
 80022ac:	6911      	ldr	r1, [r2, #16]
 80022ae:	687a      	ldr	r2, [r7, #4]
 80022b0:	43d2      	mvns	r2, r2
 80022b2:	400a      	ands	r2, r1
 80022b4:	611a      	str	r2, [r3, #16]
 80022b6:	370c      	adds	r7, #12
 80022b8:	46bd      	mov	sp, r7
 80022ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022be:	4770      	bx	lr
 80022c0:	40023800 	.word	0x40023800

080022c4 <RCC_APB1PeriphResetCmd>:
 80022c4:	b480      	push	{r7}
 80022c6:	b083      	sub	sp, #12
 80022c8:	af00      	add	r7, sp, #0
 80022ca:	6078      	str	r0, [r7, #4]
 80022cc:	460b      	mov	r3, r1
 80022ce:	70fb      	strb	r3, [r7, #3]
 80022d0:	78fb      	ldrb	r3, [r7, #3]
 80022d2:	2b00      	cmp	r3, #0
 80022d4:	d006      	beq.n	80022e4 <RCC_APB1PeriphResetCmd+0x20>
 80022d6:	4b09      	ldr	r3, [pc, #36]	; (80022fc <RCC_APB1PeriphResetCmd+0x38>)
 80022d8:	4a08      	ldr	r2, [pc, #32]	; (80022fc <RCC_APB1PeriphResetCmd+0x38>)
 80022da:	6a11      	ldr	r1, [r2, #32]
 80022dc:	687a      	ldr	r2, [r7, #4]
 80022de:	430a      	orrs	r2, r1
 80022e0:	621a      	str	r2, [r3, #32]
 80022e2:	e006      	b.n	80022f2 <RCC_APB1PeriphResetCmd+0x2e>
 80022e4:	4b05      	ldr	r3, [pc, #20]	; (80022fc <RCC_APB1PeriphResetCmd+0x38>)
 80022e6:	4a05      	ldr	r2, [pc, #20]	; (80022fc <RCC_APB1PeriphResetCmd+0x38>)
 80022e8:	6a11      	ldr	r1, [r2, #32]
 80022ea:	687a      	ldr	r2, [r7, #4]
 80022ec:	43d2      	mvns	r2, r2
 80022ee:	400a      	ands	r2, r1
 80022f0:	621a      	str	r2, [r3, #32]
 80022f2:	370c      	adds	r7, #12
 80022f4:	46bd      	mov	sp, r7
 80022f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022fa:	4770      	bx	lr
 80022fc:	40023800 	.word	0x40023800

08002300 <RCC_APB2PeriphResetCmd>:
 8002300:	b480      	push	{r7}
 8002302:	b083      	sub	sp, #12
 8002304:	af00      	add	r7, sp, #0
 8002306:	6078      	str	r0, [r7, #4]
 8002308:	460b      	mov	r3, r1
 800230a:	70fb      	strb	r3, [r7, #3]
 800230c:	78fb      	ldrb	r3, [r7, #3]
 800230e:	2b00      	cmp	r3, #0
 8002310:	d006      	beq.n	8002320 <RCC_APB2PeriphResetCmd+0x20>
 8002312:	4b09      	ldr	r3, [pc, #36]	; (8002338 <RCC_APB2PeriphResetCmd+0x38>)
 8002314:	4a08      	ldr	r2, [pc, #32]	; (8002338 <RCC_APB2PeriphResetCmd+0x38>)
 8002316:	6a51      	ldr	r1, [r2, #36]	; 0x24
 8002318:	687a      	ldr	r2, [r7, #4]
 800231a:	430a      	orrs	r2, r1
 800231c:	625a      	str	r2, [r3, #36]	; 0x24
 800231e:	e006      	b.n	800232e <RCC_APB2PeriphResetCmd+0x2e>
 8002320:	4b05      	ldr	r3, [pc, #20]	; (8002338 <RCC_APB2PeriphResetCmd+0x38>)
 8002322:	4a05      	ldr	r2, [pc, #20]	; (8002338 <RCC_APB2PeriphResetCmd+0x38>)
 8002324:	6a51      	ldr	r1, [r2, #36]	; 0x24
 8002326:	687a      	ldr	r2, [r7, #4]
 8002328:	43d2      	mvns	r2, r2
 800232a:	400a      	ands	r2, r1
 800232c:	625a      	str	r2, [r3, #36]	; 0x24
 800232e:	370c      	adds	r7, #12
 8002330:	46bd      	mov	sp, r7
 8002332:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002336:	4770      	bx	lr
 8002338:	40023800 	.word	0x40023800

0800233c <SPI_I2S_DeInit>:
 800233c:	b580      	push	{r7, lr}
 800233e:	b082      	sub	sp, #8
 8002340:	af00      	add	r7, sp, #0
 8002342:	6078      	str	r0, [r7, #4]
 8002344:	687a      	ldr	r2, [r7, #4]
 8002346:	4b2d      	ldr	r3, [pc, #180]	; (80023fc <SPI_I2S_DeInit+0xc0>)
 8002348:	429a      	cmp	r2, r3
 800234a:	d10a      	bne.n	8002362 <SPI_I2S_DeInit+0x26>
 800234c:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 8002350:	2101      	movs	r1, #1
 8002352:	f7ff ffd5 	bl	8002300 <RCC_APB2PeriphResetCmd>
 8002356:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 800235a:	2100      	movs	r1, #0
 800235c:	f7ff ffd0 	bl	8002300 <RCC_APB2PeriphResetCmd>
 8002360:	e049      	b.n	80023f6 <SPI_I2S_DeInit+0xba>
 8002362:	687a      	ldr	r2, [r7, #4]
 8002364:	4b26      	ldr	r3, [pc, #152]	; (8002400 <SPI_I2S_DeInit+0xc4>)
 8002366:	429a      	cmp	r2, r3
 8002368:	d10a      	bne.n	8002380 <SPI_I2S_DeInit+0x44>
 800236a:	f44f 4080 	mov.w	r0, #16384	; 0x4000
 800236e:	2101      	movs	r1, #1
 8002370:	f7ff ffa8 	bl	80022c4 <RCC_APB1PeriphResetCmd>
 8002374:	f44f 4080 	mov.w	r0, #16384	; 0x4000
 8002378:	2100      	movs	r1, #0
 800237a:	f7ff ffa3 	bl	80022c4 <RCC_APB1PeriphResetCmd>
 800237e:	e03a      	b.n	80023f6 <SPI_I2S_DeInit+0xba>
 8002380:	687a      	ldr	r2, [r7, #4]
 8002382:	4b20      	ldr	r3, [pc, #128]	; (8002404 <SPI_I2S_DeInit+0xc8>)
 8002384:	429a      	cmp	r2, r3
 8002386:	d10a      	bne.n	800239e <SPI_I2S_DeInit+0x62>
 8002388:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 800238c:	2101      	movs	r1, #1
 800238e:	f7ff ff99 	bl	80022c4 <RCC_APB1PeriphResetCmd>
 8002392:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 8002396:	2100      	movs	r1, #0
 8002398:	f7ff ff94 	bl	80022c4 <RCC_APB1PeriphResetCmd>
 800239c:	e02b      	b.n	80023f6 <SPI_I2S_DeInit+0xba>
 800239e:	687a      	ldr	r2, [r7, #4]
 80023a0:	4b19      	ldr	r3, [pc, #100]	; (8002408 <SPI_I2S_DeInit+0xcc>)
 80023a2:	429a      	cmp	r2, r3
 80023a4:	d10a      	bne.n	80023bc <SPI_I2S_DeInit+0x80>
 80023a6:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 80023aa:	2101      	movs	r1, #1
 80023ac:	f7ff ffa8 	bl	8002300 <RCC_APB2PeriphResetCmd>
 80023b0:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 80023b4:	2100      	movs	r1, #0
 80023b6:	f7ff ffa3 	bl	8002300 <RCC_APB2PeriphResetCmd>
 80023ba:	e01c      	b.n	80023f6 <SPI_I2S_DeInit+0xba>
 80023bc:	687a      	ldr	r2, [r7, #4]
 80023be:	4b13      	ldr	r3, [pc, #76]	; (800240c <SPI_I2S_DeInit+0xd0>)
 80023c0:	429a      	cmp	r2, r3
 80023c2:	d10a      	bne.n	80023da <SPI_I2S_DeInit+0x9e>
 80023c4:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80023c8:	2101      	movs	r1, #1
 80023ca:	f7ff ff99 	bl	8002300 <RCC_APB2PeriphResetCmd>
 80023ce:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80023d2:	2100      	movs	r1, #0
 80023d4:	f7ff ff94 	bl	8002300 <RCC_APB2PeriphResetCmd>
 80023d8:	e00d      	b.n	80023f6 <SPI_I2S_DeInit+0xba>
 80023da:	687a      	ldr	r2, [r7, #4]
 80023dc:	4b0c      	ldr	r3, [pc, #48]	; (8002410 <SPI_I2S_DeInit+0xd4>)
 80023de:	429a      	cmp	r2, r3
 80023e0:	d109      	bne.n	80023f6 <SPI_I2S_DeInit+0xba>
 80023e2:	f44f 1000 	mov.w	r0, #2097152	; 0x200000
 80023e6:	2101      	movs	r1, #1
 80023e8:	f7ff ff8a 	bl	8002300 <RCC_APB2PeriphResetCmd>
 80023ec:	f44f 1000 	mov.w	r0, #2097152	; 0x200000
 80023f0:	2100      	movs	r1, #0
 80023f2:	f7ff ff85 	bl	8002300 <RCC_APB2PeriphResetCmd>
 80023f6:	3708      	adds	r7, #8
 80023f8:	46bd      	mov	sp, r7
 80023fa:	bd80      	pop	{r7, pc}
 80023fc:	40013000 	.word	0x40013000
 8002400:	40003800 	.word	0x40003800
 8002404:	40003c00 	.word	0x40003c00
 8002408:	40013400 	.word	0x40013400
 800240c:	40015000 	.word	0x40015000
 8002410:	40015400 	.word	0x40015400

08002414 <SPI_Init>:
 8002414:	b480      	push	{r7}
 8002416:	b085      	sub	sp, #20
 8002418:	af00      	add	r7, sp, #0
 800241a:	6078      	str	r0, [r7, #4]
 800241c:	6039      	str	r1, [r7, #0]
 800241e:	2300      	movs	r3, #0
 8002420:	81fb      	strh	r3, [r7, #14]
 8002422:	687b      	ldr	r3, [r7, #4]
 8002424:	881b      	ldrh	r3, [r3, #0]
 8002426:	81fb      	strh	r3, [r7, #14]
 8002428:	89fb      	ldrh	r3, [r7, #14]
 800242a:	f403 5341 	and.w	r3, r3, #12352	; 0x3040
 800242e:	81fb      	strh	r3, [r7, #14]
 8002430:	683b      	ldr	r3, [r7, #0]
 8002432:	881a      	ldrh	r2, [r3, #0]
 8002434:	683b      	ldr	r3, [r7, #0]
 8002436:	885b      	ldrh	r3, [r3, #2]
 8002438:	4313      	orrs	r3, r2
 800243a:	b29a      	uxth	r2, r3
 800243c:	683b      	ldr	r3, [r7, #0]
 800243e:	889b      	ldrh	r3, [r3, #4]
 8002440:	4313      	orrs	r3, r2
 8002442:	b29a      	uxth	r2, r3
 8002444:	683b      	ldr	r3, [r7, #0]
 8002446:	88db      	ldrh	r3, [r3, #6]
 8002448:	4313      	orrs	r3, r2
 800244a:	b29a      	uxth	r2, r3
 800244c:	683b      	ldr	r3, [r7, #0]
 800244e:	891b      	ldrh	r3, [r3, #8]
 8002450:	4313      	orrs	r3, r2
 8002452:	b29a      	uxth	r2, r3
 8002454:	683b      	ldr	r3, [r7, #0]
 8002456:	895b      	ldrh	r3, [r3, #10]
 8002458:	4313      	orrs	r3, r2
 800245a:	b29a      	uxth	r2, r3
 800245c:	683b      	ldr	r3, [r7, #0]
 800245e:	899b      	ldrh	r3, [r3, #12]
 8002460:	4313      	orrs	r3, r2
 8002462:	b29a      	uxth	r2, r3
 8002464:	683b      	ldr	r3, [r7, #0]
 8002466:	89db      	ldrh	r3, [r3, #14]
 8002468:	4313      	orrs	r3, r2
 800246a:	b29a      	uxth	r2, r3
 800246c:	89fb      	ldrh	r3, [r7, #14]
 800246e:	4313      	orrs	r3, r2
 8002470:	81fb      	strh	r3, [r7, #14]
 8002472:	687b      	ldr	r3, [r7, #4]
 8002474:	89fa      	ldrh	r2, [r7, #14]
 8002476:	801a      	strh	r2, [r3, #0]
 8002478:	687b      	ldr	r3, [r7, #4]
 800247a:	8b9b      	ldrh	r3, [r3, #28]
 800247c:	b29b      	uxth	r3, r3
 800247e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8002482:	b29a      	uxth	r2, r3
 8002484:	687b      	ldr	r3, [r7, #4]
 8002486:	839a      	strh	r2, [r3, #28]
 8002488:	683b      	ldr	r3, [r7, #0]
 800248a:	8a1a      	ldrh	r2, [r3, #16]
 800248c:	687b      	ldr	r3, [r7, #4]
 800248e:	821a      	strh	r2, [r3, #16]
 8002490:	3714      	adds	r7, #20
 8002492:	46bd      	mov	sp, r7
 8002494:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002498:	4770      	bx	lr
 800249a:	bf00      	nop

0800249c <SPI_StructInit>:
 800249c:	b480      	push	{r7}
 800249e:	b083      	sub	sp, #12
 80024a0:	af00      	add	r7, sp, #0
 80024a2:	6078      	str	r0, [r7, #4]
 80024a4:	687b      	ldr	r3, [r7, #4]
 80024a6:	2200      	movs	r2, #0
 80024a8:	801a      	strh	r2, [r3, #0]
 80024aa:	687b      	ldr	r3, [r7, #4]
 80024ac:	2200      	movs	r2, #0
 80024ae:	805a      	strh	r2, [r3, #2]
 80024b0:	687b      	ldr	r3, [r7, #4]
 80024b2:	2200      	movs	r2, #0
 80024b4:	809a      	strh	r2, [r3, #4]
 80024b6:	687b      	ldr	r3, [r7, #4]
 80024b8:	2200      	movs	r2, #0
 80024ba:	80da      	strh	r2, [r3, #6]
 80024bc:	687b      	ldr	r3, [r7, #4]
 80024be:	2200      	movs	r2, #0
 80024c0:	811a      	strh	r2, [r3, #8]
 80024c2:	687b      	ldr	r3, [r7, #4]
 80024c4:	2200      	movs	r2, #0
 80024c6:	815a      	strh	r2, [r3, #10]
 80024c8:	687b      	ldr	r3, [r7, #4]
 80024ca:	2200      	movs	r2, #0
 80024cc:	819a      	strh	r2, [r3, #12]
 80024ce:	687b      	ldr	r3, [r7, #4]
 80024d0:	2200      	movs	r2, #0
 80024d2:	81da      	strh	r2, [r3, #14]
 80024d4:	687b      	ldr	r3, [r7, #4]
 80024d6:	2207      	movs	r2, #7
 80024d8:	821a      	strh	r2, [r3, #16]
 80024da:	370c      	adds	r7, #12
 80024dc:	46bd      	mov	sp, r7
 80024de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024e2:	4770      	bx	lr

080024e4 <SPI_Cmd>:
 80024e4:	b480      	push	{r7}
 80024e6:	b083      	sub	sp, #12
 80024e8:	af00      	add	r7, sp, #0
 80024ea:	6078      	str	r0, [r7, #4]
 80024ec:	460b      	mov	r3, r1
 80024ee:	70fb      	strb	r3, [r7, #3]
 80024f0:	78fb      	ldrb	r3, [r7, #3]
 80024f2:	2b00      	cmp	r3, #0
 80024f4:	d008      	beq.n	8002508 <SPI_Cmd+0x24>
 80024f6:	687b      	ldr	r3, [r7, #4]
 80024f8:	881b      	ldrh	r3, [r3, #0]
 80024fa:	b29b      	uxth	r3, r3
 80024fc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8002500:	b29a      	uxth	r2, r3
 8002502:	687b      	ldr	r3, [r7, #4]
 8002504:	801a      	strh	r2, [r3, #0]
 8002506:	e007      	b.n	8002518 <SPI_Cmd+0x34>
 8002508:	687b      	ldr	r3, [r7, #4]
 800250a:	881b      	ldrh	r3, [r3, #0]
 800250c:	b29b      	uxth	r3, r3
 800250e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8002512:	b29a      	uxth	r2, r3
 8002514:	687b      	ldr	r3, [r7, #4]
 8002516:	801a      	strh	r2, [r3, #0]
 8002518:	370c      	adds	r7, #12
 800251a:	46bd      	mov	sp, r7
 800251c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002520:	4770      	bx	lr
 8002522:	bf00      	nop

08002524 <LCD_WriteArea>:
 8002524:	b590      	push	{r4, r7, lr}
 8002526:	b085      	sub	sp, #20
 8002528:	af02      	add	r7, sp, #8
 800252a:	80f8      	strh	r0, [r7, #6]
 800252c:	80b9      	strh	r1, [r7, #4]
 800252e:	807a      	strh	r2, [r7, #2]
 8002530:	803b      	strh	r3, [r7, #0]
 8002532:	88f8      	ldrh	r0, [r7, #6]
 8002534:	88b9      	ldrh	r1, [r7, #4]
 8002536:	887a      	ldrh	r2, [r7, #2]
 8002538:	883b      	ldrh	r3, [r7, #0]
 800253a:	69bc      	ldr	r4, [r7, #24]
 800253c:	9400      	str	r4, [sp, #0]
 800253e:	f7ff f93b 	bl	80017b8 <SSD1963_WriteArea>
 8002542:	370c      	adds	r7, #12
 8002544:	46bd      	mov	sp, r7
 8002546:	bd90      	pop	{r4, r7, pc}

08002548 <LCD_DrawChar>:
 8002548:	b590      	push	{r4, r7, lr}
 800254a:	b0d1      	sub	sp, #324	; 0x144
 800254c:	af02      	add	r7, sp, #8
 800254e:	4604      	mov	r4, r0
 8002550:	4608      	mov	r0, r1
 8002552:	4611      	mov	r1, r2
 8002554:	461a      	mov	r2, r3
 8002556:	1dbb      	adds	r3, r7, #6
 8002558:	801c      	strh	r4, [r3, #0]
 800255a:	1d3b      	adds	r3, r7, #4
 800255c:	8018      	strh	r0, [r3, #0]
 800255e:	1cbb      	adds	r3, r7, #2
 8002560:	8019      	strh	r1, [r3, #0]
 8002562:	463b      	mov	r3, r7
 8002564:	801a      	strh	r2, [r3, #0]
 8002566:	2300      	movs	r3, #0
 8002568:	f8c7 3134 	str.w	r3, [r7, #308]	; 0x134
 800256c:	2300      	movs	r3, #0
 800256e:	f8c7 3130 	str.w	r3, [r7, #304]	; 0x130
 8002572:	2300      	movs	r3, #0
 8002574:	f887 312f 	strb.w	r3, [r7, #303]	; 0x12f
 8002578:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 800257c:	785b      	ldrb	r3, [r3, #1]
 800257e:	f8c7 3130 	str.w	r3, [r7, #304]	; 0x130
 8002582:	e043      	b.n	800260c <LCD_DrawChar+0xc4>
 8002584:	2300      	movs	r3, #0
 8002586:	f8c7 3134 	str.w	r3, [r7, #308]	; 0x134
 800258a:	e032      	b.n	80025f2 <LCD_DrawChar+0xaa>
 800258c:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 8002590:	789b      	ldrb	r3, [r3, #2]
 8002592:	f8d7 2134 	ldr.w	r2, [r7, #308]	; 0x134
 8002596:	fb02 f303 	mul.w	r3, r2, r3
 800259a:	f8d7 214c 	ldr.w	r2, [r7, #332]	; 0x14c
 800259e:	4413      	add	r3, r2
 80025a0:	f8c7 3128 	str.w	r3, [r7, #296]	; 0x128
 80025a4:	f8d7 3128 	ldr.w	r3, [r7, #296]	; 0x128
 80025a8:	681a      	ldr	r2, [r3, #0]
 80025aa:	f8d7 3130 	ldr.w	r3, [r7, #304]	; 0x130
 80025ae:	3b01      	subs	r3, #1
 80025b0:	2101      	movs	r1, #1
 80025b2:	fa01 f303 	lsl.w	r3, r1, r3
 80025b6:	4013      	ands	r3, r2
 80025b8:	2b00      	cmp	r3, #0
 80025ba:	d108      	bne.n	80025ce <LCD_DrawChar+0x86>
 80025bc:	f897 212f 	ldrb.w	r2, [r7, #303]	; 0x12f
 80025c0:	f107 0308 	add.w	r3, r7, #8
 80025c4:	1cb9      	adds	r1, r7, #2
 80025c6:	8809      	ldrh	r1, [r1, #0]
 80025c8:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80025cc:	e007      	b.n	80025de <LCD_DrawChar+0x96>
 80025ce:	f897 212f 	ldrb.w	r2, [r7, #303]	; 0x12f
 80025d2:	f107 0308 	add.w	r3, r7, #8
 80025d6:	4639      	mov	r1, r7
 80025d8:	8809      	ldrh	r1, [r1, #0]
 80025da:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80025de:	f897 312f 	ldrb.w	r3, [r7, #303]	; 0x12f
 80025e2:	3301      	adds	r3, #1
 80025e4:	f887 312f 	strb.w	r3, [r7, #303]	; 0x12f
 80025e8:	f8d7 3134 	ldr.w	r3, [r7, #308]	; 0x134
 80025ec:	3301      	adds	r3, #1
 80025ee:	f8c7 3134 	str.w	r3, [r7, #308]	; 0x134
 80025f2:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 80025f6:	781b      	ldrb	r3, [r3, #0]
 80025f8:	461a      	mov	r2, r3
 80025fa:	f8d7 3134 	ldr.w	r3, [r7, #308]	; 0x134
 80025fe:	429a      	cmp	r2, r3
 8002600:	d8c4      	bhi.n	800258c <LCD_DrawChar+0x44>
 8002602:	f8d7 3130 	ldr.w	r3, [r7, #304]	; 0x130
 8002606:	3b01      	subs	r3, #1
 8002608:	f8c7 3130 	str.w	r3, [r7, #304]	; 0x130
 800260c:	f8d7 3130 	ldr.w	r3, [r7, #304]	; 0x130
 8002610:	2b00      	cmp	r3, #0
 8002612:	d1b7      	bne.n	8002584 <LCD_DrawChar+0x3c>
 8002614:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 8002618:	781b      	ldrb	r3, [r3, #0]
 800261a:	461a      	mov	r2, r3
 800261c:	1dbb      	adds	r3, r7, #6
 800261e:	881b      	ldrh	r3, [r3, #0]
 8002620:	4413      	add	r3, r2
 8002622:	b29b      	uxth	r3, r3
 8002624:	3b01      	subs	r3, #1
 8002626:	b29a      	uxth	r2, r3
 8002628:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 800262c:	785b      	ldrb	r3, [r3, #1]
 800262e:	4619      	mov	r1, r3
 8002630:	1d3b      	adds	r3, r7, #4
 8002632:	881b      	ldrh	r3, [r3, #0]
 8002634:	440b      	add	r3, r1
 8002636:	b29b      	uxth	r3, r3
 8002638:	3b01      	subs	r3, #1
 800263a:	b29b      	uxth	r3, r3
 800263c:	1db9      	adds	r1, r7, #6
 800263e:	8808      	ldrh	r0, [r1, #0]
 8002640:	1d39      	adds	r1, r7, #4
 8002642:	8809      	ldrh	r1, [r1, #0]
 8002644:	f107 0408 	add.w	r4, r7, #8
 8002648:	9400      	str	r4, [sp, #0]
 800264a:	f7ff ff6b 	bl	8002524 <LCD_WriteArea>
 800264e:	f507 779e 	add.w	r7, r7, #316	; 0x13c
 8002652:	46bd      	mov	sp, r7
 8002654:	bd90      	pop	{r4, r7, pc}
 8002656:	bf00      	nop

08002658 <LCD_SetFont>:
 8002658:	b480      	push	{r7}
 800265a:	b083      	sub	sp, #12
 800265c:	af00      	add	r7, sp, #0
 800265e:	6078      	str	r0, [r7, #4]
 8002660:	4b03      	ldr	r3, [pc, #12]	; (8002670 <LCD_SetFont+0x18>)
 8002662:	687a      	ldr	r2, [r7, #4]
 8002664:	601a      	str	r2, [r3, #0]
 8002666:	370c      	adds	r7, #12
 8002668:	46bd      	mov	sp, r7
 800266a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800266e:	4770      	bx	lr
 8002670:	20000f90 	.word	0x20000f90

08002674 <LCD_DisplayCharXY>:
 8002674:	b5b0      	push	{r4, r5, r7, lr}
 8002676:	b084      	sub	sp, #16
 8002678:	af02      	add	r7, sp, #8
 800267a:	4613      	mov	r3, r2
 800267c:	4602      	mov	r2, r0
 800267e:	80fa      	strh	r2, [r7, #6]
 8002680:	460a      	mov	r2, r1
 8002682:	80ba      	strh	r2, [r7, #4]
 8002684:	70fb      	strb	r3, [r7, #3]
 8002686:	78fb      	ldrb	r3, [r7, #3]
 8002688:	3b20      	subs	r3, #32
 800268a:	70fb      	strb	r3, [r7, #3]
 800268c:	4b0e      	ldr	r3, [pc, #56]	; (80026c8 <LCD_DisplayCharXY+0x54>)
 800268e:	881a      	ldrh	r2, [r3, #0]
 8002690:	4b0e      	ldr	r3, [pc, #56]	; (80026cc <LCD_DisplayCharXY+0x58>)
 8002692:	881b      	ldrh	r3, [r3, #0]
 8002694:	490e      	ldr	r1, [pc, #56]	; (80026d0 <LCD_DisplayCharXY+0x5c>)
 8002696:	680d      	ldr	r5, [r1, #0]
 8002698:	490d      	ldr	r1, [pc, #52]	; (80026d0 <LCD_DisplayCharXY+0x5c>)
 800269a:	6809      	ldr	r1, [r1, #0]
 800269c:	6848      	ldr	r0, [r1, #4]
 800269e:	78f9      	ldrb	r1, [r7, #3]
 80026a0:	4c0b      	ldr	r4, [pc, #44]	; (80026d0 <LCD_DisplayCharXY+0x5c>)
 80026a2:	6824      	ldr	r4, [r4, #0]
 80026a4:	7824      	ldrb	r4, [r4, #0]
 80026a6:	fb04 f101 	mul.w	r1, r4, r1
 80026aa:	4c09      	ldr	r4, [pc, #36]	; (80026d0 <LCD_DisplayCharXY+0x5c>)
 80026ac:	6824      	ldr	r4, [r4, #0]
 80026ae:	78a4      	ldrb	r4, [r4, #2]
 80026b0:	fb04 f101 	mul.w	r1, r4, r1
 80026b4:	1844      	adds	r4, r0, r1
 80026b6:	88f8      	ldrh	r0, [r7, #6]
 80026b8:	88b9      	ldrh	r1, [r7, #4]
 80026ba:	9500      	str	r5, [sp, #0]
 80026bc:	9401      	str	r4, [sp, #4]
 80026be:	f7ff ff43 	bl	8002548 <LCD_DrawChar>
 80026c2:	3708      	adds	r7, #8
 80026c4:	46bd      	mov	sp, r7
 80026c6:	bdb0      	pop	{r4, r5, r7, pc}
 80026c8:	20000fe0 	.word	0x20000fe0
 80026cc:	20000f8c 	.word	0x20000f8c
 80026d0:	20000f90 	.word	0x20000f90

080026d4 <LCD_DisplayStringXY>:
 80026d4:	b580      	push	{r7, lr}
 80026d6:	b082      	sub	sp, #8
 80026d8:	af00      	add	r7, sp, #0
 80026da:	460b      	mov	r3, r1
 80026dc:	603a      	str	r2, [r7, #0]
 80026de:	4602      	mov	r2, r0
 80026e0:	80fa      	strh	r2, [r7, #6]
 80026e2:	80bb      	strh	r3, [r7, #4]
 80026e4:	e011      	b.n	800270a <LCD_DisplayStringXY+0x36>
 80026e6:	683b      	ldr	r3, [r7, #0]
 80026e8:	1c5a      	adds	r2, r3, #1
 80026ea:	603a      	str	r2, [r7, #0]
 80026ec:	781b      	ldrb	r3, [r3, #0]
 80026ee:	88f9      	ldrh	r1, [r7, #6]
 80026f0:	88ba      	ldrh	r2, [r7, #4]
 80026f2:	4608      	mov	r0, r1
 80026f4:	4611      	mov	r1, r2
 80026f6:	461a      	mov	r2, r3
 80026f8:	f7ff ffbc 	bl	8002674 <LCD_DisplayCharXY>
 80026fc:	4b06      	ldr	r3, [pc, #24]	; (8002718 <LCD_DisplayStringXY+0x44>)
 80026fe:	681b      	ldr	r3, [r3, #0]
 8002700:	781b      	ldrb	r3, [r3, #0]
 8002702:	461a      	mov	r2, r3
 8002704:	88fb      	ldrh	r3, [r7, #6]
 8002706:	4413      	add	r3, r2
 8002708:	80fb      	strh	r3, [r7, #6]
 800270a:	683b      	ldr	r3, [r7, #0]
 800270c:	781b      	ldrb	r3, [r3, #0]
 800270e:	2b00      	cmp	r3, #0
 8002710:	d1e9      	bne.n	80026e6 <LCD_DisplayStringXY+0x12>
 8002712:	3708      	adds	r7, #8
 8002714:	46bd      	mov	sp, r7
 8002716:	bd80      	pop	{r7, pc}
 8002718:	20000f90 	.word	0x20000f90

0800271c <LCD_DisplayStringCenterLine>:
 800271c:	b5b0      	push	{r4, r5, r7, lr}
 800271e:	b084      	sub	sp, #16
 8002720:	af00      	add	r7, sp, #0
 8002722:	4603      	mov	r3, r0
 8002724:	6039      	str	r1, [r7, #0]
 8002726:	71fb      	strb	r3, [r7, #7]
 8002728:	2300      	movs	r3, #0
 800272a:	81bb      	strh	r3, [r7, #12]
 800272c:	2300      	movs	r3, #0
 800272e:	73fb      	strb	r3, [r7, #15]
 8002730:	e009      	b.n	8002746 <LCD_DisplayStringCenterLine+0x2a>
 8002732:	4b21      	ldr	r3, [pc, #132]	; (80027b8 <LCD_DisplayStringCenterLine+0x9c>)
 8002734:	681b      	ldr	r3, [r3, #0]
 8002736:	781b      	ldrb	r3, [r3, #0]
 8002738:	461a      	mov	r2, r3
 800273a:	89bb      	ldrh	r3, [r7, #12]
 800273c:	4413      	add	r3, r2
 800273e:	81bb      	strh	r3, [r7, #12]
 8002740:	7bfb      	ldrb	r3, [r7, #15]
 8002742:	3301      	adds	r3, #1
 8002744:	73fb      	strb	r3, [r7, #15]
 8002746:	7bfc      	ldrb	r4, [r7, #15]
 8002748:	f04f 0500 	mov.w	r5, #0
 800274c:	4b1a      	ldr	r3, [pc, #104]	; (80027b8 <LCD_DisplayStringCenterLine+0x9c>)
 800274e:	681b      	ldr	r3, [r3, #0]
 8002750:	781b      	ldrb	r3, [r3, #0]
 8002752:	b2da      	uxtb	r2, r3
 8002754:	f04f 0300 	mov.w	r3, #0
 8002758:	f44f 70a0 	mov.w	r0, #320	; 0x140
 800275c:	f04f 0100 	mov.w	r1, #0
 8002760:	f7fd fd32 	bl	80001c8 <__aeabi_uldivmod>
 8002764:	4602      	mov	r2, r0
 8002766:	460b      	mov	r3, r1
 8002768:	429d      	cmp	r5, r3
 800276a:	bf08      	it	eq
 800276c:	4294      	cmpeq	r4, r2
 800276e:	d205      	bcs.n	800277c <LCD_DisplayStringCenterLine+0x60>
 8002770:	7bfb      	ldrb	r3, [r7, #15]
 8002772:	683a      	ldr	r2, [r7, #0]
 8002774:	4413      	add	r3, r2
 8002776:	781b      	ldrb	r3, [r3, #0]
 8002778:	2b00      	cmp	r3, #0
 800277a:	d1da      	bne.n	8002732 <LCD_DisplayStringCenterLine+0x16>
 800277c:	89ba      	ldrh	r2, [r7, #12]
 800277e:	f04f 0300 	mov.w	r3, #0
 8002782:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8002786:	f04f 0100 	mov.w	r1, #0
 800278a:	1a82      	subs	r2, r0, r2
 800278c:	eb61 0303 	sbc.w	r3, r1, r3
 8002790:	085b      	lsrs	r3, r3, #1
 8002792:	ea4f 0232 	mov.w	r2, r2, rrx
 8002796:	b292      	uxth	r2, r2
 8002798:	79fb      	ldrb	r3, [r7, #7]
 800279a:	b29b      	uxth	r3, r3
 800279c:	4906      	ldr	r1, [pc, #24]	; (80027b8 <LCD_DisplayStringCenterLine+0x9c>)
 800279e:	6809      	ldr	r1, [r1, #0]
 80027a0:	7849      	ldrb	r1, [r1, #1]
 80027a2:	fb01 f303 	mul.w	r3, r1, r3
 80027a6:	b29b      	uxth	r3, r3
 80027a8:	4610      	mov	r0, r2
 80027aa:	4619      	mov	r1, r3
 80027ac:	683a      	ldr	r2, [r7, #0]
 80027ae:	f7ff ff91 	bl	80026d4 <LCD_DisplayStringXY>
 80027b2:	3710      	adds	r7, #16
 80027b4:	46bd      	mov	sp, r7
 80027b6:	bdb0      	pop	{r4, r5, r7, pc}
 80027b8:	20000f90 	.word	0x20000f90

080027bc <xTaskCreate>:
 80027bc:	b580      	push	{r7, lr}
 80027be:	b08c      	sub	sp, #48	; 0x30
 80027c0:	af04      	add	r7, sp, #16
 80027c2:	60f8      	str	r0, [r7, #12]
 80027c4:	60b9      	str	r1, [r7, #8]
 80027c6:	603b      	str	r3, [r7, #0]
 80027c8:	4613      	mov	r3, r2
 80027ca:	80fb      	strh	r3, [r7, #6]
 80027cc:	88fb      	ldrh	r3, [r7, #6]
 80027ce:	009b      	lsls	r3, r3, #2
 80027d0:	4618      	mov	r0, r3
 80027d2:	f001 fbd9 	bl	8003f88 <pvPortMalloc>
 80027d6:	6178      	str	r0, [r7, #20]
 80027d8:	697b      	ldr	r3, [r7, #20]
 80027da:	2b00      	cmp	r3, #0
 80027dc:	d00e      	beq.n	80027fc <xTaskCreate+0x40>
 80027de:	2058      	movs	r0, #88	; 0x58
 80027e0:	f001 fbd2 	bl	8003f88 <pvPortMalloc>
 80027e4:	61f8      	str	r0, [r7, #28]
 80027e6:	69fb      	ldr	r3, [r7, #28]
 80027e8:	2b00      	cmp	r3, #0
 80027ea:	d003      	beq.n	80027f4 <xTaskCreate+0x38>
 80027ec:	69fb      	ldr	r3, [r7, #28]
 80027ee:	697a      	ldr	r2, [r7, #20]
 80027f0:	631a      	str	r2, [r3, #48]	; 0x30
 80027f2:	e005      	b.n	8002800 <xTaskCreate+0x44>
 80027f4:	6978      	ldr	r0, [r7, #20]
 80027f6:	f001 fc8d 	bl	8004114 <vPortFree>
 80027fa:	e001      	b.n	8002800 <xTaskCreate+0x44>
 80027fc:	2300      	movs	r3, #0
 80027fe:	61fb      	str	r3, [r7, #28]
 8002800:	69fb      	ldr	r3, [r7, #28]
 8002802:	2b00      	cmp	r3, #0
 8002804:	d014      	beq.n	8002830 <xTaskCreate+0x74>
 8002806:	88fb      	ldrh	r3, [r7, #6]
 8002808:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800280a:	9200      	str	r2, [sp, #0]
 800280c:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800280e:	9201      	str	r2, [sp, #4]
 8002810:	69fa      	ldr	r2, [r7, #28]
 8002812:	9202      	str	r2, [sp, #8]
 8002814:	2200      	movs	r2, #0
 8002816:	9203      	str	r2, [sp, #12]
 8002818:	68f8      	ldr	r0, [r7, #12]
 800281a:	68b9      	ldr	r1, [r7, #8]
 800281c:	461a      	mov	r2, r3
 800281e:	683b      	ldr	r3, [r7, #0]
 8002820:	f000 f80e 	bl	8002840 <prvInitialiseNewTask>
 8002824:	69f8      	ldr	r0, [r7, #28]
 8002826:	f000 f88f 	bl	8002948 <prvAddNewTaskToReadyList>
 800282a:	2301      	movs	r3, #1
 800282c:	61bb      	str	r3, [r7, #24]
 800282e:	e002      	b.n	8002836 <xTaskCreate+0x7a>
 8002830:	f04f 33ff 	mov.w	r3, #4294967295
 8002834:	61bb      	str	r3, [r7, #24]
 8002836:	69bb      	ldr	r3, [r7, #24]
 8002838:	4618      	mov	r0, r3
 800283a:	3720      	adds	r7, #32
 800283c:	46bd      	mov	sp, r7
 800283e:	bd80      	pop	{r7, pc}

08002840 <prvInitialiseNewTask>:
 8002840:	b580      	push	{r7, lr}
 8002842:	b088      	sub	sp, #32
 8002844:	af00      	add	r7, sp, #0
 8002846:	60f8      	str	r0, [r7, #12]
 8002848:	60b9      	str	r1, [r7, #8]
 800284a:	607a      	str	r2, [r7, #4]
 800284c:	603b      	str	r3, [r7, #0]
 800284e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002850:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002852:	687b      	ldr	r3, [r7, #4]
 8002854:	009b      	lsls	r3, r3, #2
 8002856:	4610      	mov	r0, r2
 8002858:	21a5      	movs	r1, #165	; 0xa5
 800285a:	461a      	mov	r2, r3
 800285c:	f002 fb01 	bl	8004e62 <memset>
 8002860:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002862:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002864:	687b      	ldr	r3, [r7, #4]
 8002866:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800286a:	3b01      	subs	r3, #1
 800286c:	009b      	lsls	r3, r3, #2
 800286e:	4413      	add	r3, r2
 8002870:	61bb      	str	r3, [r7, #24]
 8002872:	69bb      	ldr	r3, [r7, #24]
 8002874:	f023 0307 	bic.w	r3, r3, #7
 8002878:	61bb      	str	r3, [r7, #24]
 800287a:	69bb      	ldr	r3, [r7, #24]
 800287c:	f003 0307 	and.w	r3, r3, #7
 8002880:	2b00      	cmp	r3, #0
 8002882:	d009      	beq.n	8002898 <prvInitialiseNewTask+0x58>
 8002884:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002888:	f383 8811 	msr	BASEPRI, r3
 800288c:	f3bf 8f6f 	isb	sy
 8002890:	f3bf 8f4f 	dsb	sy
 8002894:	617b      	str	r3, [r7, #20]
 8002896:	e7fe      	b.n	8002896 <prvInitialiseNewTask+0x56>
 8002898:	2300      	movs	r3, #0
 800289a:	61fb      	str	r3, [r7, #28]
 800289c:	e012      	b.n	80028c4 <prvInitialiseNewTask+0x84>
 800289e:	68ba      	ldr	r2, [r7, #8]
 80028a0:	69fb      	ldr	r3, [r7, #28]
 80028a2:	4413      	add	r3, r2
 80028a4:	781a      	ldrb	r2, [r3, #0]
 80028a6:	6b39      	ldr	r1, [r7, #48]	; 0x30
 80028a8:	69fb      	ldr	r3, [r7, #28]
 80028aa:	440b      	add	r3, r1
 80028ac:	3330      	adds	r3, #48	; 0x30
 80028ae:	711a      	strb	r2, [r3, #4]
 80028b0:	68ba      	ldr	r2, [r7, #8]
 80028b2:	69fb      	ldr	r3, [r7, #28]
 80028b4:	4413      	add	r3, r2
 80028b6:	781b      	ldrb	r3, [r3, #0]
 80028b8:	2b00      	cmp	r3, #0
 80028ba:	d100      	bne.n	80028be <prvInitialiseNewTask+0x7e>
 80028bc:	e005      	b.n	80028ca <prvInitialiseNewTask+0x8a>
 80028be:	69fb      	ldr	r3, [r7, #28]
 80028c0:	3301      	adds	r3, #1
 80028c2:	61fb      	str	r3, [r7, #28]
 80028c4:	69fb      	ldr	r3, [r7, #28]
 80028c6:	2b09      	cmp	r3, #9
 80028c8:	d9e9      	bls.n	800289e <prvInitialiseNewTask+0x5e>
 80028ca:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80028cc:	2200      	movs	r2, #0
 80028ce:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80028d2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80028d4:	2b04      	cmp	r3, #4
 80028d6:	d901      	bls.n	80028dc <prvInitialiseNewTask+0x9c>
 80028d8:	2304      	movs	r3, #4
 80028da:	62bb      	str	r3, [r7, #40]	; 0x28
 80028dc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80028de:	6aba      	ldr	r2, [r7, #40]	; 0x28
 80028e0:	62da      	str	r2, [r3, #44]	; 0x2c
 80028e2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80028e4:	6aba      	ldr	r2, [r7, #40]	; 0x28
 80028e6:	649a      	str	r2, [r3, #72]	; 0x48
 80028e8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80028ea:	2200      	movs	r2, #0
 80028ec:	64da      	str	r2, [r3, #76]	; 0x4c
 80028ee:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80028f0:	3304      	adds	r3, #4
 80028f2:	4618      	mov	r0, r3
 80028f4:	f001 fd40 	bl	8004378 <vListInitialiseItem>
 80028f8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80028fa:	3318      	adds	r3, #24
 80028fc:	4618      	mov	r0, r3
 80028fe:	f001 fd3b 	bl	8004378 <vListInitialiseItem>
 8002902:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002904:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8002906:	611a      	str	r2, [r3, #16]
 8002908:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800290a:	f1c3 0205 	rsb	r2, r3, #5
 800290e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002910:	619a      	str	r2, [r3, #24]
 8002912:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002914:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8002916:	625a      	str	r2, [r3, #36]	; 0x24
 8002918:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800291a:	2200      	movs	r2, #0
 800291c:	651a      	str	r2, [r3, #80]	; 0x50
 800291e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002920:	2200      	movs	r2, #0
 8002922:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 8002926:	69b8      	ldr	r0, [r7, #24]
 8002928:	68f9      	ldr	r1, [r7, #12]
 800292a:	683a      	ldr	r2, [r7, #0]
 800292c:	f001 f94e 	bl	8003bcc <pxPortInitialiseStack>
 8002930:	4602      	mov	r2, r0
 8002932:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002934:	601a      	str	r2, [r3, #0]
 8002936:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002938:	2b00      	cmp	r3, #0
 800293a:	d002      	beq.n	8002942 <prvInitialiseNewTask+0x102>
 800293c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800293e:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8002940:	601a      	str	r2, [r3, #0]
 8002942:	3720      	adds	r7, #32
 8002944:	46bd      	mov	sp, r7
 8002946:	bd80      	pop	{r7, pc}

08002948 <prvAddNewTaskToReadyList>:
 8002948:	b580      	push	{r7, lr}
 800294a:	b082      	sub	sp, #8
 800294c:	af00      	add	r7, sp, #0
 800294e:	6078      	str	r0, [r7, #4]
 8002950:	f001 fa14 	bl	8003d7c <vPortEnterCritical>
 8002954:	4b2c      	ldr	r3, [pc, #176]	; (8002a08 <prvAddNewTaskToReadyList+0xc0>)
 8002956:	681b      	ldr	r3, [r3, #0]
 8002958:	1c5a      	adds	r2, r3, #1
 800295a:	4b2b      	ldr	r3, [pc, #172]	; (8002a08 <prvAddNewTaskToReadyList+0xc0>)
 800295c:	601a      	str	r2, [r3, #0]
 800295e:	4b2b      	ldr	r3, [pc, #172]	; (8002a0c <prvAddNewTaskToReadyList+0xc4>)
 8002960:	681b      	ldr	r3, [r3, #0]
 8002962:	2b00      	cmp	r3, #0
 8002964:	d109      	bne.n	800297a <prvAddNewTaskToReadyList+0x32>
 8002966:	4b29      	ldr	r3, [pc, #164]	; (8002a0c <prvAddNewTaskToReadyList+0xc4>)
 8002968:	687a      	ldr	r2, [r7, #4]
 800296a:	601a      	str	r2, [r3, #0]
 800296c:	4b26      	ldr	r3, [pc, #152]	; (8002a08 <prvAddNewTaskToReadyList+0xc0>)
 800296e:	681b      	ldr	r3, [r3, #0]
 8002970:	2b01      	cmp	r3, #1
 8002972:	d110      	bne.n	8002996 <prvAddNewTaskToReadyList+0x4e>
 8002974:	f000 fc18 	bl	80031a8 <prvInitialiseTaskLists>
 8002978:	e00d      	b.n	8002996 <prvAddNewTaskToReadyList+0x4e>
 800297a:	4b25      	ldr	r3, [pc, #148]	; (8002a10 <prvAddNewTaskToReadyList+0xc8>)
 800297c:	681b      	ldr	r3, [r3, #0]
 800297e:	2b00      	cmp	r3, #0
 8002980:	d109      	bne.n	8002996 <prvAddNewTaskToReadyList+0x4e>
 8002982:	4b22      	ldr	r3, [pc, #136]	; (8002a0c <prvAddNewTaskToReadyList+0xc4>)
 8002984:	681b      	ldr	r3, [r3, #0]
 8002986:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002988:	687b      	ldr	r3, [r7, #4]
 800298a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800298c:	429a      	cmp	r2, r3
 800298e:	d802      	bhi.n	8002996 <prvAddNewTaskToReadyList+0x4e>
 8002990:	4b1e      	ldr	r3, [pc, #120]	; (8002a0c <prvAddNewTaskToReadyList+0xc4>)
 8002992:	687a      	ldr	r2, [r7, #4]
 8002994:	601a      	str	r2, [r3, #0]
 8002996:	4b1f      	ldr	r3, [pc, #124]	; (8002a14 <prvAddNewTaskToReadyList+0xcc>)
 8002998:	681b      	ldr	r3, [r3, #0]
 800299a:	1c5a      	adds	r2, r3, #1
 800299c:	4b1d      	ldr	r3, [pc, #116]	; (8002a14 <prvAddNewTaskToReadyList+0xcc>)
 800299e:	601a      	str	r2, [r3, #0]
 80029a0:	4b1c      	ldr	r3, [pc, #112]	; (8002a14 <prvAddNewTaskToReadyList+0xcc>)
 80029a2:	681a      	ldr	r2, [r3, #0]
 80029a4:	687b      	ldr	r3, [r7, #4]
 80029a6:	641a      	str	r2, [r3, #64]	; 0x40
 80029a8:	687b      	ldr	r3, [r7, #4]
 80029aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80029ac:	2201      	movs	r2, #1
 80029ae:	409a      	lsls	r2, r3
 80029b0:	4b19      	ldr	r3, [pc, #100]	; (8002a18 <prvAddNewTaskToReadyList+0xd0>)
 80029b2:	681b      	ldr	r3, [r3, #0]
 80029b4:	431a      	orrs	r2, r3
 80029b6:	4b18      	ldr	r3, [pc, #96]	; (8002a18 <prvAddNewTaskToReadyList+0xd0>)
 80029b8:	601a      	str	r2, [r3, #0]
 80029ba:	687b      	ldr	r3, [r7, #4]
 80029bc:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80029be:	4613      	mov	r3, r2
 80029c0:	009b      	lsls	r3, r3, #2
 80029c2:	4413      	add	r3, r2
 80029c4:	009b      	lsls	r3, r3, #2
 80029c6:	4a15      	ldr	r2, [pc, #84]	; (8002a1c <prvAddNewTaskToReadyList+0xd4>)
 80029c8:	441a      	add	r2, r3
 80029ca:	687b      	ldr	r3, [r7, #4]
 80029cc:	3304      	adds	r3, #4
 80029ce:	4610      	mov	r0, r2
 80029d0:	4619      	mov	r1, r3
 80029d2:	f001 fcdd 	bl	8004390 <vListInsertEnd>
 80029d6:	f001 f9ff 	bl	8003dd8 <vPortExitCritical>
 80029da:	4b0d      	ldr	r3, [pc, #52]	; (8002a10 <prvAddNewTaskToReadyList+0xc8>)
 80029dc:	681b      	ldr	r3, [r3, #0]
 80029de:	2b00      	cmp	r3, #0
 80029e0:	d00e      	beq.n	8002a00 <prvAddNewTaskToReadyList+0xb8>
 80029e2:	4b0a      	ldr	r3, [pc, #40]	; (8002a0c <prvAddNewTaskToReadyList+0xc4>)
 80029e4:	681b      	ldr	r3, [r3, #0]
 80029e6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80029e8:	687b      	ldr	r3, [r7, #4]
 80029ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80029ec:	429a      	cmp	r2, r3
 80029ee:	d207      	bcs.n	8002a00 <prvAddNewTaskToReadyList+0xb8>
 80029f0:	4b0b      	ldr	r3, [pc, #44]	; (8002a20 <prvAddNewTaskToReadyList+0xd8>)
 80029f2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80029f6:	601a      	str	r2, [r3, #0]
 80029f8:	f3bf 8f4f 	dsb	sy
 80029fc:	f3bf 8f6f 	isb	sy
 8002a00:	3708      	adds	r7, #8
 8002a02:	46bd      	mov	sp, r7
 8002a04:	bd80      	pop	{r7, pc}
 8002a06:	bf00      	nop
 8002a08:	200010bc 	.word	0x200010bc
 8002a0c:	20000fe4 	.word	0x20000fe4
 8002a10:	200010c8 	.word	0x200010c8
 8002a14:	200010d8 	.word	0x200010d8
 8002a18:	200010c4 	.word	0x200010c4
 8002a1c:	20000fe8 	.word	0x20000fe8
 8002a20:	e000ed04 	.word	0xe000ed04

08002a24 <vTaskDelay>:
 8002a24:	b580      	push	{r7, lr}
 8002a26:	b084      	sub	sp, #16
 8002a28:	af00      	add	r7, sp, #0
 8002a2a:	6078      	str	r0, [r7, #4]
 8002a2c:	2300      	movs	r3, #0
 8002a2e:	60fb      	str	r3, [r7, #12]
 8002a30:	687b      	ldr	r3, [r7, #4]
 8002a32:	2b00      	cmp	r3, #0
 8002a34:	d016      	beq.n	8002a64 <vTaskDelay+0x40>
 8002a36:	4b12      	ldr	r3, [pc, #72]	; (8002a80 <vTaskDelay+0x5c>)
 8002a38:	681b      	ldr	r3, [r3, #0]
 8002a3a:	2b00      	cmp	r3, #0
 8002a3c:	d009      	beq.n	8002a52 <vTaskDelay+0x2e>
 8002a3e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002a42:	f383 8811 	msr	BASEPRI, r3
 8002a46:	f3bf 8f6f 	isb	sy
 8002a4a:	f3bf 8f4f 	dsb	sy
 8002a4e:	60bb      	str	r3, [r7, #8]
 8002a50:	e7fe      	b.n	8002a50 <vTaskDelay+0x2c>
 8002a52:	f000 f863 	bl	8002b1c <vTaskSuspendAll>
 8002a56:	6878      	ldr	r0, [r7, #4]
 8002a58:	2100      	movs	r1, #0
 8002a5a:	f000 fd7d 	bl	8003558 <prvAddCurrentTaskToDelayedList>
 8002a5e:	f000 f86b 	bl	8002b38 <xTaskResumeAll>
 8002a62:	60f8      	str	r0, [r7, #12]
 8002a64:	68fb      	ldr	r3, [r7, #12]
 8002a66:	2b00      	cmp	r3, #0
 8002a68:	d107      	bne.n	8002a7a <vTaskDelay+0x56>
 8002a6a:	4b06      	ldr	r3, [pc, #24]	; (8002a84 <vTaskDelay+0x60>)
 8002a6c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8002a70:	601a      	str	r2, [r3, #0]
 8002a72:	f3bf 8f4f 	dsb	sy
 8002a76:	f3bf 8f6f 	isb	sy
 8002a7a:	3710      	adds	r7, #16
 8002a7c:	46bd      	mov	sp, r7
 8002a7e:	bd80      	pop	{r7, pc}
 8002a80:	200010e4 	.word	0x200010e4
 8002a84:	e000ed04 	.word	0xe000ed04

08002a88 <vTaskStartScheduler>:
 8002a88:	b580      	push	{r7, lr}
 8002a8a:	b086      	sub	sp, #24
 8002a8c:	af02      	add	r7, sp, #8
 8002a8e:	2300      	movs	r3, #0
 8002a90:	9300      	str	r3, [sp, #0]
 8002a92:	4b1c      	ldr	r3, [pc, #112]	; (8002b04 <vTaskStartScheduler+0x7c>)
 8002a94:	9301      	str	r3, [sp, #4]
 8002a96:	481c      	ldr	r0, [pc, #112]	; (8002b08 <vTaskStartScheduler+0x80>)
 8002a98:	491c      	ldr	r1, [pc, #112]	; (8002b0c <vTaskStartScheduler+0x84>)
 8002a9a:	2282      	movs	r2, #130	; 0x82
 8002a9c:	2300      	movs	r3, #0
 8002a9e:	f7ff fe8d 	bl	80027bc <xTaskCreate>
 8002aa2:	60f8      	str	r0, [r7, #12]
 8002aa4:	68fb      	ldr	r3, [r7, #12]
 8002aa6:	2b01      	cmp	r3, #1
 8002aa8:	d102      	bne.n	8002ab0 <vTaskStartScheduler+0x28>
 8002aaa:	f000 fdb9 	bl	8003620 <xTimerCreateTimerTask>
 8002aae:	60f8      	str	r0, [r7, #12]
 8002ab0:	68fb      	ldr	r3, [r7, #12]
 8002ab2:	2b01      	cmp	r3, #1
 8002ab4:	d115      	bne.n	8002ae2 <vTaskStartScheduler+0x5a>
 8002ab6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002aba:	f383 8811 	msr	BASEPRI, r3
 8002abe:	f3bf 8f6f 	isb	sy
 8002ac2:	f3bf 8f4f 	dsb	sy
 8002ac6:	60bb      	str	r3, [r7, #8]
 8002ac8:	4b11      	ldr	r3, [pc, #68]	; (8002b10 <vTaskStartScheduler+0x88>)
 8002aca:	f04f 32ff 	mov.w	r2, #4294967295
 8002ace:	601a      	str	r2, [r3, #0]
 8002ad0:	4b10      	ldr	r3, [pc, #64]	; (8002b14 <vTaskStartScheduler+0x8c>)
 8002ad2:	2201      	movs	r2, #1
 8002ad4:	601a      	str	r2, [r3, #0]
 8002ad6:	4b10      	ldr	r3, [pc, #64]	; (8002b18 <vTaskStartScheduler+0x90>)
 8002ad8:	2200      	movs	r2, #0
 8002ada:	601a      	str	r2, [r3, #0]
 8002adc:	f001 f8e6 	bl	8003cac <xPortStartScheduler>
 8002ae0:	e00d      	b.n	8002afe <vTaskStartScheduler+0x76>
 8002ae2:	68fb      	ldr	r3, [r7, #12]
 8002ae4:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002ae8:	d109      	bne.n	8002afe <vTaskStartScheduler+0x76>
 8002aea:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002aee:	f383 8811 	msr	BASEPRI, r3
 8002af2:	f3bf 8f6f 	isb	sy
 8002af6:	f3bf 8f4f 	dsb	sy
 8002afa:	607b      	str	r3, [r7, #4]
 8002afc:	e7fe      	b.n	8002afc <vTaskStartScheduler+0x74>
 8002afe:	3710      	adds	r7, #16
 8002b00:	46bd      	mov	sp, r7
 8002b02:	bd80      	pop	{r7, pc}
 8002b04:	200010e0 	.word	0x200010e0
 8002b08:	08003179 	.word	0x08003179
 8002b0c:	080050a0 	.word	0x080050a0
 8002b10:	200010dc 	.word	0x200010dc
 8002b14:	200010c8 	.word	0x200010c8
 8002b18:	200010c0 	.word	0x200010c0

08002b1c <vTaskSuspendAll>:
 8002b1c:	b480      	push	{r7}
 8002b1e:	af00      	add	r7, sp, #0
 8002b20:	4b04      	ldr	r3, [pc, #16]	; (8002b34 <vTaskSuspendAll+0x18>)
 8002b22:	681b      	ldr	r3, [r3, #0]
 8002b24:	1c5a      	adds	r2, r3, #1
 8002b26:	4b03      	ldr	r3, [pc, #12]	; (8002b34 <vTaskSuspendAll+0x18>)
 8002b28:	601a      	str	r2, [r3, #0]
 8002b2a:	46bd      	mov	sp, r7
 8002b2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b30:	4770      	bx	lr
 8002b32:	bf00      	nop
 8002b34:	200010e4 	.word	0x200010e4

08002b38 <xTaskResumeAll>:
 8002b38:	b580      	push	{r7, lr}
 8002b3a:	b084      	sub	sp, #16
 8002b3c:	af00      	add	r7, sp, #0
 8002b3e:	2300      	movs	r3, #0
 8002b40:	60fb      	str	r3, [r7, #12]
 8002b42:	2300      	movs	r3, #0
 8002b44:	60bb      	str	r3, [r7, #8]
 8002b46:	4b41      	ldr	r3, [pc, #260]	; (8002c4c <xTaskResumeAll+0x114>)
 8002b48:	681b      	ldr	r3, [r3, #0]
 8002b4a:	2b00      	cmp	r3, #0
 8002b4c:	d109      	bne.n	8002b62 <xTaskResumeAll+0x2a>
 8002b4e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002b52:	f383 8811 	msr	BASEPRI, r3
 8002b56:	f3bf 8f6f 	isb	sy
 8002b5a:	f3bf 8f4f 	dsb	sy
 8002b5e:	603b      	str	r3, [r7, #0]
 8002b60:	e7fe      	b.n	8002b60 <xTaskResumeAll+0x28>
 8002b62:	f001 f90b 	bl	8003d7c <vPortEnterCritical>
 8002b66:	4b39      	ldr	r3, [pc, #228]	; (8002c4c <xTaskResumeAll+0x114>)
 8002b68:	681b      	ldr	r3, [r3, #0]
 8002b6a:	1e5a      	subs	r2, r3, #1
 8002b6c:	4b37      	ldr	r3, [pc, #220]	; (8002c4c <xTaskResumeAll+0x114>)
 8002b6e:	601a      	str	r2, [r3, #0]
 8002b70:	4b36      	ldr	r3, [pc, #216]	; (8002c4c <xTaskResumeAll+0x114>)
 8002b72:	681b      	ldr	r3, [r3, #0]
 8002b74:	2b00      	cmp	r3, #0
 8002b76:	d161      	bne.n	8002c3c <xTaskResumeAll+0x104>
 8002b78:	4b35      	ldr	r3, [pc, #212]	; (8002c50 <xTaskResumeAll+0x118>)
 8002b7a:	681b      	ldr	r3, [r3, #0]
 8002b7c:	2b00      	cmp	r3, #0
 8002b7e:	d05d      	beq.n	8002c3c <xTaskResumeAll+0x104>
 8002b80:	e02e      	b.n	8002be0 <xTaskResumeAll+0xa8>
 8002b82:	4b34      	ldr	r3, [pc, #208]	; (8002c54 <xTaskResumeAll+0x11c>)
 8002b84:	68db      	ldr	r3, [r3, #12]
 8002b86:	68db      	ldr	r3, [r3, #12]
 8002b88:	60fb      	str	r3, [r7, #12]
 8002b8a:	68fb      	ldr	r3, [r7, #12]
 8002b8c:	3318      	adds	r3, #24
 8002b8e:	4618      	mov	r0, r3
 8002b90:	f001 fc5a 	bl	8004448 <uxListRemove>
 8002b94:	68fb      	ldr	r3, [r7, #12]
 8002b96:	3304      	adds	r3, #4
 8002b98:	4618      	mov	r0, r3
 8002b9a:	f001 fc55 	bl	8004448 <uxListRemove>
 8002b9e:	68fb      	ldr	r3, [r7, #12]
 8002ba0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002ba2:	2201      	movs	r2, #1
 8002ba4:	409a      	lsls	r2, r3
 8002ba6:	4b2c      	ldr	r3, [pc, #176]	; (8002c58 <xTaskResumeAll+0x120>)
 8002ba8:	681b      	ldr	r3, [r3, #0]
 8002baa:	431a      	orrs	r2, r3
 8002bac:	4b2a      	ldr	r3, [pc, #168]	; (8002c58 <xTaskResumeAll+0x120>)
 8002bae:	601a      	str	r2, [r3, #0]
 8002bb0:	68fb      	ldr	r3, [r7, #12]
 8002bb2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002bb4:	4613      	mov	r3, r2
 8002bb6:	009b      	lsls	r3, r3, #2
 8002bb8:	4413      	add	r3, r2
 8002bba:	009b      	lsls	r3, r3, #2
 8002bbc:	4a27      	ldr	r2, [pc, #156]	; (8002c5c <xTaskResumeAll+0x124>)
 8002bbe:	441a      	add	r2, r3
 8002bc0:	68fb      	ldr	r3, [r7, #12]
 8002bc2:	3304      	adds	r3, #4
 8002bc4:	4610      	mov	r0, r2
 8002bc6:	4619      	mov	r1, r3
 8002bc8:	f001 fbe2 	bl	8004390 <vListInsertEnd>
 8002bcc:	68fb      	ldr	r3, [r7, #12]
 8002bce:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002bd0:	4b23      	ldr	r3, [pc, #140]	; (8002c60 <xTaskResumeAll+0x128>)
 8002bd2:	681b      	ldr	r3, [r3, #0]
 8002bd4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002bd6:	429a      	cmp	r2, r3
 8002bd8:	d302      	bcc.n	8002be0 <xTaskResumeAll+0xa8>
 8002bda:	4b22      	ldr	r3, [pc, #136]	; (8002c64 <xTaskResumeAll+0x12c>)
 8002bdc:	2201      	movs	r2, #1
 8002bde:	601a      	str	r2, [r3, #0]
 8002be0:	4b1c      	ldr	r3, [pc, #112]	; (8002c54 <xTaskResumeAll+0x11c>)
 8002be2:	681b      	ldr	r3, [r3, #0]
 8002be4:	2b00      	cmp	r3, #0
 8002be6:	d1cc      	bne.n	8002b82 <xTaskResumeAll+0x4a>
 8002be8:	68fb      	ldr	r3, [r7, #12]
 8002bea:	2b00      	cmp	r3, #0
 8002bec:	d001      	beq.n	8002bf2 <xTaskResumeAll+0xba>
 8002bee:	f000 fb63 	bl	80032b8 <prvResetNextTaskUnblockTime>
 8002bf2:	4b1d      	ldr	r3, [pc, #116]	; (8002c68 <xTaskResumeAll+0x130>)
 8002bf4:	681b      	ldr	r3, [r3, #0]
 8002bf6:	607b      	str	r3, [r7, #4]
 8002bf8:	687b      	ldr	r3, [r7, #4]
 8002bfa:	2b00      	cmp	r3, #0
 8002bfc:	d010      	beq.n	8002c20 <xTaskResumeAll+0xe8>
 8002bfe:	f000 f847 	bl	8002c90 <xTaskIncrementTick>
 8002c02:	4603      	mov	r3, r0
 8002c04:	2b00      	cmp	r3, #0
 8002c06:	d002      	beq.n	8002c0e <xTaskResumeAll+0xd6>
 8002c08:	4b16      	ldr	r3, [pc, #88]	; (8002c64 <xTaskResumeAll+0x12c>)
 8002c0a:	2201      	movs	r2, #1
 8002c0c:	601a      	str	r2, [r3, #0]
 8002c0e:	687b      	ldr	r3, [r7, #4]
 8002c10:	3b01      	subs	r3, #1
 8002c12:	607b      	str	r3, [r7, #4]
 8002c14:	687b      	ldr	r3, [r7, #4]
 8002c16:	2b00      	cmp	r3, #0
 8002c18:	d1f1      	bne.n	8002bfe <xTaskResumeAll+0xc6>
 8002c1a:	4b13      	ldr	r3, [pc, #76]	; (8002c68 <xTaskResumeAll+0x130>)
 8002c1c:	2200      	movs	r2, #0
 8002c1e:	601a      	str	r2, [r3, #0]
 8002c20:	4b10      	ldr	r3, [pc, #64]	; (8002c64 <xTaskResumeAll+0x12c>)
 8002c22:	681b      	ldr	r3, [r3, #0]
 8002c24:	2b00      	cmp	r3, #0
 8002c26:	d009      	beq.n	8002c3c <xTaskResumeAll+0x104>
 8002c28:	2301      	movs	r3, #1
 8002c2a:	60bb      	str	r3, [r7, #8]
 8002c2c:	4b0f      	ldr	r3, [pc, #60]	; (8002c6c <xTaskResumeAll+0x134>)
 8002c2e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8002c32:	601a      	str	r2, [r3, #0]
 8002c34:	f3bf 8f4f 	dsb	sy
 8002c38:	f3bf 8f6f 	isb	sy
 8002c3c:	f001 f8cc 	bl	8003dd8 <vPortExitCritical>
 8002c40:	68bb      	ldr	r3, [r7, #8]
 8002c42:	4618      	mov	r0, r3
 8002c44:	3710      	adds	r7, #16
 8002c46:	46bd      	mov	sp, r7
 8002c48:	bd80      	pop	{r7, pc}
 8002c4a:	bf00      	nop
 8002c4c:	200010e4 	.word	0x200010e4
 8002c50:	200010bc 	.word	0x200010bc
 8002c54:	2000107c 	.word	0x2000107c
 8002c58:	200010c4 	.word	0x200010c4
 8002c5c:	20000fe8 	.word	0x20000fe8
 8002c60:	20000fe4 	.word	0x20000fe4
 8002c64:	200010d0 	.word	0x200010d0
 8002c68:	200010cc 	.word	0x200010cc
 8002c6c:	e000ed04 	.word	0xe000ed04

08002c70 <xTaskGetTickCount>:
 8002c70:	b480      	push	{r7}
 8002c72:	b083      	sub	sp, #12
 8002c74:	af00      	add	r7, sp, #0
 8002c76:	4b05      	ldr	r3, [pc, #20]	; (8002c8c <xTaskGetTickCount+0x1c>)
 8002c78:	681b      	ldr	r3, [r3, #0]
 8002c7a:	607b      	str	r3, [r7, #4]
 8002c7c:	687b      	ldr	r3, [r7, #4]
 8002c7e:	4618      	mov	r0, r3
 8002c80:	370c      	adds	r7, #12
 8002c82:	46bd      	mov	sp, r7
 8002c84:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c88:	4770      	bx	lr
 8002c8a:	bf00      	nop
 8002c8c:	200010c0 	.word	0x200010c0

08002c90 <xTaskIncrementTick>:
 8002c90:	b580      	push	{r7, lr}
 8002c92:	b086      	sub	sp, #24
 8002c94:	af00      	add	r7, sp, #0
 8002c96:	2300      	movs	r3, #0
 8002c98:	617b      	str	r3, [r7, #20]
 8002c9a:	4b50      	ldr	r3, [pc, #320]	; (8002ddc <xTaskIncrementTick+0x14c>)
 8002c9c:	681b      	ldr	r3, [r3, #0]
 8002c9e:	2b00      	cmp	r3, #0
 8002ca0:	f040 808c 	bne.w	8002dbc <xTaskIncrementTick+0x12c>
 8002ca4:	4b4e      	ldr	r3, [pc, #312]	; (8002de0 <xTaskIncrementTick+0x150>)
 8002ca6:	681b      	ldr	r3, [r3, #0]
 8002ca8:	3301      	adds	r3, #1
 8002caa:	613b      	str	r3, [r7, #16]
 8002cac:	4b4c      	ldr	r3, [pc, #304]	; (8002de0 <xTaskIncrementTick+0x150>)
 8002cae:	693a      	ldr	r2, [r7, #16]
 8002cb0:	601a      	str	r2, [r3, #0]
 8002cb2:	693b      	ldr	r3, [r7, #16]
 8002cb4:	2b00      	cmp	r3, #0
 8002cb6:	d11f      	bne.n	8002cf8 <xTaskIncrementTick+0x68>
 8002cb8:	4b4a      	ldr	r3, [pc, #296]	; (8002de4 <xTaskIncrementTick+0x154>)
 8002cba:	681b      	ldr	r3, [r3, #0]
 8002cbc:	681b      	ldr	r3, [r3, #0]
 8002cbe:	2b00      	cmp	r3, #0
 8002cc0:	d009      	beq.n	8002cd6 <xTaskIncrementTick+0x46>
 8002cc2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002cc6:	f383 8811 	msr	BASEPRI, r3
 8002cca:	f3bf 8f6f 	isb	sy
 8002cce:	f3bf 8f4f 	dsb	sy
 8002cd2:	603b      	str	r3, [r7, #0]
 8002cd4:	e7fe      	b.n	8002cd4 <xTaskIncrementTick+0x44>
 8002cd6:	4b43      	ldr	r3, [pc, #268]	; (8002de4 <xTaskIncrementTick+0x154>)
 8002cd8:	681b      	ldr	r3, [r3, #0]
 8002cda:	60fb      	str	r3, [r7, #12]
 8002cdc:	4b42      	ldr	r3, [pc, #264]	; (8002de8 <xTaskIncrementTick+0x158>)
 8002cde:	681a      	ldr	r2, [r3, #0]
 8002ce0:	4b40      	ldr	r3, [pc, #256]	; (8002de4 <xTaskIncrementTick+0x154>)
 8002ce2:	601a      	str	r2, [r3, #0]
 8002ce4:	4b40      	ldr	r3, [pc, #256]	; (8002de8 <xTaskIncrementTick+0x158>)
 8002ce6:	68fa      	ldr	r2, [r7, #12]
 8002ce8:	601a      	str	r2, [r3, #0]
 8002cea:	4b40      	ldr	r3, [pc, #256]	; (8002dec <xTaskIncrementTick+0x15c>)
 8002cec:	681b      	ldr	r3, [r3, #0]
 8002cee:	1c5a      	adds	r2, r3, #1
 8002cf0:	4b3e      	ldr	r3, [pc, #248]	; (8002dec <xTaskIncrementTick+0x15c>)
 8002cf2:	601a      	str	r2, [r3, #0]
 8002cf4:	f000 fae0 	bl	80032b8 <prvResetNextTaskUnblockTime>
 8002cf8:	4b3d      	ldr	r3, [pc, #244]	; (8002df0 <xTaskIncrementTick+0x160>)
 8002cfa:	681b      	ldr	r3, [r3, #0]
 8002cfc:	693a      	ldr	r2, [r7, #16]
 8002cfe:	429a      	cmp	r2, r3
 8002d00:	d34d      	bcc.n	8002d9e <xTaskIncrementTick+0x10e>
 8002d02:	4b38      	ldr	r3, [pc, #224]	; (8002de4 <xTaskIncrementTick+0x154>)
 8002d04:	681b      	ldr	r3, [r3, #0]
 8002d06:	681b      	ldr	r3, [r3, #0]
 8002d08:	2b00      	cmp	r3, #0
 8002d0a:	d101      	bne.n	8002d10 <xTaskIncrementTick+0x80>
 8002d0c:	2301      	movs	r3, #1
 8002d0e:	e000      	b.n	8002d12 <xTaskIncrementTick+0x82>
 8002d10:	2300      	movs	r3, #0
 8002d12:	2b00      	cmp	r3, #0
 8002d14:	d004      	beq.n	8002d20 <xTaskIncrementTick+0x90>
 8002d16:	4b36      	ldr	r3, [pc, #216]	; (8002df0 <xTaskIncrementTick+0x160>)
 8002d18:	f04f 32ff 	mov.w	r2, #4294967295
 8002d1c:	601a      	str	r2, [r3, #0]
 8002d1e:	e03e      	b.n	8002d9e <xTaskIncrementTick+0x10e>
 8002d20:	4b30      	ldr	r3, [pc, #192]	; (8002de4 <xTaskIncrementTick+0x154>)
 8002d22:	681b      	ldr	r3, [r3, #0]
 8002d24:	68db      	ldr	r3, [r3, #12]
 8002d26:	68db      	ldr	r3, [r3, #12]
 8002d28:	60bb      	str	r3, [r7, #8]
 8002d2a:	68bb      	ldr	r3, [r7, #8]
 8002d2c:	685b      	ldr	r3, [r3, #4]
 8002d2e:	607b      	str	r3, [r7, #4]
 8002d30:	693a      	ldr	r2, [r7, #16]
 8002d32:	687b      	ldr	r3, [r7, #4]
 8002d34:	429a      	cmp	r2, r3
 8002d36:	d203      	bcs.n	8002d40 <xTaskIncrementTick+0xb0>
 8002d38:	4b2d      	ldr	r3, [pc, #180]	; (8002df0 <xTaskIncrementTick+0x160>)
 8002d3a:	687a      	ldr	r2, [r7, #4]
 8002d3c:	601a      	str	r2, [r3, #0]
 8002d3e:	e02e      	b.n	8002d9e <xTaskIncrementTick+0x10e>
 8002d40:	68bb      	ldr	r3, [r7, #8]
 8002d42:	3304      	adds	r3, #4
 8002d44:	4618      	mov	r0, r3
 8002d46:	f001 fb7f 	bl	8004448 <uxListRemove>
 8002d4a:	68bb      	ldr	r3, [r7, #8]
 8002d4c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002d4e:	2b00      	cmp	r3, #0
 8002d50:	d004      	beq.n	8002d5c <xTaskIncrementTick+0xcc>
 8002d52:	68bb      	ldr	r3, [r7, #8]
 8002d54:	3318      	adds	r3, #24
 8002d56:	4618      	mov	r0, r3
 8002d58:	f001 fb76 	bl	8004448 <uxListRemove>
 8002d5c:	68bb      	ldr	r3, [r7, #8]
 8002d5e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002d60:	2201      	movs	r2, #1
 8002d62:	409a      	lsls	r2, r3
 8002d64:	4b23      	ldr	r3, [pc, #140]	; (8002df4 <xTaskIncrementTick+0x164>)
 8002d66:	681b      	ldr	r3, [r3, #0]
 8002d68:	431a      	orrs	r2, r3
 8002d6a:	4b22      	ldr	r3, [pc, #136]	; (8002df4 <xTaskIncrementTick+0x164>)
 8002d6c:	601a      	str	r2, [r3, #0]
 8002d6e:	68bb      	ldr	r3, [r7, #8]
 8002d70:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002d72:	4613      	mov	r3, r2
 8002d74:	009b      	lsls	r3, r3, #2
 8002d76:	4413      	add	r3, r2
 8002d78:	009b      	lsls	r3, r3, #2
 8002d7a:	4a1f      	ldr	r2, [pc, #124]	; (8002df8 <xTaskIncrementTick+0x168>)
 8002d7c:	441a      	add	r2, r3
 8002d7e:	68bb      	ldr	r3, [r7, #8]
 8002d80:	3304      	adds	r3, #4
 8002d82:	4610      	mov	r0, r2
 8002d84:	4619      	mov	r1, r3
 8002d86:	f001 fb03 	bl	8004390 <vListInsertEnd>
 8002d8a:	68bb      	ldr	r3, [r7, #8]
 8002d8c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002d8e:	4b1b      	ldr	r3, [pc, #108]	; (8002dfc <xTaskIncrementTick+0x16c>)
 8002d90:	681b      	ldr	r3, [r3, #0]
 8002d92:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002d94:	429a      	cmp	r2, r3
 8002d96:	d301      	bcc.n	8002d9c <xTaskIncrementTick+0x10c>
 8002d98:	2301      	movs	r3, #1
 8002d9a:	617b      	str	r3, [r7, #20]
 8002d9c:	e7b1      	b.n	8002d02 <xTaskIncrementTick+0x72>
 8002d9e:	4b17      	ldr	r3, [pc, #92]	; (8002dfc <xTaskIncrementTick+0x16c>)
 8002da0:	681b      	ldr	r3, [r3, #0]
 8002da2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002da4:	4914      	ldr	r1, [pc, #80]	; (8002df8 <xTaskIncrementTick+0x168>)
 8002da6:	4613      	mov	r3, r2
 8002da8:	009b      	lsls	r3, r3, #2
 8002daa:	4413      	add	r3, r2
 8002dac:	009b      	lsls	r3, r3, #2
 8002dae:	440b      	add	r3, r1
 8002db0:	681b      	ldr	r3, [r3, #0]
 8002db2:	2b01      	cmp	r3, #1
 8002db4:	d901      	bls.n	8002dba <xTaskIncrementTick+0x12a>
 8002db6:	2301      	movs	r3, #1
 8002db8:	617b      	str	r3, [r7, #20]
 8002dba:	e004      	b.n	8002dc6 <xTaskIncrementTick+0x136>
 8002dbc:	4b10      	ldr	r3, [pc, #64]	; (8002e00 <xTaskIncrementTick+0x170>)
 8002dbe:	681b      	ldr	r3, [r3, #0]
 8002dc0:	1c5a      	adds	r2, r3, #1
 8002dc2:	4b0f      	ldr	r3, [pc, #60]	; (8002e00 <xTaskIncrementTick+0x170>)
 8002dc4:	601a      	str	r2, [r3, #0]
 8002dc6:	4b0f      	ldr	r3, [pc, #60]	; (8002e04 <xTaskIncrementTick+0x174>)
 8002dc8:	681b      	ldr	r3, [r3, #0]
 8002dca:	2b00      	cmp	r3, #0
 8002dcc:	d001      	beq.n	8002dd2 <xTaskIncrementTick+0x142>
 8002dce:	2301      	movs	r3, #1
 8002dd0:	617b      	str	r3, [r7, #20]
 8002dd2:	697b      	ldr	r3, [r7, #20]
 8002dd4:	4618      	mov	r0, r3
 8002dd6:	3718      	adds	r7, #24
 8002dd8:	46bd      	mov	sp, r7
 8002dda:	bd80      	pop	{r7, pc}
 8002ddc:	200010e4 	.word	0x200010e4
 8002de0:	200010c0 	.word	0x200010c0
 8002de4:	20001074 	.word	0x20001074
 8002de8:	20001078 	.word	0x20001078
 8002dec:	200010d4 	.word	0x200010d4
 8002df0:	200010dc 	.word	0x200010dc
 8002df4:	200010c4 	.word	0x200010c4
 8002df8:	20000fe8 	.word	0x20000fe8
 8002dfc:	20000fe4 	.word	0x20000fe4
 8002e00:	200010cc 	.word	0x200010cc
 8002e04:	200010d0 	.word	0x200010d0

08002e08 <vTaskSwitchContext>:
 8002e08:	b580      	push	{r7, lr}
 8002e0a:	b088      	sub	sp, #32
 8002e0c:	af00      	add	r7, sp, #0
 8002e0e:	4b38      	ldr	r3, [pc, #224]	; (8002ef0 <vTaskSwitchContext+0xe8>)
 8002e10:	681b      	ldr	r3, [r3, #0]
 8002e12:	2b00      	cmp	r3, #0
 8002e14:	d003      	beq.n	8002e1e <vTaskSwitchContext+0x16>
 8002e16:	4b37      	ldr	r3, [pc, #220]	; (8002ef4 <vTaskSwitchContext+0xec>)
 8002e18:	2201      	movs	r2, #1
 8002e1a:	601a      	str	r2, [r3, #0]
 8002e1c:	e065      	b.n	8002eea <vTaskSwitchContext+0xe2>
 8002e1e:	4b35      	ldr	r3, [pc, #212]	; (8002ef4 <vTaskSwitchContext+0xec>)
 8002e20:	2200      	movs	r2, #0
 8002e22:	601a      	str	r2, [r3, #0]
 8002e24:	4b34      	ldr	r3, [pc, #208]	; (8002ef8 <vTaskSwitchContext+0xf0>)
 8002e26:	681b      	ldr	r3, [r3, #0]
 8002e28:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002e2a:	61fb      	str	r3, [r7, #28]
 8002e2c:	f04f 33a5 	mov.w	r3, #2779096485	; 0xa5a5a5a5
 8002e30:	61bb      	str	r3, [r7, #24]
 8002e32:	69fb      	ldr	r3, [r7, #28]
 8002e34:	681a      	ldr	r2, [r3, #0]
 8002e36:	69bb      	ldr	r3, [r7, #24]
 8002e38:	429a      	cmp	r2, r3
 8002e3a:	d111      	bne.n	8002e60 <vTaskSwitchContext+0x58>
 8002e3c:	69fb      	ldr	r3, [r7, #28]
 8002e3e:	3304      	adds	r3, #4
 8002e40:	681a      	ldr	r2, [r3, #0]
 8002e42:	69bb      	ldr	r3, [r7, #24]
 8002e44:	429a      	cmp	r2, r3
 8002e46:	d10b      	bne.n	8002e60 <vTaskSwitchContext+0x58>
 8002e48:	69fb      	ldr	r3, [r7, #28]
 8002e4a:	3308      	adds	r3, #8
 8002e4c:	681a      	ldr	r2, [r3, #0]
 8002e4e:	69bb      	ldr	r3, [r7, #24]
 8002e50:	429a      	cmp	r2, r3
 8002e52:	d105      	bne.n	8002e60 <vTaskSwitchContext+0x58>
 8002e54:	69fb      	ldr	r3, [r7, #28]
 8002e56:	330c      	adds	r3, #12
 8002e58:	681a      	ldr	r2, [r3, #0]
 8002e5a:	69bb      	ldr	r3, [r7, #24]
 8002e5c:	429a      	cmp	r2, r3
 8002e5e:	d008      	beq.n	8002e72 <vTaskSwitchContext+0x6a>
 8002e60:	4b25      	ldr	r3, [pc, #148]	; (8002ef8 <vTaskSwitchContext+0xf0>)
 8002e62:	681a      	ldr	r2, [r3, #0]
 8002e64:	4b24      	ldr	r3, [pc, #144]	; (8002ef8 <vTaskSwitchContext+0xf0>)
 8002e66:	681b      	ldr	r3, [r3, #0]
 8002e68:	3334      	adds	r3, #52	; 0x34
 8002e6a:	4610      	mov	r0, r2
 8002e6c:	4619      	mov	r1, r3
 8002e6e:	f7fd fc91 	bl	8000794 <ADC_IRQHandler>
 8002e72:	4b22      	ldr	r3, [pc, #136]	; (8002efc <vTaskSwitchContext+0xf4>)
 8002e74:	681b      	ldr	r3, [r3, #0]
 8002e76:	60fb      	str	r3, [r7, #12]
 8002e78:	68fb      	ldr	r3, [r7, #12]
 8002e7a:	fab3 f383 	clz	r3, r3
 8002e7e:	72fb      	strb	r3, [r7, #11]
 8002e80:	7afb      	ldrb	r3, [r7, #11]
 8002e82:	f1c3 031f 	rsb	r3, r3, #31
 8002e86:	617b      	str	r3, [r7, #20]
 8002e88:	491d      	ldr	r1, [pc, #116]	; (8002f00 <vTaskSwitchContext+0xf8>)
 8002e8a:	697a      	ldr	r2, [r7, #20]
 8002e8c:	4613      	mov	r3, r2
 8002e8e:	009b      	lsls	r3, r3, #2
 8002e90:	4413      	add	r3, r2
 8002e92:	009b      	lsls	r3, r3, #2
 8002e94:	440b      	add	r3, r1
 8002e96:	681b      	ldr	r3, [r3, #0]
 8002e98:	2b00      	cmp	r3, #0
 8002e9a:	d109      	bne.n	8002eb0 <vTaskSwitchContext+0xa8>
 8002e9c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002ea0:	f383 8811 	msr	BASEPRI, r3
 8002ea4:	f3bf 8f6f 	isb	sy
 8002ea8:	f3bf 8f4f 	dsb	sy
 8002eac:	607b      	str	r3, [r7, #4]
 8002eae:	e7fe      	b.n	8002eae <vTaskSwitchContext+0xa6>
 8002eb0:	697a      	ldr	r2, [r7, #20]
 8002eb2:	4613      	mov	r3, r2
 8002eb4:	009b      	lsls	r3, r3, #2
 8002eb6:	4413      	add	r3, r2
 8002eb8:	009b      	lsls	r3, r3, #2
 8002eba:	4a11      	ldr	r2, [pc, #68]	; (8002f00 <vTaskSwitchContext+0xf8>)
 8002ebc:	4413      	add	r3, r2
 8002ebe:	613b      	str	r3, [r7, #16]
 8002ec0:	693b      	ldr	r3, [r7, #16]
 8002ec2:	685b      	ldr	r3, [r3, #4]
 8002ec4:	685a      	ldr	r2, [r3, #4]
 8002ec6:	693b      	ldr	r3, [r7, #16]
 8002ec8:	605a      	str	r2, [r3, #4]
 8002eca:	693b      	ldr	r3, [r7, #16]
 8002ecc:	685a      	ldr	r2, [r3, #4]
 8002ece:	693b      	ldr	r3, [r7, #16]
 8002ed0:	3308      	adds	r3, #8
 8002ed2:	429a      	cmp	r2, r3
 8002ed4:	d104      	bne.n	8002ee0 <vTaskSwitchContext+0xd8>
 8002ed6:	693b      	ldr	r3, [r7, #16]
 8002ed8:	685b      	ldr	r3, [r3, #4]
 8002eda:	685a      	ldr	r2, [r3, #4]
 8002edc:	693b      	ldr	r3, [r7, #16]
 8002ede:	605a      	str	r2, [r3, #4]
 8002ee0:	693b      	ldr	r3, [r7, #16]
 8002ee2:	685b      	ldr	r3, [r3, #4]
 8002ee4:	68da      	ldr	r2, [r3, #12]
 8002ee6:	4b04      	ldr	r3, [pc, #16]	; (8002ef8 <vTaskSwitchContext+0xf0>)
 8002ee8:	601a      	str	r2, [r3, #0]
 8002eea:	3720      	adds	r7, #32
 8002eec:	46bd      	mov	sp, r7
 8002eee:	bd80      	pop	{r7, pc}
 8002ef0:	200010e4 	.word	0x200010e4
 8002ef4:	200010d0 	.word	0x200010d0
 8002ef8:	20000fe4 	.word	0x20000fe4
 8002efc:	200010c4 	.word	0x200010c4
 8002f00:	20000fe8 	.word	0x20000fe8

08002f04 <vTaskPlaceOnEventList>:
 8002f04:	b580      	push	{r7, lr}
 8002f06:	b084      	sub	sp, #16
 8002f08:	af00      	add	r7, sp, #0
 8002f0a:	6078      	str	r0, [r7, #4]
 8002f0c:	6039      	str	r1, [r7, #0]
 8002f0e:	687b      	ldr	r3, [r7, #4]
 8002f10:	2b00      	cmp	r3, #0
 8002f12:	d109      	bne.n	8002f28 <vTaskPlaceOnEventList+0x24>
 8002f14:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002f18:	f383 8811 	msr	BASEPRI, r3
 8002f1c:	f3bf 8f6f 	isb	sy
 8002f20:	f3bf 8f4f 	dsb	sy
 8002f24:	60fb      	str	r3, [r7, #12]
 8002f26:	e7fe      	b.n	8002f26 <vTaskPlaceOnEventList+0x22>
 8002f28:	4b06      	ldr	r3, [pc, #24]	; (8002f44 <vTaskPlaceOnEventList+0x40>)
 8002f2a:	681b      	ldr	r3, [r3, #0]
 8002f2c:	3318      	adds	r3, #24
 8002f2e:	6878      	ldr	r0, [r7, #4]
 8002f30:	4619      	mov	r1, r3
 8002f32:	f001 fa51 	bl	80043d8 <vListInsert>
 8002f36:	6838      	ldr	r0, [r7, #0]
 8002f38:	2101      	movs	r1, #1
 8002f3a:	f000 fb0d 	bl	8003558 <prvAddCurrentTaskToDelayedList>
 8002f3e:	3710      	adds	r7, #16
 8002f40:	46bd      	mov	sp, r7
 8002f42:	bd80      	pop	{r7, pc}
 8002f44:	20000fe4 	.word	0x20000fe4

08002f48 <vTaskPlaceOnEventListRestricted>:
 8002f48:	b580      	push	{r7, lr}
 8002f4a:	b086      	sub	sp, #24
 8002f4c:	af00      	add	r7, sp, #0
 8002f4e:	60f8      	str	r0, [r7, #12]
 8002f50:	60b9      	str	r1, [r7, #8]
 8002f52:	607a      	str	r2, [r7, #4]
 8002f54:	68fb      	ldr	r3, [r7, #12]
 8002f56:	2b00      	cmp	r3, #0
 8002f58:	d109      	bne.n	8002f6e <vTaskPlaceOnEventListRestricted+0x26>
 8002f5a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002f5e:	f383 8811 	msr	BASEPRI, r3
 8002f62:	f3bf 8f6f 	isb	sy
 8002f66:	f3bf 8f4f 	dsb	sy
 8002f6a:	617b      	str	r3, [r7, #20]
 8002f6c:	e7fe      	b.n	8002f6c <vTaskPlaceOnEventListRestricted+0x24>
 8002f6e:	4b0a      	ldr	r3, [pc, #40]	; (8002f98 <vTaskPlaceOnEventListRestricted+0x50>)
 8002f70:	681b      	ldr	r3, [r3, #0]
 8002f72:	3318      	adds	r3, #24
 8002f74:	68f8      	ldr	r0, [r7, #12]
 8002f76:	4619      	mov	r1, r3
 8002f78:	f001 fa0a 	bl	8004390 <vListInsertEnd>
 8002f7c:	687b      	ldr	r3, [r7, #4]
 8002f7e:	2b00      	cmp	r3, #0
 8002f80:	d002      	beq.n	8002f88 <vTaskPlaceOnEventListRestricted+0x40>
 8002f82:	f04f 33ff 	mov.w	r3, #4294967295
 8002f86:	60bb      	str	r3, [r7, #8]
 8002f88:	68b8      	ldr	r0, [r7, #8]
 8002f8a:	6879      	ldr	r1, [r7, #4]
 8002f8c:	f000 fae4 	bl	8003558 <prvAddCurrentTaskToDelayedList>
 8002f90:	3718      	adds	r7, #24
 8002f92:	46bd      	mov	sp, r7
 8002f94:	bd80      	pop	{r7, pc}
 8002f96:	bf00      	nop
 8002f98:	20000fe4 	.word	0x20000fe4

08002f9c <xTaskRemoveFromEventList>:
 8002f9c:	b580      	push	{r7, lr}
 8002f9e:	b086      	sub	sp, #24
 8002fa0:	af00      	add	r7, sp, #0
 8002fa2:	6078      	str	r0, [r7, #4]
 8002fa4:	687b      	ldr	r3, [r7, #4]
 8002fa6:	68db      	ldr	r3, [r3, #12]
 8002fa8:	68db      	ldr	r3, [r3, #12]
 8002faa:	613b      	str	r3, [r7, #16]
 8002fac:	693b      	ldr	r3, [r7, #16]
 8002fae:	2b00      	cmp	r3, #0
 8002fb0:	d109      	bne.n	8002fc6 <xTaskRemoveFromEventList+0x2a>
 8002fb2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002fb6:	f383 8811 	msr	BASEPRI, r3
 8002fba:	f3bf 8f6f 	isb	sy
 8002fbe:	f3bf 8f4f 	dsb	sy
 8002fc2:	60fb      	str	r3, [r7, #12]
 8002fc4:	e7fe      	b.n	8002fc4 <xTaskRemoveFromEventList+0x28>
 8002fc6:	693b      	ldr	r3, [r7, #16]
 8002fc8:	3318      	adds	r3, #24
 8002fca:	4618      	mov	r0, r3
 8002fcc:	f001 fa3c 	bl	8004448 <uxListRemove>
 8002fd0:	4b1d      	ldr	r3, [pc, #116]	; (8003048 <xTaskRemoveFromEventList+0xac>)
 8002fd2:	681b      	ldr	r3, [r3, #0]
 8002fd4:	2b00      	cmp	r3, #0
 8002fd6:	d11c      	bne.n	8003012 <xTaskRemoveFromEventList+0x76>
 8002fd8:	693b      	ldr	r3, [r7, #16]
 8002fda:	3304      	adds	r3, #4
 8002fdc:	4618      	mov	r0, r3
 8002fde:	f001 fa33 	bl	8004448 <uxListRemove>
 8002fe2:	693b      	ldr	r3, [r7, #16]
 8002fe4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002fe6:	2201      	movs	r2, #1
 8002fe8:	409a      	lsls	r2, r3
 8002fea:	4b18      	ldr	r3, [pc, #96]	; (800304c <xTaskRemoveFromEventList+0xb0>)
 8002fec:	681b      	ldr	r3, [r3, #0]
 8002fee:	431a      	orrs	r2, r3
 8002ff0:	4b16      	ldr	r3, [pc, #88]	; (800304c <xTaskRemoveFromEventList+0xb0>)
 8002ff2:	601a      	str	r2, [r3, #0]
 8002ff4:	693b      	ldr	r3, [r7, #16]
 8002ff6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002ff8:	4613      	mov	r3, r2
 8002ffa:	009b      	lsls	r3, r3, #2
 8002ffc:	4413      	add	r3, r2
 8002ffe:	009b      	lsls	r3, r3, #2
 8003000:	4a13      	ldr	r2, [pc, #76]	; (8003050 <xTaskRemoveFromEventList+0xb4>)
 8003002:	441a      	add	r2, r3
 8003004:	693b      	ldr	r3, [r7, #16]
 8003006:	3304      	adds	r3, #4
 8003008:	4610      	mov	r0, r2
 800300a:	4619      	mov	r1, r3
 800300c:	f001 f9c0 	bl	8004390 <vListInsertEnd>
 8003010:	e005      	b.n	800301e <xTaskRemoveFromEventList+0x82>
 8003012:	693b      	ldr	r3, [r7, #16]
 8003014:	3318      	adds	r3, #24
 8003016:	480f      	ldr	r0, [pc, #60]	; (8003054 <xTaskRemoveFromEventList+0xb8>)
 8003018:	4619      	mov	r1, r3
 800301a:	f001 f9b9 	bl	8004390 <vListInsertEnd>
 800301e:	693b      	ldr	r3, [r7, #16]
 8003020:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003022:	4b0d      	ldr	r3, [pc, #52]	; (8003058 <xTaskRemoveFromEventList+0xbc>)
 8003024:	681b      	ldr	r3, [r3, #0]
 8003026:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003028:	429a      	cmp	r2, r3
 800302a:	d905      	bls.n	8003038 <xTaskRemoveFromEventList+0x9c>
 800302c:	2301      	movs	r3, #1
 800302e:	617b      	str	r3, [r7, #20]
 8003030:	4b0a      	ldr	r3, [pc, #40]	; (800305c <xTaskRemoveFromEventList+0xc0>)
 8003032:	2201      	movs	r2, #1
 8003034:	601a      	str	r2, [r3, #0]
 8003036:	e001      	b.n	800303c <xTaskRemoveFromEventList+0xa0>
 8003038:	2300      	movs	r3, #0
 800303a:	617b      	str	r3, [r7, #20]
 800303c:	697b      	ldr	r3, [r7, #20]
 800303e:	4618      	mov	r0, r3
 8003040:	3718      	adds	r7, #24
 8003042:	46bd      	mov	sp, r7
 8003044:	bd80      	pop	{r7, pc}
 8003046:	bf00      	nop
 8003048:	200010e4 	.word	0x200010e4
 800304c:	200010c4 	.word	0x200010c4
 8003050:	20000fe8 	.word	0x20000fe8
 8003054:	2000107c 	.word	0x2000107c
 8003058:	20000fe4 	.word	0x20000fe4
 800305c:	200010d0 	.word	0x200010d0

08003060 <vTaskSetTimeOutState>:
 8003060:	b480      	push	{r7}
 8003062:	b085      	sub	sp, #20
 8003064:	af00      	add	r7, sp, #0
 8003066:	6078      	str	r0, [r7, #4]
 8003068:	687b      	ldr	r3, [r7, #4]
 800306a:	2b00      	cmp	r3, #0
 800306c:	d109      	bne.n	8003082 <vTaskSetTimeOutState+0x22>
 800306e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003072:	f383 8811 	msr	BASEPRI, r3
 8003076:	f3bf 8f6f 	isb	sy
 800307a:	f3bf 8f4f 	dsb	sy
 800307e:	60fb      	str	r3, [r7, #12]
 8003080:	e7fe      	b.n	8003080 <vTaskSetTimeOutState+0x20>
 8003082:	4b06      	ldr	r3, [pc, #24]	; (800309c <vTaskSetTimeOutState+0x3c>)
 8003084:	681a      	ldr	r2, [r3, #0]
 8003086:	687b      	ldr	r3, [r7, #4]
 8003088:	601a      	str	r2, [r3, #0]
 800308a:	4b05      	ldr	r3, [pc, #20]	; (80030a0 <vTaskSetTimeOutState+0x40>)
 800308c:	681a      	ldr	r2, [r3, #0]
 800308e:	687b      	ldr	r3, [r7, #4]
 8003090:	605a      	str	r2, [r3, #4]
 8003092:	3714      	adds	r7, #20
 8003094:	46bd      	mov	sp, r7
 8003096:	f85d 7b04 	ldr.w	r7, [sp], #4
 800309a:	4770      	bx	lr
 800309c:	200010d4 	.word	0x200010d4
 80030a0:	200010c0 	.word	0x200010c0

080030a4 <xTaskCheckForTimeOut>:
 80030a4:	b580      	push	{r7, lr}
 80030a6:	b086      	sub	sp, #24
 80030a8:	af00      	add	r7, sp, #0
 80030aa:	6078      	str	r0, [r7, #4]
 80030ac:	6039      	str	r1, [r7, #0]
 80030ae:	687b      	ldr	r3, [r7, #4]
 80030b0:	2b00      	cmp	r3, #0
 80030b2:	d109      	bne.n	80030c8 <xTaskCheckForTimeOut+0x24>
 80030b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80030b8:	f383 8811 	msr	BASEPRI, r3
 80030bc:	f3bf 8f6f 	isb	sy
 80030c0:	f3bf 8f4f 	dsb	sy
 80030c4:	60fb      	str	r3, [r7, #12]
 80030c6:	e7fe      	b.n	80030c6 <xTaskCheckForTimeOut+0x22>
 80030c8:	683b      	ldr	r3, [r7, #0]
 80030ca:	2b00      	cmp	r3, #0
 80030cc:	d109      	bne.n	80030e2 <xTaskCheckForTimeOut+0x3e>
 80030ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 80030d2:	f383 8811 	msr	BASEPRI, r3
 80030d6:	f3bf 8f6f 	isb	sy
 80030da:	f3bf 8f4f 	dsb	sy
 80030de:	60bb      	str	r3, [r7, #8]
 80030e0:	e7fe      	b.n	80030e0 <xTaskCheckForTimeOut+0x3c>
 80030e2:	f000 fe4b 	bl	8003d7c <vPortEnterCritical>
 80030e6:	4b1c      	ldr	r3, [pc, #112]	; (8003158 <xTaskCheckForTimeOut+0xb4>)
 80030e8:	681b      	ldr	r3, [r3, #0]
 80030ea:	613b      	str	r3, [r7, #16]
 80030ec:	683b      	ldr	r3, [r7, #0]
 80030ee:	681b      	ldr	r3, [r3, #0]
 80030f0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80030f4:	d102      	bne.n	80030fc <xTaskCheckForTimeOut+0x58>
 80030f6:	2300      	movs	r3, #0
 80030f8:	617b      	str	r3, [r7, #20]
 80030fa:	e026      	b.n	800314a <xTaskCheckForTimeOut+0xa6>
 80030fc:	687b      	ldr	r3, [r7, #4]
 80030fe:	681a      	ldr	r2, [r3, #0]
 8003100:	4b16      	ldr	r3, [pc, #88]	; (800315c <xTaskCheckForTimeOut+0xb8>)
 8003102:	681b      	ldr	r3, [r3, #0]
 8003104:	429a      	cmp	r2, r3
 8003106:	d007      	beq.n	8003118 <xTaskCheckForTimeOut+0x74>
 8003108:	687b      	ldr	r3, [r7, #4]
 800310a:	685a      	ldr	r2, [r3, #4]
 800310c:	693b      	ldr	r3, [r7, #16]
 800310e:	429a      	cmp	r2, r3
 8003110:	d802      	bhi.n	8003118 <xTaskCheckForTimeOut+0x74>
 8003112:	2301      	movs	r3, #1
 8003114:	617b      	str	r3, [r7, #20]
 8003116:	e018      	b.n	800314a <xTaskCheckForTimeOut+0xa6>
 8003118:	687b      	ldr	r3, [r7, #4]
 800311a:	685b      	ldr	r3, [r3, #4]
 800311c:	693a      	ldr	r2, [r7, #16]
 800311e:	1ad2      	subs	r2, r2, r3
 8003120:	683b      	ldr	r3, [r7, #0]
 8003122:	681b      	ldr	r3, [r3, #0]
 8003124:	429a      	cmp	r2, r3
 8003126:	d20e      	bcs.n	8003146 <xTaskCheckForTimeOut+0xa2>
 8003128:	683b      	ldr	r3, [r7, #0]
 800312a:	681a      	ldr	r2, [r3, #0]
 800312c:	687b      	ldr	r3, [r7, #4]
 800312e:	6859      	ldr	r1, [r3, #4]
 8003130:	693b      	ldr	r3, [r7, #16]
 8003132:	1acb      	subs	r3, r1, r3
 8003134:	441a      	add	r2, r3
 8003136:	683b      	ldr	r3, [r7, #0]
 8003138:	601a      	str	r2, [r3, #0]
 800313a:	6878      	ldr	r0, [r7, #4]
 800313c:	f7ff ff90 	bl	8003060 <vTaskSetTimeOutState>
 8003140:	2300      	movs	r3, #0
 8003142:	617b      	str	r3, [r7, #20]
 8003144:	e001      	b.n	800314a <xTaskCheckForTimeOut+0xa6>
 8003146:	2301      	movs	r3, #1
 8003148:	617b      	str	r3, [r7, #20]
 800314a:	f000 fe45 	bl	8003dd8 <vPortExitCritical>
 800314e:	697b      	ldr	r3, [r7, #20]
 8003150:	4618      	mov	r0, r3
 8003152:	3718      	adds	r7, #24
 8003154:	46bd      	mov	sp, r7
 8003156:	bd80      	pop	{r7, pc}
 8003158:	200010c0 	.word	0x200010c0
 800315c:	200010d4 	.word	0x200010d4

08003160 <vTaskMissedYield>:
 8003160:	b480      	push	{r7}
 8003162:	af00      	add	r7, sp, #0
 8003164:	4b03      	ldr	r3, [pc, #12]	; (8003174 <vTaskMissedYield+0x14>)
 8003166:	2201      	movs	r2, #1
 8003168:	601a      	str	r2, [r3, #0]
 800316a:	46bd      	mov	sp, r7
 800316c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003170:	4770      	bx	lr
 8003172:	bf00      	nop
 8003174:	200010d0 	.word	0x200010d0

08003178 <prvIdleTask>:
 8003178:	b580      	push	{r7, lr}
 800317a:	b082      	sub	sp, #8
 800317c:	af00      	add	r7, sp, #0
 800317e:	6078      	str	r0, [r7, #4]
 8003180:	f000 f850 	bl	8003224 <prvCheckTasksWaitingTermination>
 8003184:	4b06      	ldr	r3, [pc, #24]	; (80031a0 <prvIdleTask+0x28>)
 8003186:	681b      	ldr	r3, [r3, #0]
 8003188:	2b01      	cmp	r3, #1
 800318a:	d907      	bls.n	800319c <prvIdleTask+0x24>
 800318c:	4b05      	ldr	r3, [pc, #20]	; (80031a4 <prvIdleTask+0x2c>)
 800318e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8003192:	601a      	str	r2, [r3, #0]
 8003194:	f3bf 8f4f 	dsb	sy
 8003198:	f3bf 8f6f 	isb	sy
 800319c:	e7f0      	b.n	8003180 <prvIdleTask+0x8>
 800319e:	bf00      	nop
 80031a0:	20000fe8 	.word	0x20000fe8
 80031a4:	e000ed04 	.word	0xe000ed04

080031a8 <prvInitialiseTaskLists>:
 80031a8:	b580      	push	{r7, lr}
 80031aa:	b082      	sub	sp, #8
 80031ac:	af00      	add	r7, sp, #0
 80031ae:	2300      	movs	r3, #0
 80031b0:	607b      	str	r3, [r7, #4]
 80031b2:	e00c      	b.n	80031ce <prvInitialiseTaskLists+0x26>
 80031b4:	687a      	ldr	r2, [r7, #4]
 80031b6:	4613      	mov	r3, r2
 80031b8:	009b      	lsls	r3, r3, #2
 80031ba:	4413      	add	r3, r2
 80031bc:	009b      	lsls	r3, r3, #2
 80031be:	4a11      	ldr	r2, [pc, #68]	; (8003204 <prvInitialiseTaskLists+0x5c>)
 80031c0:	4413      	add	r3, r2
 80031c2:	4618      	mov	r0, r3
 80031c4:	f001 f8b8 	bl	8004338 <vListInitialise>
 80031c8:	687b      	ldr	r3, [r7, #4]
 80031ca:	3301      	adds	r3, #1
 80031cc:	607b      	str	r3, [r7, #4]
 80031ce:	687b      	ldr	r3, [r7, #4]
 80031d0:	2b04      	cmp	r3, #4
 80031d2:	d9ef      	bls.n	80031b4 <prvInitialiseTaskLists+0xc>
 80031d4:	480c      	ldr	r0, [pc, #48]	; (8003208 <prvInitialiseTaskLists+0x60>)
 80031d6:	f001 f8af 	bl	8004338 <vListInitialise>
 80031da:	480c      	ldr	r0, [pc, #48]	; (800320c <prvInitialiseTaskLists+0x64>)
 80031dc:	f001 f8ac 	bl	8004338 <vListInitialise>
 80031e0:	480b      	ldr	r0, [pc, #44]	; (8003210 <prvInitialiseTaskLists+0x68>)
 80031e2:	f001 f8a9 	bl	8004338 <vListInitialise>
 80031e6:	480b      	ldr	r0, [pc, #44]	; (8003214 <prvInitialiseTaskLists+0x6c>)
 80031e8:	f001 f8a6 	bl	8004338 <vListInitialise>
 80031ec:	480a      	ldr	r0, [pc, #40]	; (8003218 <prvInitialiseTaskLists+0x70>)
 80031ee:	f001 f8a3 	bl	8004338 <vListInitialise>
 80031f2:	4b0a      	ldr	r3, [pc, #40]	; (800321c <prvInitialiseTaskLists+0x74>)
 80031f4:	4a04      	ldr	r2, [pc, #16]	; (8003208 <prvInitialiseTaskLists+0x60>)
 80031f6:	601a      	str	r2, [r3, #0]
 80031f8:	4b09      	ldr	r3, [pc, #36]	; (8003220 <prvInitialiseTaskLists+0x78>)
 80031fa:	4a04      	ldr	r2, [pc, #16]	; (800320c <prvInitialiseTaskLists+0x64>)
 80031fc:	601a      	str	r2, [r3, #0]
 80031fe:	3708      	adds	r7, #8
 8003200:	46bd      	mov	sp, r7
 8003202:	bd80      	pop	{r7, pc}
 8003204:	20000fe8 	.word	0x20000fe8
 8003208:	2000104c 	.word	0x2000104c
 800320c:	20001060 	.word	0x20001060
 8003210:	2000107c 	.word	0x2000107c
 8003214:	20001090 	.word	0x20001090
 8003218:	200010a8 	.word	0x200010a8
 800321c:	20001074 	.word	0x20001074
 8003220:	20001078 	.word	0x20001078

08003224 <prvCheckTasksWaitingTermination>:
 8003224:	b580      	push	{r7, lr}
 8003226:	b082      	sub	sp, #8
 8003228:	af00      	add	r7, sp, #0
 800322a:	e028      	b.n	800327e <prvCheckTasksWaitingTermination+0x5a>
 800322c:	f7ff fc76 	bl	8002b1c <vTaskSuspendAll>
 8003230:	4b16      	ldr	r3, [pc, #88]	; (800328c <prvCheckTasksWaitingTermination+0x68>)
 8003232:	681b      	ldr	r3, [r3, #0]
 8003234:	2b00      	cmp	r3, #0
 8003236:	bf14      	ite	ne
 8003238:	2300      	movne	r3, #0
 800323a:	2301      	moveq	r3, #1
 800323c:	b2db      	uxtb	r3, r3
 800323e:	607b      	str	r3, [r7, #4]
 8003240:	f7ff fc7a 	bl	8002b38 <xTaskResumeAll>
 8003244:	687b      	ldr	r3, [r7, #4]
 8003246:	2b00      	cmp	r3, #0
 8003248:	d119      	bne.n	800327e <prvCheckTasksWaitingTermination+0x5a>
 800324a:	f000 fd97 	bl	8003d7c <vPortEnterCritical>
 800324e:	4b0f      	ldr	r3, [pc, #60]	; (800328c <prvCheckTasksWaitingTermination+0x68>)
 8003250:	68db      	ldr	r3, [r3, #12]
 8003252:	68db      	ldr	r3, [r3, #12]
 8003254:	603b      	str	r3, [r7, #0]
 8003256:	683b      	ldr	r3, [r7, #0]
 8003258:	3304      	adds	r3, #4
 800325a:	4618      	mov	r0, r3
 800325c:	f001 f8f4 	bl	8004448 <uxListRemove>
 8003260:	4b0b      	ldr	r3, [pc, #44]	; (8003290 <prvCheckTasksWaitingTermination+0x6c>)
 8003262:	681b      	ldr	r3, [r3, #0]
 8003264:	1e5a      	subs	r2, r3, #1
 8003266:	4b0a      	ldr	r3, [pc, #40]	; (8003290 <prvCheckTasksWaitingTermination+0x6c>)
 8003268:	601a      	str	r2, [r3, #0]
 800326a:	4b0a      	ldr	r3, [pc, #40]	; (8003294 <prvCheckTasksWaitingTermination+0x70>)
 800326c:	681b      	ldr	r3, [r3, #0]
 800326e:	1e5a      	subs	r2, r3, #1
 8003270:	4b08      	ldr	r3, [pc, #32]	; (8003294 <prvCheckTasksWaitingTermination+0x70>)
 8003272:	601a      	str	r2, [r3, #0]
 8003274:	f000 fdb0 	bl	8003dd8 <vPortExitCritical>
 8003278:	6838      	ldr	r0, [r7, #0]
 800327a:	f000 f80d 	bl	8003298 <prvDeleteTCB>
 800327e:	4b05      	ldr	r3, [pc, #20]	; (8003294 <prvCheckTasksWaitingTermination+0x70>)
 8003280:	681b      	ldr	r3, [r3, #0]
 8003282:	2b00      	cmp	r3, #0
 8003284:	d1d2      	bne.n	800322c <prvCheckTasksWaitingTermination+0x8>
 8003286:	3708      	adds	r7, #8
 8003288:	46bd      	mov	sp, r7
 800328a:	bd80      	pop	{r7, pc}
 800328c:	20001090 	.word	0x20001090
 8003290:	200010bc 	.word	0x200010bc
 8003294:	200010a4 	.word	0x200010a4

08003298 <prvDeleteTCB>:
 8003298:	b580      	push	{r7, lr}
 800329a:	b082      	sub	sp, #8
 800329c:	af00      	add	r7, sp, #0
 800329e:	6078      	str	r0, [r7, #4]
 80032a0:	687b      	ldr	r3, [r7, #4]
 80032a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80032a4:	4618      	mov	r0, r3
 80032a6:	f000 ff35 	bl	8004114 <vPortFree>
 80032aa:	6878      	ldr	r0, [r7, #4]
 80032ac:	f000 ff32 	bl	8004114 <vPortFree>
 80032b0:	3708      	adds	r7, #8
 80032b2:	46bd      	mov	sp, r7
 80032b4:	bd80      	pop	{r7, pc}
 80032b6:	bf00      	nop

080032b8 <prvResetNextTaskUnblockTime>:
 80032b8:	b480      	push	{r7}
 80032ba:	b083      	sub	sp, #12
 80032bc:	af00      	add	r7, sp, #0
 80032be:	4b0e      	ldr	r3, [pc, #56]	; (80032f8 <prvResetNextTaskUnblockTime+0x40>)
 80032c0:	681b      	ldr	r3, [r3, #0]
 80032c2:	681b      	ldr	r3, [r3, #0]
 80032c4:	2b00      	cmp	r3, #0
 80032c6:	d101      	bne.n	80032cc <prvResetNextTaskUnblockTime+0x14>
 80032c8:	2301      	movs	r3, #1
 80032ca:	e000      	b.n	80032ce <prvResetNextTaskUnblockTime+0x16>
 80032cc:	2300      	movs	r3, #0
 80032ce:	2b00      	cmp	r3, #0
 80032d0:	d004      	beq.n	80032dc <prvResetNextTaskUnblockTime+0x24>
 80032d2:	4b0a      	ldr	r3, [pc, #40]	; (80032fc <prvResetNextTaskUnblockTime+0x44>)
 80032d4:	f04f 32ff 	mov.w	r2, #4294967295
 80032d8:	601a      	str	r2, [r3, #0]
 80032da:	e008      	b.n	80032ee <prvResetNextTaskUnblockTime+0x36>
 80032dc:	4b06      	ldr	r3, [pc, #24]	; (80032f8 <prvResetNextTaskUnblockTime+0x40>)
 80032de:	681b      	ldr	r3, [r3, #0]
 80032e0:	68db      	ldr	r3, [r3, #12]
 80032e2:	68db      	ldr	r3, [r3, #12]
 80032e4:	607b      	str	r3, [r7, #4]
 80032e6:	687b      	ldr	r3, [r7, #4]
 80032e8:	685a      	ldr	r2, [r3, #4]
 80032ea:	4b04      	ldr	r3, [pc, #16]	; (80032fc <prvResetNextTaskUnblockTime+0x44>)
 80032ec:	601a      	str	r2, [r3, #0]
 80032ee:	370c      	adds	r7, #12
 80032f0:	46bd      	mov	sp, r7
 80032f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032f6:	4770      	bx	lr
 80032f8:	20001074 	.word	0x20001074
 80032fc:	200010dc 	.word	0x200010dc

08003300 <xTaskGetSchedulerState>:
 8003300:	b480      	push	{r7}
 8003302:	b083      	sub	sp, #12
 8003304:	af00      	add	r7, sp, #0
 8003306:	4b0b      	ldr	r3, [pc, #44]	; (8003334 <xTaskGetSchedulerState+0x34>)
 8003308:	681b      	ldr	r3, [r3, #0]
 800330a:	2b00      	cmp	r3, #0
 800330c:	d102      	bne.n	8003314 <xTaskGetSchedulerState+0x14>
 800330e:	2301      	movs	r3, #1
 8003310:	607b      	str	r3, [r7, #4]
 8003312:	e008      	b.n	8003326 <xTaskGetSchedulerState+0x26>
 8003314:	4b08      	ldr	r3, [pc, #32]	; (8003338 <xTaskGetSchedulerState+0x38>)
 8003316:	681b      	ldr	r3, [r3, #0]
 8003318:	2b00      	cmp	r3, #0
 800331a:	d102      	bne.n	8003322 <xTaskGetSchedulerState+0x22>
 800331c:	2302      	movs	r3, #2
 800331e:	607b      	str	r3, [r7, #4]
 8003320:	e001      	b.n	8003326 <xTaskGetSchedulerState+0x26>
 8003322:	2300      	movs	r3, #0
 8003324:	607b      	str	r3, [r7, #4]
 8003326:	687b      	ldr	r3, [r7, #4]
 8003328:	4618      	mov	r0, r3
 800332a:	370c      	adds	r7, #12
 800332c:	46bd      	mov	sp, r7
 800332e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003332:	4770      	bx	lr
 8003334:	200010c8 	.word	0x200010c8
 8003338:	200010e4 	.word	0x200010e4

0800333c <vTaskPriorityInherit>:
 800333c:	b580      	push	{r7, lr}
 800333e:	b084      	sub	sp, #16
 8003340:	af00      	add	r7, sp, #0
 8003342:	6078      	str	r0, [r7, #4]
 8003344:	687b      	ldr	r3, [r7, #4]
 8003346:	60fb      	str	r3, [r7, #12]
 8003348:	687b      	ldr	r3, [r7, #4]
 800334a:	2b00      	cmp	r3, #0
 800334c:	d062      	beq.n	8003414 <vTaskPriorityInherit+0xd8>
 800334e:	68fb      	ldr	r3, [r7, #12]
 8003350:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003352:	4b32      	ldr	r3, [pc, #200]	; (800341c <vTaskPriorityInherit+0xe0>)
 8003354:	681b      	ldr	r3, [r3, #0]
 8003356:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003358:	429a      	cmp	r2, r3
 800335a:	d25b      	bcs.n	8003414 <vTaskPriorityInherit+0xd8>
 800335c:	68fb      	ldr	r3, [r7, #12]
 800335e:	699b      	ldr	r3, [r3, #24]
 8003360:	2b00      	cmp	r3, #0
 8003362:	db06      	blt.n	8003372 <vTaskPriorityInherit+0x36>
 8003364:	4b2d      	ldr	r3, [pc, #180]	; (800341c <vTaskPriorityInherit+0xe0>)
 8003366:	681b      	ldr	r3, [r3, #0]
 8003368:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800336a:	f1c3 0205 	rsb	r2, r3, #5
 800336e:	68fb      	ldr	r3, [r7, #12]
 8003370:	619a      	str	r2, [r3, #24]
 8003372:	68fb      	ldr	r3, [r7, #12]
 8003374:	6959      	ldr	r1, [r3, #20]
 8003376:	68fb      	ldr	r3, [r7, #12]
 8003378:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800337a:	4613      	mov	r3, r2
 800337c:	009b      	lsls	r3, r3, #2
 800337e:	4413      	add	r3, r2
 8003380:	009b      	lsls	r3, r3, #2
 8003382:	4a27      	ldr	r2, [pc, #156]	; (8003420 <vTaskPriorityInherit+0xe4>)
 8003384:	4413      	add	r3, r2
 8003386:	4299      	cmp	r1, r3
 8003388:	d101      	bne.n	800338e <vTaskPriorityInherit+0x52>
 800338a:	2301      	movs	r3, #1
 800338c:	e000      	b.n	8003390 <vTaskPriorityInherit+0x54>
 800338e:	2300      	movs	r3, #0
 8003390:	2b00      	cmp	r3, #0
 8003392:	d03a      	beq.n	800340a <vTaskPriorityInherit+0xce>
 8003394:	68fb      	ldr	r3, [r7, #12]
 8003396:	3304      	adds	r3, #4
 8003398:	4618      	mov	r0, r3
 800339a:	f001 f855 	bl	8004448 <uxListRemove>
 800339e:	4603      	mov	r3, r0
 80033a0:	2b00      	cmp	r3, #0
 80033a2:	d115      	bne.n	80033d0 <vTaskPriorityInherit+0x94>
 80033a4:	68fb      	ldr	r3, [r7, #12]
 80033a6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80033a8:	491d      	ldr	r1, [pc, #116]	; (8003420 <vTaskPriorityInherit+0xe4>)
 80033aa:	4613      	mov	r3, r2
 80033ac:	009b      	lsls	r3, r3, #2
 80033ae:	4413      	add	r3, r2
 80033b0:	009b      	lsls	r3, r3, #2
 80033b2:	440b      	add	r3, r1
 80033b4:	681b      	ldr	r3, [r3, #0]
 80033b6:	2b00      	cmp	r3, #0
 80033b8:	d10a      	bne.n	80033d0 <vTaskPriorityInherit+0x94>
 80033ba:	68fb      	ldr	r3, [r7, #12]
 80033bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80033be:	2201      	movs	r2, #1
 80033c0:	fa02 f303 	lsl.w	r3, r2, r3
 80033c4:	43da      	mvns	r2, r3
 80033c6:	4b17      	ldr	r3, [pc, #92]	; (8003424 <vTaskPriorityInherit+0xe8>)
 80033c8:	681b      	ldr	r3, [r3, #0]
 80033ca:	401a      	ands	r2, r3
 80033cc:	4b15      	ldr	r3, [pc, #84]	; (8003424 <vTaskPriorityInherit+0xe8>)
 80033ce:	601a      	str	r2, [r3, #0]
 80033d0:	4b12      	ldr	r3, [pc, #72]	; (800341c <vTaskPriorityInherit+0xe0>)
 80033d2:	681b      	ldr	r3, [r3, #0]
 80033d4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80033d6:	68fb      	ldr	r3, [r7, #12]
 80033d8:	62da      	str	r2, [r3, #44]	; 0x2c
 80033da:	68fb      	ldr	r3, [r7, #12]
 80033dc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80033de:	2201      	movs	r2, #1
 80033e0:	409a      	lsls	r2, r3
 80033e2:	4b10      	ldr	r3, [pc, #64]	; (8003424 <vTaskPriorityInherit+0xe8>)
 80033e4:	681b      	ldr	r3, [r3, #0]
 80033e6:	431a      	orrs	r2, r3
 80033e8:	4b0e      	ldr	r3, [pc, #56]	; (8003424 <vTaskPriorityInherit+0xe8>)
 80033ea:	601a      	str	r2, [r3, #0]
 80033ec:	68fb      	ldr	r3, [r7, #12]
 80033ee:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80033f0:	4613      	mov	r3, r2
 80033f2:	009b      	lsls	r3, r3, #2
 80033f4:	4413      	add	r3, r2
 80033f6:	009b      	lsls	r3, r3, #2
 80033f8:	4a09      	ldr	r2, [pc, #36]	; (8003420 <vTaskPriorityInherit+0xe4>)
 80033fa:	441a      	add	r2, r3
 80033fc:	68fb      	ldr	r3, [r7, #12]
 80033fe:	3304      	adds	r3, #4
 8003400:	4610      	mov	r0, r2
 8003402:	4619      	mov	r1, r3
 8003404:	f000 ffc4 	bl	8004390 <vListInsertEnd>
 8003408:	e004      	b.n	8003414 <vTaskPriorityInherit+0xd8>
 800340a:	4b04      	ldr	r3, [pc, #16]	; (800341c <vTaskPriorityInherit+0xe0>)
 800340c:	681b      	ldr	r3, [r3, #0]
 800340e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003410:	68fb      	ldr	r3, [r7, #12]
 8003412:	62da      	str	r2, [r3, #44]	; 0x2c
 8003414:	3710      	adds	r7, #16
 8003416:	46bd      	mov	sp, r7
 8003418:	bd80      	pop	{r7, pc}
 800341a:	bf00      	nop
 800341c:	20000fe4 	.word	0x20000fe4
 8003420:	20000fe8 	.word	0x20000fe8
 8003424:	200010c4 	.word	0x200010c4

08003428 <xTaskPriorityDisinherit>:
 8003428:	b580      	push	{r7, lr}
 800342a:	b086      	sub	sp, #24
 800342c:	af00      	add	r7, sp, #0
 800342e:	6078      	str	r0, [r7, #4]
 8003430:	687b      	ldr	r3, [r7, #4]
 8003432:	613b      	str	r3, [r7, #16]
 8003434:	2300      	movs	r3, #0
 8003436:	617b      	str	r3, [r7, #20]
 8003438:	687b      	ldr	r3, [r7, #4]
 800343a:	2b00      	cmp	r3, #0
 800343c:	d06c      	beq.n	8003518 <xTaskPriorityDisinherit+0xf0>
 800343e:	4b39      	ldr	r3, [pc, #228]	; (8003524 <xTaskPriorityDisinherit+0xfc>)
 8003440:	681b      	ldr	r3, [r3, #0]
 8003442:	693a      	ldr	r2, [r7, #16]
 8003444:	429a      	cmp	r2, r3
 8003446:	d009      	beq.n	800345c <xTaskPriorityDisinherit+0x34>
 8003448:	f04f 0350 	mov.w	r3, #80	; 0x50
 800344c:	f383 8811 	msr	BASEPRI, r3
 8003450:	f3bf 8f6f 	isb	sy
 8003454:	f3bf 8f4f 	dsb	sy
 8003458:	60fb      	str	r3, [r7, #12]
 800345a:	e7fe      	b.n	800345a <xTaskPriorityDisinherit+0x32>
 800345c:	693b      	ldr	r3, [r7, #16]
 800345e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003460:	2b00      	cmp	r3, #0
 8003462:	d109      	bne.n	8003478 <xTaskPriorityDisinherit+0x50>
 8003464:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003468:	f383 8811 	msr	BASEPRI, r3
 800346c:	f3bf 8f6f 	isb	sy
 8003470:	f3bf 8f4f 	dsb	sy
 8003474:	60bb      	str	r3, [r7, #8]
 8003476:	e7fe      	b.n	8003476 <xTaskPriorityDisinherit+0x4e>
 8003478:	693b      	ldr	r3, [r7, #16]
 800347a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800347c:	1e5a      	subs	r2, r3, #1
 800347e:	693b      	ldr	r3, [r7, #16]
 8003480:	64da      	str	r2, [r3, #76]	; 0x4c
 8003482:	693b      	ldr	r3, [r7, #16]
 8003484:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003486:	693b      	ldr	r3, [r7, #16]
 8003488:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800348a:	429a      	cmp	r2, r3
 800348c:	d044      	beq.n	8003518 <xTaskPriorityDisinherit+0xf0>
 800348e:	693b      	ldr	r3, [r7, #16]
 8003490:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003492:	2b00      	cmp	r3, #0
 8003494:	d140      	bne.n	8003518 <xTaskPriorityDisinherit+0xf0>
 8003496:	693b      	ldr	r3, [r7, #16]
 8003498:	3304      	adds	r3, #4
 800349a:	4618      	mov	r0, r3
 800349c:	f000 ffd4 	bl	8004448 <uxListRemove>
 80034a0:	4603      	mov	r3, r0
 80034a2:	2b00      	cmp	r3, #0
 80034a4:	d115      	bne.n	80034d2 <xTaskPriorityDisinherit+0xaa>
 80034a6:	693b      	ldr	r3, [r7, #16]
 80034a8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80034aa:	491f      	ldr	r1, [pc, #124]	; (8003528 <xTaskPriorityDisinherit+0x100>)
 80034ac:	4613      	mov	r3, r2
 80034ae:	009b      	lsls	r3, r3, #2
 80034b0:	4413      	add	r3, r2
 80034b2:	009b      	lsls	r3, r3, #2
 80034b4:	440b      	add	r3, r1
 80034b6:	681b      	ldr	r3, [r3, #0]
 80034b8:	2b00      	cmp	r3, #0
 80034ba:	d10a      	bne.n	80034d2 <xTaskPriorityDisinherit+0xaa>
 80034bc:	693b      	ldr	r3, [r7, #16]
 80034be:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80034c0:	2201      	movs	r2, #1
 80034c2:	fa02 f303 	lsl.w	r3, r2, r3
 80034c6:	43da      	mvns	r2, r3
 80034c8:	4b18      	ldr	r3, [pc, #96]	; (800352c <xTaskPriorityDisinherit+0x104>)
 80034ca:	681b      	ldr	r3, [r3, #0]
 80034cc:	401a      	ands	r2, r3
 80034ce:	4b17      	ldr	r3, [pc, #92]	; (800352c <xTaskPriorityDisinherit+0x104>)
 80034d0:	601a      	str	r2, [r3, #0]
 80034d2:	693b      	ldr	r3, [r7, #16]
 80034d4:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 80034d6:	693b      	ldr	r3, [r7, #16]
 80034d8:	62da      	str	r2, [r3, #44]	; 0x2c
 80034da:	693b      	ldr	r3, [r7, #16]
 80034dc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80034de:	f1c3 0205 	rsb	r2, r3, #5
 80034e2:	693b      	ldr	r3, [r7, #16]
 80034e4:	619a      	str	r2, [r3, #24]
 80034e6:	693b      	ldr	r3, [r7, #16]
 80034e8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80034ea:	2201      	movs	r2, #1
 80034ec:	409a      	lsls	r2, r3
 80034ee:	4b0f      	ldr	r3, [pc, #60]	; (800352c <xTaskPriorityDisinherit+0x104>)
 80034f0:	681b      	ldr	r3, [r3, #0]
 80034f2:	431a      	orrs	r2, r3
 80034f4:	4b0d      	ldr	r3, [pc, #52]	; (800352c <xTaskPriorityDisinherit+0x104>)
 80034f6:	601a      	str	r2, [r3, #0]
 80034f8:	693b      	ldr	r3, [r7, #16]
 80034fa:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80034fc:	4613      	mov	r3, r2
 80034fe:	009b      	lsls	r3, r3, #2
 8003500:	4413      	add	r3, r2
 8003502:	009b      	lsls	r3, r3, #2
 8003504:	4a08      	ldr	r2, [pc, #32]	; (8003528 <xTaskPriorityDisinherit+0x100>)
 8003506:	441a      	add	r2, r3
 8003508:	693b      	ldr	r3, [r7, #16]
 800350a:	3304      	adds	r3, #4
 800350c:	4610      	mov	r0, r2
 800350e:	4619      	mov	r1, r3
 8003510:	f000 ff3e 	bl	8004390 <vListInsertEnd>
 8003514:	2301      	movs	r3, #1
 8003516:	617b      	str	r3, [r7, #20]
 8003518:	697b      	ldr	r3, [r7, #20]
 800351a:	4618      	mov	r0, r3
 800351c:	3718      	adds	r7, #24
 800351e:	46bd      	mov	sp, r7
 8003520:	bd80      	pop	{r7, pc}
 8003522:	bf00      	nop
 8003524:	20000fe4 	.word	0x20000fe4
 8003528:	20000fe8 	.word	0x20000fe8
 800352c:	200010c4 	.word	0x200010c4

08003530 <pvTaskIncrementMutexHeldCount>:
 8003530:	b480      	push	{r7}
 8003532:	af00      	add	r7, sp, #0
 8003534:	4b07      	ldr	r3, [pc, #28]	; (8003554 <pvTaskIncrementMutexHeldCount+0x24>)
 8003536:	681b      	ldr	r3, [r3, #0]
 8003538:	2b00      	cmp	r3, #0
 800353a:	d004      	beq.n	8003546 <pvTaskIncrementMutexHeldCount+0x16>
 800353c:	4b05      	ldr	r3, [pc, #20]	; (8003554 <pvTaskIncrementMutexHeldCount+0x24>)
 800353e:	681b      	ldr	r3, [r3, #0]
 8003540:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8003542:	3201      	adds	r2, #1
 8003544:	64da      	str	r2, [r3, #76]	; 0x4c
 8003546:	4b03      	ldr	r3, [pc, #12]	; (8003554 <pvTaskIncrementMutexHeldCount+0x24>)
 8003548:	681b      	ldr	r3, [r3, #0]
 800354a:	4618      	mov	r0, r3
 800354c:	46bd      	mov	sp, r7
 800354e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003552:	4770      	bx	lr
 8003554:	20000fe4 	.word	0x20000fe4

08003558 <prvAddCurrentTaskToDelayedList>:
 8003558:	b580      	push	{r7, lr}
 800355a:	b084      	sub	sp, #16
 800355c:	af00      	add	r7, sp, #0
 800355e:	6078      	str	r0, [r7, #4]
 8003560:	6039      	str	r1, [r7, #0]
 8003562:	4b28      	ldr	r3, [pc, #160]	; (8003604 <prvAddCurrentTaskToDelayedList+0xac>)
 8003564:	681b      	ldr	r3, [r3, #0]
 8003566:	60fb      	str	r3, [r7, #12]
 8003568:	4b27      	ldr	r3, [pc, #156]	; (8003608 <prvAddCurrentTaskToDelayedList+0xb0>)
 800356a:	681b      	ldr	r3, [r3, #0]
 800356c:	3304      	adds	r3, #4
 800356e:	4618      	mov	r0, r3
 8003570:	f000 ff6a 	bl	8004448 <uxListRemove>
 8003574:	4603      	mov	r3, r0
 8003576:	2b00      	cmp	r3, #0
 8003578:	d10b      	bne.n	8003592 <prvAddCurrentTaskToDelayedList+0x3a>
 800357a:	4b23      	ldr	r3, [pc, #140]	; (8003608 <prvAddCurrentTaskToDelayedList+0xb0>)
 800357c:	681b      	ldr	r3, [r3, #0]
 800357e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003580:	2201      	movs	r2, #1
 8003582:	fa02 f303 	lsl.w	r3, r2, r3
 8003586:	43da      	mvns	r2, r3
 8003588:	4b20      	ldr	r3, [pc, #128]	; (800360c <prvAddCurrentTaskToDelayedList+0xb4>)
 800358a:	681b      	ldr	r3, [r3, #0]
 800358c:	401a      	ands	r2, r3
 800358e:	4b1f      	ldr	r3, [pc, #124]	; (800360c <prvAddCurrentTaskToDelayedList+0xb4>)
 8003590:	601a      	str	r2, [r3, #0]
 8003592:	687b      	ldr	r3, [r7, #4]
 8003594:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003598:	d10a      	bne.n	80035b0 <prvAddCurrentTaskToDelayedList+0x58>
 800359a:	683b      	ldr	r3, [r7, #0]
 800359c:	2b00      	cmp	r3, #0
 800359e:	d007      	beq.n	80035b0 <prvAddCurrentTaskToDelayedList+0x58>
 80035a0:	4b19      	ldr	r3, [pc, #100]	; (8003608 <prvAddCurrentTaskToDelayedList+0xb0>)
 80035a2:	681b      	ldr	r3, [r3, #0]
 80035a4:	3304      	adds	r3, #4
 80035a6:	481a      	ldr	r0, [pc, #104]	; (8003610 <prvAddCurrentTaskToDelayedList+0xb8>)
 80035a8:	4619      	mov	r1, r3
 80035aa:	f000 fef1 	bl	8004390 <vListInsertEnd>
 80035ae:	e026      	b.n	80035fe <prvAddCurrentTaskToDelayedList+0xa6>
 80035b0:	68fa      	ldr	r2, [r7, #12]
 80035b2:	687b      	ldr	r3, [r7, #4]
 80035b4:	4413      	add	r3, r2
 80035b6:	60bb      	str	r3, [r7, #8]
 80035b8:	4b13      	ldr	r3, [pc, #76]	; (8003608 <prvAddCurrentTaskToDelayedList+0xb0>)
 80035ba:	681b      	ldr	r3, [r3, #0]
 80035bc:	68ba      	ldr	r2, [r7, #8]
 80035be:	605a      	str	r2, [r3, #4]
 80035c0:	68ba      	ldr	r2, [r7, #8]
 80035c2:	68fb      	ldr	r3, [r7, #12]
 80035c4:	429a      	cmp	r2, r3
 80035c6:	d209      	bcs.n	80035dc <prvAddCurrentTaskToDelayedList+0x84>
 80035c8:	4b12      	ldr	r3, [pc, #72]	; (8003614 <prvAddCurrentTaskToDelayedList+0xbc>)
 80035ca:	681a      	ldr	r2, [r3, #0]
 80035cc:	4b0e      	ldr	r3, [pc, #56]	; (8003608 <prvAddCurrentTaskToDelayedList+0xb0>)
 80035ce:	681b      	ldr	r3, [r3, #0]
 80035d0:	3304      	adds	r3, #4
 80035d2:	4610      	mov	r0, r2
 80035d4:	4619      	mov	r1, r3
 80035d6:	f000 feff 	bl	80043d8 <vListInsert>
 80035da:	e010      	b.n	80035fe <prvAddCurrentTaskToDelayedList+0xa6>
 80035dc:	4b0e      	ldr	r3, [pc, #56]	; (8003618 <prvAddCurrentTaskToDelayedList+0xc0>)
 80035de:	681a      	ldr	r2, [r3, #0]
 80035e0:	4b09      	ldr	r3, [pc, #36]	; (8003608 <prvAddCurrentTaskToDelayedList+0xb0>)
 80035e2:	681b      	ldr	r3, [r3, #0]
 80035e4:	3304      	adds	r3, #4
 80035e6:	4610      	mov	r0, r2
 80035e8:	4619      	mov	r1, r3
 80035ea:	f000 fef5 	bl	80043d8 <vListInsert>
 80035ee:	4b0b      	ldr	r3, [pc, #44]	; (800361c <prvAddCurrentTaskToDelayedList+0xc4>)
 80035f0:	681b      	ldr	r3, [r3, #0]
 80035f2:	68ba      	ldr	r2, [r7, #8]
 80035f4:	429a      	cmp	r2, r3
 80035f6:	d202      	bcs.n	80035fe <prvAddCurrentTaskToDelayedList+0xa6>
 80035f8:	4b08      	ldr	r3, [pc, #32]	; (800361c <prvAddCurrentTaskToDelayedList+0xc4>)
 80035fa:	68ba      	ldr	r2, [r7, #8]
 80035fc:	601a      	str	r2, [r3, #0]
 80035fe:	3710      	adds	r7, #16
 8003600:	46bd      	mov	sp, r7
 8003602:	bd80      	pop	{r7, pc}
 8003604:	200010c0 	.word	0x200010c0
 8003608:	20000fe4 	.word	0x20000fe4
 800360c:	200010c4 	.word	0x200010c4
 8003610:	200010a8 	.word	0x200010a8
 8003614:	20001078 	.word	0x20001078
 8003618:	20001074 	.word	0x20001074
 800361c:	200010dc 	.word	0x200010dc

08003620 <xTimerCreateTimerTask>:
 8003620:	b580      	push	{r7, lr}
 8003622:	b084      	sub	sp, #16
 8003624:	af02      	add	r7, sp, #8
 8003626:	2300      	movs	r3, #0
 8003628:	607b      	str	r3, [r7, #4]
 800362a:	f000 fa99 	bl	8003b60 <prvCheckForValidListAndQueue>
 800362e:	4b11      	ldr	r3, [pc, #68]	; (8003674 <xTimerCreateTimerTask+0x54>)
 8003630:	681b      	ldr	r3, [r3, #0]
 8003632:	2b00      	cmp	r3, #0
 8003634:	d00b      	beq.n	800364e <xTimerCreateTimerTask+0x2e>
 8003636:	2302      	movs	r3, #2
 8003638:	9300      	str	r3, [sp, #0]
 800363a:	4b0f      	ldr	r3, [pc, #60]	; (8003678 <xTimerCreateTimerTask+0x58>)
 800363c:	9301      	str	r3, [sp, #4]
 800363e:	480f      	ldr	r0, [pc, #60]	; (800367c <xTimerCreateTimerTask+0x5c>)
 8003640:	490f      	ldr	r1, [pc, #60]	; (8003680 <xTimerCreateTimerTask+0x60>)
 8003642:	f44f 7282 	mov.w	r2, #260	; 0x104
 8003646:	2300      	movs	r3, #0
 8003648:	f7ff f8b8 	bl	80027bc <xTaskCreate>
 800364c:	6078      	str	r0, [r7, #4]
 800364e:	687b      	ldr	r3, [r7, #4]
 8003650:	2b00      	cmp	r3, #0
 8003652:	d109      	bne.n	8003668 <xTimerCreateTimerTask+0x48>
 8003654:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003658:	f383 8811 	msr	BASEPRI, r3
 800365c:	f3bf 8f6f 	isb	sy
 8003660:	f3bf 8f4f 	dsb	sy
 8003664:	603b      	str	r3, [r7, #0]
 8003666:	e7fe      	b.n	8003666 <xTimerCreateTimerTask+0x46>
 8003668:	687b      	ldr	r3, [r7, #4]
 800366a:	4618      	mov	r0, r3
 800366c:	3708      	adds	r7, #8
 800366e:	46bd      	mov	sp, r7
 8003670:	bd80      	pop	{r7, pc}
 8003672:	bf00      	nop
 8003674:	20001118 	.word	0x20001118
 8003678:	2000111c 	.word	0x2000111c
 800367c:	080037a9 	.word	0x080037a9
 8003680:	080050a8 	.word	0x080050a8

08003684 <xTimerGenericCommand>:
 8003684:	b580      	push	{r7, lr}
 8003686:	b08a      	sub	sp, #40	; 0x28
 8003688:	af00      	add	r7, sp, #0
 800368a:	60f8      	str	r0, [r7, #12]
 800368c:	60b9      	str	r1, [r7, #8]
 800368e:	607a      	str	r2, [r7, #4]
 8003690:	603b      	str	r3, [r7, #0]
 8003692:	2300      	movs	r3, #0
 8003694:	627b      	str	r3, [r7, #36]	; 0x24
 8003696:	68fb      	ldr	r3, [r7, #12]
 8003698:	2b00      	cmp	r3, #0
 800369a:	d109      	bne.n	80036b0 <xTimerGenericCommand+0x2c>
 800369c:	f04f 0350 	mov.w	r3, #80	; 0x50
 80036a0:	f383 8811 	msr	BASEPRI, r3
 80036a4:	f3bf 8f6f 	isb	sy
 80036a8:	f3bf 8f4f 	dsb	sy
 80036ac:	623b      	str	r3, [r7, #32]
 80036ae:	e7fe      	b.n	80036ae <xTimerGenericCommand+0x2a>
 80036b0:	4b1c      	ldr	r3, [pc, #112]	; (8003724 <xTimerGenericCommand+0xa0>)
 80036b2:	681b      	ldr	r3, [r3, #0]
 80036b4:	2b00      	cmp	r3, #0
 80036b6:	d030      	beq.n	800371a <xTimerGenericCommand+0x96>
 80036b8:	68bb      	ldr	r3, [r7, #8]
 80036ba:	617b      	str	r3, [r7, #20]
 80036bc:	687b      	ldr	r3, [r7, #4]
 80036be:	61bb      	str	r3, [r7, #24]
 80036c0:	68fb      	ldr	r3, [r7, #12]
 80036c2:	61fb      	str	r3, [r7, #28]
 80036c4:	68bb      	ldr	r3, [r7, #8]
 80036c6:	2b05      	cmp	r3, #5
 80036c8:	dc1c      	bgt.n	8003704 <xTimerGenericCommand+0x80>
 80036ca:	f7ff fe19 	bl	8003300 <xTaskGetSchedulerState>
 80036ce:	4603      	mov	r3, r0
 80036d0:	2b02      	cmp	r3, #2
 80036d2:	d10b      	bne.n	80036ec <xTimerGenericCommand+0x68>
 80036d4:	4b13      	ldr	r3, [pc, #76]	; (8003724 <xTimerGenericCommand+0xa0>)
 80036d6:	681a      	ldr	r2, [r3, #0]
 80036d8:	f107 0314 	add.w	r3, r7, #20
 80036dc:	4610      	mov	r0, r2
 80036de:	4619      	mov	r1, r3
 80036e0:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80036e2:	2300      	movs	r3, #0
 80036e4:	f000 ff9c 	bl	8004620 <xQueueGenericSend>
 80036e8:	6278      	str	r0, [r7, #36]	; 0x24
 80036ea:	e016      	b.n	800371a <xTimerGenericCommand+0x96>
 80036ec:	4b0d      	ldr	r3, [pc, #52]	; (8003724 <xTimerGenericCommand+0xa0>)
 80036ee:	681a      	ldr	r2, [r3, #0]
 80036f0:	f107 0314 	add.w	r3, r7, #20
 80036f4:	4610      	mov	r0, r2
 80036f6:	4619      	mov	r1, r3
 80036f8:	2200      	movs	r2, #0
 80036fa:	2300      	movs	r3, #0
 80036fc:	f000 ff90 	bl	8004620 <xQueueGenericSend>
 8003700:	6278      	str	r0, [r7, #36]	; 0x24
 8003702:	e00a      	b.n	800371a <xTimerGenericCommand+0x96>
 8003704:	4b07      	ldr	r3, [pc, #28]	; (8003724 <xTimerGenericCommand+0xa0>)
 8003706:	681a      	ldr	r2, [r3, #0]
 8003708:	f107 0314 	add.w	r3, r7, #20
 800370c:	4610      	mov	r0, r2
 800370e:	4619      	mov	r1, r3
 8003710:	683a      	ldr	r2, [r7, #0]
 8003712:	2300      	movs	r3, #0
 8003714:	f001 f882 	bl	800481c <xQueueGenericSendFromISR>
 8003718:	6278      	str	r0, [r7, #36]	; 0x24
 800371a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800371c:	4618      	mov	r0, r3
 800371e:	3728      	adds	r7, #40	; 0x28
 8003720:	46bd      	mov	sp, r7
 8003722:	bd80      	pop	{r7, pc}
 8003724:	20001118 	.word	0x20001118

08003728 <prvProcessExpiredTimer>:
 8003728:	b580      	push	{r7, lr}
 800372a:	b088      	sub	sp, #32
 800372c:	af02      	add	r7, sp, #8
 800372e:	6078      	str	r0, [r7, #4]
 8003730:	6039      	str	r1, [r7, #0]
 8003732:	4b1c      	ldr	r3, [pc, #112]	; (80037a4 <prvProcessExpiredTimer+0x7c>)
 8003734:	681b      	ldr	r3, [r3, #0]
 8003736:	68db      	ldr	r3, [r3, #12]
 8003738:	68db      	ldr	r3, [r3, #12]
 800373a:	617b      	str	r3, [r7, #20]
 800373c:	697b      	ldr	r3, [r7, #20]
 800373e:	3304      	adds	r3, #4
 8003740:	4618      	mov	r0, r3
 8003742:	f000 fe81 	bl	8004448 <uxListRemove>
 8003746:	697b      	ldr	r3, [r7, #20]
 8003748:	69db      	ldr	r3, [r3, #28]
 800374a:	2b01      	cmp	r3, #1
 800374c:	d122      	bne.n	8003794 <prvProcessExpiredTimer+0x6c>
 800374e:	697b      	ldr	r3, [r7, #20]
 8003750:	699a      	ldr	r2, [r3, #24]
 8003752:	687b      	ldr	r3, [r7, #4]
 8003754:	4413      	add	r3, r2
 8003756:	6978      	ldr	r0, [r7, #20]
 8003758:	4619      	mov	r1, r3
 800375a:	683a      	ldr	r2, [r7, #0]
 800375c:	687b      	ldr	r3, [r7, #4]
 800375e:	f000 f8c7 	bl	80038f0 <prvInsertTimerInActiveList>
 8003762:	4603      	mov	r3, r0
 8003764:	2b00      	cmp	r3, #0
 8003766:	d015      	beq.n	8003794 <prvProcessExpiredTimer+0x6c>
 8003768:	2300      	movs	r3, #0
 800376a:	9300      	str	r3, [sp, #0]
 800376c:	6978      	ldr	r0, [r7, #20]
 800376e:	2100      	movs	r1, #0
 8003770:	687a      	ldr	r2, [r7, #4]
 8003772:	2300      	movs	r3, #0
 8003774:	f7ff ff86 	bl	8003684 <xTimerGenericCommand>
 8003778:	6138      	str	r0, [r7, #16]
 800377a:	693b      	ldr	r3, [r7, #16]
 800377c:	2b00      	cmp	r3, #0
 800377e:	d109      	bne.n	8003794 <prvProcessExpiredTimer+0x6c>
 8003780:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003784:	f383 8811 	msr	BASEPRI, r3
 8003788:	f3bf 8f6f 	isb	sy
 800378c:	f3bf 8f4f 	dsb	sy
 8003790:	60fb      	str	r3, [r7, #12]
 8003792:	e7fe      	b.n	8003792 <prvProcessExpiredTimer+0x6a>
 8003794:	697b      	ldr	r3, [r7, #20]
 8003796:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003798:	6978      	ldr	r0, [r7, #20]
 800379a:	4798      	blx	r3
 800379c:	3718      	adds	r7, #24
 800379e:	46bd      	mov	sp, r7
 80037a0:	bd80      	pop	{r7, pc}
 80037a2:	bf00      	nop
 80037a4:	20001110 	.word	0x20001110

080037a8 <prvTimerTask>:
 80037a8:	b580      	push	{r7, lr}
 80037aa:	b084      	sub	sp, #16
 80037ac:	af00      	add	r7, sp, #0
 80037ae:	6078      	str	r0, [r7, #4]
 80037b0:	f107 0308 	add.w	r3, r7, #8
 80037b4:	4618      	mov	r0, r3
 80037b6:	f000 f857 	bl	8003868 <prvGetNextExpireTime>
 80037ba:	60f8      	str	r0, [r7, #12]
 80037bc:	68bb      	ldr	r3, [r7, #8]
 80037be:	68f8      	ldr	r0, [r7, #12]
 80037c0:	4619      	mov	r1, r3
 80037c2:	f000 f803 	bl	80037cc <prvProcessTimerOrBlockTask>
 80037c6:	f000 f8d5 	bl	8003974 <prvProcessReceivedCommands>
 80037ca:	e7f1      	b.n	80037b0 <prvTimerTask+0x8>

080037cc <prvProcessTimerOrBlockTask>:
 80037cc:	b580      	push	{r7, lr}
 80037ce:	b084      	sub	sp, #16
 80037d0:	af00      	add	r7, sp, #0
 80037d2:	6078      	str	r0, [r7, #4]
 80037d4:	6039      	str	r1, [r7, #0]
 80037d6:	f7ff f9a1 	bl	8002b1c <vTaskSuspendAll>
 80037da:	f107 0308 	add.w	r3, r7, #8
 80037de:	4618      	mov	r0, r3
 80037e0:	f000 f866 	bl	80038b0 <prvSampleTimeNow>
 80037e4:	60f8      	str	r0, [r7, #12]
 80037e6:	68bb      	ldr	r3, [r7, #8]
 80037e8:	2b00      	cmp	r3, #0
 80037ea:	d131      	bne.n	8003850 <prvProcessTimerOrBlockTask+0x84>
 80037ec:	683b      	ldr	r3, [r7, #0]
 80037ee:	2b00      	cmp	r3, #0
 80037f0:	d10a      	bne.n	8003808 <prvProcessTimerOrBlockTask+0x3c>
 80037f2:	687a      	ldr	r2, [r7, #4]
 80037f4:	68fb      	ldr	r3, [r7, #12]
 80037f6:	429a      	cmp	r2, r3
 80037f8:	d806      	bhi.n	8003808 <prvProcessTimerOrBlockTask+0x3c>
 80037fa:	f7ff f99d 	bl	8002b38 <xTaskResumeAll>
 80037fe:	6878      	ldr	r0, [r7, #4]
 8003800:	68f9      	ldr	r1, [r7, #12]
 8003802:	f7ff ff91 	bl	8003728 <prvProcessExpiredTimer>
 8003806:	e025      	b.n	8003854 <prvProcessTimerOrBlockTask+0x88>
 8003808:	683b      	ldr	r3, [r7, #0]
 800380a:	2b00      	cmp	r3, #0
 800380c:	d008      	beq.n	8003820 <prvProcessTimerOrBlockTask+0x54>
 800380e:	4b13      	ldr	r3, [pc, #76]	; (800385c <prvProcessTimerOrBlockTask+0x90>)
 8003810:	681b      	ldr	r3, [r3, #0]
 8003812:	681b      	ldr	r3, [r3, #0]
 8003814:	2b00      	cmp	r3, #0
 8003816:	bf14      	ite	ne
 8003818:	2300      	movne	r3, #0
 800381a:	2301      	moveq	r3, #1
 800381c:	b2db      	uxtb	r3, r3
 800381e:	603b      	str	r3, [r7, #0]
 8003820:	4b0f      	ldr	r3, [pc, #60]	; (8003860 <prvProcessTimerOrBlockTask+0x94>)
 8003822:	681a      	ldr	r2, [r3, #0]
 8003824:	6879      	ldr	r1, [r7, #4]
 8003826:	68fb      	ldr	r3, [r7, #12]
 8003828:	1acb      	subs	r3, r1, r3
 800382a:	4610      	mov	r0, r2
 800382c:	4619      	mov	r1, r3
 800382e:	683a      	ldr	r2, [r7, #0]
 8003830:	f001 fad6 	bl	8004de0 <vQueueWaitForMessageRestricted>
 8003834:	f7ff f980 	bl	8002b38 <xTaskResumeAll>
 8003838:	4603      	mov	r3, r0
 800383a:	2b00      	cmp	r3, #0
 800383c:	d10a      	bne.n	8003854 <prvProcessTimerOrBlockTask+0x88>
 800383e:	4b09      	ldr	r3, [pc, #36]	; (8003864 <prvProcessTimerOrBlockTask+0x98>)
 8003840:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8003844:	601a      	str	r2, [r3, #0]
 8003846:	f3bf 8f4f 	dsb	sy
 800384a:	f3bf 8f6f 	isb	sy
 800384e:	e001      	b.n	8003854 <prvProcessTimerOrBlockTask+0x88>
 8003850:	f7ff f972 	bl	8002b38 <xTaskResumeAll>
 8003854:	3710      	adds	r7, #16
 8003856:	46bd      	mov	sp, r7
 8003858:	bd80      	pop	{r7, pc}
 800385a:	bf00      	nop
 800385c:	20001114 	.word	0x20001114
 8003860:	20001118 	.word	0x20001118
 8003864:	e000ed04 	.word	0xe000ed04

08003868 <prvGetNextExpireTime>:
 8003868:	b480      	push	{r7}
 800386a:	b085      	sub	sp, #20
 800386c:	af00      	add	r7, sp, #0
 800386e:	6078      	str	r0, [r7, #4]
 8003870:	4b0e      	ldr	r3, [pc, #56]	; (80038ac <prvGetNextExpireTime+0x44>)
 8003872:	681b      	ldr	r3, [r3, #0]
 8003874:	681b      	ldr	r3, [r3, #0]
 8003876:	2b00      	cmp	r3, #0
 8003878:	bf14      	ite	ne
 800387a:	2300      	movne	r3, #0
 800387c:	2301      	moveq	r3, #1
 800387e:	b2db      	uxtb	r3, r3
 8003880:	461a      	mov	r2, r3
 8003882:	687b      	ldr	r3, [r7, #4]
 8003884:	601a      	str	r2, [r3, #0]
 8003886:	687b      	ldr	r3, [r7, #4]
 8003888:	681b      	ldr	r3, [r3, #0]
 800388a:	2b00      	cmp	r3, #0
 800388c:	d105      	bne.n	800389a <prvGetNextExpireTime+0x32>
 800388e:	4b07      	ldr	r3, [pc, #28]	; (80038ac <prvGetNextExpireTime+0x44>)
 8003890:	681b      	ldr	r3, [r3, #0]
 8003892:	68db      	ldr	r3, [r3, #12]
 8003894:	681b      	ldr	r3, [r3, #0]
 8003896:	60fb      	str	r3, [r7, #12]
 8003898:	e001      	b.n	800389e <prvGetNextExpireTime+0x36>
 800389a:	2300      	movs	r3, #0
 800389c:	60fb      	str	r3, [r7, #12]
 800389e:	68fb      	ldr	r3, [r7, #12]
 80038a0:	4618      	mov	r0, r3
 80038a2:	3714      	adds	r7, #20
 80038a4:	46bd      	mov	sp, r7
 80038a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80038aa:	4770      	bx	lr
 80038ac:	20001110 	.word	0x20001110

080038b0 <prvSampleTimeNow>:
 80038b0:	b580      	push	{r7, lr}
 80038b2:	b084      	sub	sp, #16
 80038b4:	af00      	add	r7, sp, #0
 80038b6:	6078      	str	r0, [r7, #4]
 80038b8:	f7ff f9da 	bl	8002c70 <xTaskGetTickCount>
 80038bc:	60f8      	str	r0, [r7, #12]
 80038be:	4b0b      	ldr	r3, [pc, #44]	; (80038ec <prvSampleTimeNow+0x3c>)
 80038c0:	681b      	ldr	r3, [r3, #0]
 80038c2:	68fa      	ldr	r2, [r7, #12]
 80038c4:	429a      	cmp	r2, r3
 80038c6:	d205      	bcs.n	80038d4 <prvSampleTimeNow+0x24>
 80038c8:	f000 f8ea 	bl	8003aa0 <prvSwitchTimerLists>
 80038cc:	687b      	ldr	r3, [r7, #4]
 80038ce:	2201      	movs	r2, #1
 80038d0:	601a      	str	r2, [r3, #0]
 80038d2:	e002      	b.n	80038da <prvSampleTimeNow+0x2a>
 80038d4:	687b      	ldr	r3, [r7, #4]
 80038d6:	2200      	movs	r2, #0
 80038d8:	601a      	str	r2, [r3, #0]
 80038da:	4b04      	ldr	r3, [pc, #16]	; (80038ec <prvSampleTimeNow+0x3c>)
 80038dc:	68fa      	ldr	r2, [r7, #12]
 80038de:	601a      	str	r2, [r3, #0]
 80038e0:	68fb      	ldr	r3, [r7, #12]
 80038e2:	4618      	mov	r0, r3
 80038e4:	3710      	adds	r7, #16
 80038e6:	46bd      	mov	sp, r7
 80038e8:	bd80      	pop	{r7, pc}
 80038ea:	bf00      	nop
 80038ec:	20001120 	.word	0x20001120

080038f0 <prvInsertTimerInActiveList>:
 80038f0:	b580      	push	{r7, lr}
 80038f2:	b086      	sub	sp, #24
 80038f4:	af00      	add	r7, sp, #0
 80038f6:	60f8      	str	r0, [r7, #12]
 80038f8:	60b9      	str	r1, [r7, #8]
 80038fa:	607a      	str	r2, [r7, #4]
 80038fc:	603b      	str	r3, [r7, #0]
 80038fe:	2300      	movs	r3, #0
 8003900:	617b      	str	r3, [r7, #20]
 8003902:	68fb      	ldr	r3, [r7, #12]
 8003904:	68ba      	ldr	r2, [r7, #8]
 8003906:	605a      	str	r2, [r3, #4]
 8003908:	68fb      	ldr	r3, [r7, #12]
 800390a:	68fa      	ldr	r2, [r7, #12]
 800390c:	611a      	str	r2, [r3, #16]
 800390e:	68ba      	ldr	r2, [r7, #8]
 8003910:	687b      	ldr	r3, [r7, #4]
 8003912:	429a      	cmp	r2, r3
 8003914:	d812      	bhi.n	800393c <prvInsertTimerInActiveList+0x4c>
 8003916:	687a      	ldr	r2, [r7, #4]
 8003918:	683b      	ldr	r3, [r7, #0]
 800391a:	1ad2      	subs	r2, r2, r3
 800391c:	68fb      	ldr	r3, [r7, #12]
 800391e:	699b      	ldr	r3, [r3, #24]
 8003920:	429a      	cmp	r2, r3
 8003922:	d302      	bcc.n	800392a <prvInsertTimerInActiveList+0x3a>
 8003924:	2301      	movs	r3, #1
 8003926:	617b      	str	r3, [r7, #20]
 8003928:	e01b      	b.n	8003962 <prvInsertTimerInActiveList+0x72>
 800392a:	4b10      	ldr	r3, [pc, #64]	; (800396c <prvInsertTimerInActiveList+0x7c>)
 800392c:	681a      	ldr	r2, [r3, #0]
 800392e:	68fb      	ldr	r3, [r7, #12]
 8003930:	3304      	adds	r3, #4
 8003932:	4610      	mov	r0, r2
 8003934:	4619      	mov	r1, r3
 8003936:	f000 fd4f 	bl	80043d8 <vListInsert>
 800393a:	e012      	b.n	8003962 <prvInsertTimerInActiveList+0x72>
 800393c:	687a      	ldr	r2, [r7, #4]
 800393e:	683b      	ldr	r3, [r7, #0]
 8003940:	429a      	cmp	r2, r3
 8003942:	d206      	bcs.n	8003952 <prvInsertTimerInActiveList+0x62>
 8003944:	68ba      	ldr	r2, [r7, #8]
 8003946:	683b      	ldr	r3, [r7, #0]
 8003948:	429a      	cmp	r2, r3
 800394a:	d302      	bcc.n	8003952 <prvInsertTimerInActiveList+0x62>
 800394c:	2301      	movs	r3, #1
 800394e:	617b      	str	r3, [r7, #20]
 8003950:	e007      	b.n	8003962 <prvInsertTimerInActiveList+0x72>
 8003952:	4b07      	ldr	r3, [pc, #28]	; (8003970 <prvInsertTimerInActiveList+0x80>)
 8003954:	681a      	ldr	r2, [r3, #0]
 8003956:	68fb      	ldr	r3, [r7, #12]
 8003958:	3304      	adds	r3, #4
 800395a:	4610      	mov	r0, r2
 800395c:	4619      	mov	r1, r3
 800395e:	f000 fd3b 	bl	80043d8 <vListInsert>
 8003962:	697b      	ldr	r3, [r7, #20]
 8003964:	4618      	mov	r0, r3
 8003966:	3718      	adds	r7, #24
 8003968:	46bd      	mov	sp, r7
 800396a:	bd80      	pop	{r7, pc}
 800396c:	20001114 	.word	0x20001114
 8003970:	20001110 	.word	0x20001110

08003974 <prvProcessReceivedCommands>:
 8003974:	b580      	push	{r7, lr}
 8003976:	b08c      	sub	sp, #48	; 0x30
 8003978:	af02      	add	r7, sp, #8
 800397a:	e07e      	b.n	8003a7a <prvProcessReceivedCommands+0x106>
 800397c:	68bb      	ldr	r3, [r7, #8]
 800397e:	2b00      	cmp	r3, #0
 8003980:	db7b      	blt.n	8003a7a <prvProcessReceivedCommands+0x106>
 8003982:	693b      	ldr	r3, [r7, #16]
 8003984:	627b      	str	r3, [r7, #36]	; 0x24
 8003986:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003988:	695b      	ldr	r3, [r3, #20]
 800398a:	2b00      	cmp	r3, #0
 800398c:	d004      	beq.n	8003998 <prvProcessReceivedCommands+0x24>
 800398e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003990:	3304      	adds	r3, #4
 8003992:	4618      	mov	r0, r3
 8003994:	f000 fd58 	bl	8004448 <uxListRemove>
 8003998:	1d3b      	adds	r3, r7, #4
 800399a:	4618      	mov	r0, r3
 800399c:	f7ff ff88 	bl	80038b0 <prvSampleTimeNow>
 80039a0:	6238      	str	r0, [r7, #32]
 80039a2:	68bb      	ldr	r3, [r7, #8]
 80039a4:	2b09      	cmp	r3, #9
 80039a6:	d867      	bhi.n	8003a78 <prvProcessReceivedCommands+0x104>
 80039a8:	a201      	add	r2, pc, #4	; (adr r2, 80039b0 <prvProcessReceivedCommands+0x3c>)
 80039aa:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80039ae:	bf00      	nop
 80039b0:	080039d9 	.word	0x080039d9
 80039b4:	080039d9 	.word	0x080039d9
 80039b8:	080039d9 	.word	0x080039d9
 80039bc:	08003a79 	.word	0x08003a79
 80039c0:	08003a39 	.word	0x08003a39
 80039c4:	08003a71 	.word	0x08003a71
 80039c8:	080039d9 	.word	0x080039d9
 80039cc:	080039d9 	.word	0x080039d9
 80039d0:	08003a79 	.word	0x08003a79
 80039d4:	08003a39 	.word	0x08003a39
 80039d8:	68fa      	ldr	r2, [r7, #12]
 80039da:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80039dc:	699b      	ldr	r3, [r3, #24]
 80039de:	441a      	add	r2, r3
 80039e0:	68fb      	ldr	r3, [r7, #12]
 80039e2:	6a78      	ldr	r0, [r7, #36]	; 0x24
 80039e4:	4611      	mov	r1, r2
 80039e6:	6a3a      	ldr	r2, [r7, #32]
 80039e8:	f7ff ff82 	bl	80038f0 <prvInsertTimerInActiveList>
 80039ec:	4603      	mov	r3, r0
 80039ee:	2b00      	cmp	r3, #0
 80039f0:	d021      	beq.n	8003a36 <prvProcessReceivedCommands+0xc2>
 80039f2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80039f4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80039f6:	6a78      	ldr	r0, [r7, #36]	; 0x24
 80039f8:	4798      	blx	r3
 80039fa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80039fc:	69db      	ldr	r3, [r3, #28]
 80039fe:	2b01      	cmp	r3, #1
 8003a00:	d119      	bne.n	8003a36 <prvProcessReceivedCommands+0xc2>
 8003a02:	68fa      	ldr	r2, [r7, #12]
 8003a04:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003a06:	699b      	ldr	r3, [r3, #24]
 8003a08:	4413      	add	r3, r2
 8003a0a:	2200      	movs	r2, #0
 8003a0c:	9200      	str	r2, [sp, #0]
 8003a0e:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8003a10:	2100      	movs	r1, #0
 8003a12:	461a      	mov	r2, r3
 8003a14:	2300      	movs	r3, #0
 8003a16:	f7ff fe35 	bl	8003684 <xTimerGenericCommand>
 8003a1a:	61f8      	str	r0, [r7, #28]
 8003a1c:	69fb      	ldr	r3, [r7, #28]
 8003a1e:	2b00      	cmp	r3, #0
 8003a20:	d109      	bne.n	8003a36 <prvProcessReceivedCommands+0xc2>
 8003a22:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003a26:	f383 8811 	msr	BASEPRI, r3
 8003a2a:	f3bf 8f6f 	isb	sy
 8003a2e:	f3bf 8f4f 	dsb	sy
 8003a32:	61bb      	str	r3, [r7, #24]
 8003a34:	e7fe      	b.n	8003a34 <prvProcessReceivedCommands+0xc0>
 8003a36:	e020      	b.n	8003a7a <prvProcessReceivedCommands+0x106>
 8003a38:	68fa      	ldr	r2, [r7, #12]
 8003a3a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003a3c:	619a      	str	r2, [r3, #24]
 8003a3e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003a40:	699b      	ldr	r3, [r3, #24]
 8003a42:	2b00      	cmp	r3, #0
 8003a44:	d109      	bne.n	8003a5a <prvProcessReceivedCommands+0xe6>
 8003a46:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003a4a:	f383 8811 	msr	BASEPRI, r3
 8003a4e:	f3bf 8f6f 	isb	sy
 8003a52:	f3bf 8f4f 	dsb	sy
 8003a56:	617b      	str	r3, [r7, #20]
 8003a58:	e7fe      	b.n	8003a58 <prvProcessReceivedCommands+0xe4>
 8003a5a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003a5c:	699a      	ldr	r2, [r3, #24]
 8003a5e:	6a3b      	ldr	r3, [r7, #32]
 8003a60:	4413      	add	r3, r2
 8003a62:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8003a64:	4619      	mov	r1, r3
 8003a66:	6a3a      	ldr	r2, [r7, #32]
 8003a68:	6a3b      	ldr	r3, [r7, #32]
 8003a6a:	f7ff ff41 	bl	80038f0 <prvInsertTimerInActiveList>
 8003a6e:	e004      	b.n	8003a7a <prvProcessReceivedCommands+0x106>
 8003a70:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8003a72:	f000 fb4f 	bl	8004114 <vPortFree>
 8003a76:	e000      	b.n	8003a7a <prvProcessReceivedCommands+0x106>
 8003a78:	bf00      	nop
 8003a7a:	4b08      	ldr	r3, [pc, #32]	; (8003a9c <prvProcessReceivedCommands+0x128>)
 8003a7c:	681a      	ldr	r2, [r3, #0]
 8003a7e:	f107 0308 	add.w	r3, r7, #8
 8003a82:	4610      	mov	r0, r2
 8003a84:	4619      	mov	r1, r3
 8003a86:	2200      	movs	r2, #0
 8003a88:	2300      	movs	r3, #0
 8003a8a:	f000 ff5b 	bl	8004944 <xQueueGenericReceive>
 8003a8e:	4603      	mov	r3, r0
 8003a90:	2b00      	cmp	r3, #0
 8003a92:	f47f af73 	bne.w	800397c <prvProcessReceivedCommands+0x8>
 8003a96:	3728      	adds	r7, #40	; 0x28
 8003a98:	46bd      	mov	sp, r7
 8003a9a:	bd80      	pop	{r7, pc}
 8003a9c:	20001118 	.word	0x20001118

08003aa0 <prvSwitchTimerLists>:
 8003aa0:	b580      	push	{r7, lr}
 8003aa2:	b088      	sub	sp, #32
 8003aa4:	af02      	add	r7, sp, #8
 8003aa6:	e044      	b.n	8003b32 <prvSwitchTimerLists+0x92>
 8003aa8:	4b2b      	ldr	r3, [pc, #172]	; (8003b58 <prvSwitchTimerLists+0xb8>)
 8003aaa:	681b      	ldr	r3, [r3, #0]
 8003aac:	68db      	ldr	r3, [r3, #12]
 8003aae:	681b      	ldr	r3, [r3, #0]
 8003ab0:	617b      	str	r3, [r7, #20]
 8003ab2:	4b29      	ldr	r3, [pc, #164]	; (8003b58 <prvSwitchTimerLists+0xb8>)
 8003ab4:	681b      	ldr	r3, [r3, #0]
 8003ab6:	68db      	ldr	r3, [r3, #12]
 8003ab8:	68db      	ldr	r3, [r3, #12]
 8003aba:	613b      	str	r3, [r7, #16]
 8003abc:	693b      	ldr	r3, [r7, #16]
 8003abe:	3304      	adds	r3, #4
 8003ac0:	4618      	mov	r0, r3
 8003ac2:	f000 fcc1 	bl	8004448 <uxListRemove>
 8003ac6:	693b      	ldr	r3, [r7, #16]
 8003ac8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003aca:	6938      	ldr	r0, [r7, #16]
 8003acc:	4798      	blx	r3
 8003ace:	693b      	ldr	r3, [r7, #16]
 8003ad0:	69db      	ldr	r3, [r3, #28]
 8003ad2:	2b01      	cmp	r3, #1
 8003ad4:	d12d      	bne.n	8003b32 <prvSwitchTimerLists+0x92>
 8003ad6:	693b      	ldr	r3, [r7, #16]
 8003ad8:	699a      	ldr	r2, [r3, #24]
 8003ada:	697b      	ldr	r3, [r7, #20]
 8003adc:	4413      	add	r3, r2
 8003ade:	60fb      	str	r3, [r7, #12]
 8003ae0:	68fa      	ldr	r2, [r7, #12]
 8003ae2:	697b      	ldr	r3, [r7, #20]
 8003ae4:	429a      	cmp	r2, r3
 8003ae6:	d90e      	bls.n	8003b06 <prvSwitchTimerLists+0x66>
 8003ae8:	693b      	ldr	r3, [r7, #16]
 8003aea:	68fa      	ldr	r2, [r7, #12]
 8003aec:	605a      	str	r2, [r3, #4]
 8003aee:	693b      	ldr	r3, [r7, #16]
 8003af0:	693a      	ldr	r2, [r7, #16]
 8003af2:	611a      	str	r2, [r3, #16]
 8003af4:	4b18      	ldr	r3, [pc, #96]	; (8003b58 <prvSwitchTimerLists+0xb8>)
 8003af6:	681a      	ldr	r2, [r3, #0]
 8003af8:	693b      	ldr	r3, [r7, #16]
 8003afa:	3304      	adds	r3, #4
 8003afc:	4610      	mov	r0, r2
 8003afe:	4619      	mov	r1, r3
 8003b00:	f000 fc6a 	bl	80043d8 <vListInsert>
 8003b04:	e015      	b.n	8003b32 <prvSwitchTimerLists+0x92>
 8003b06:	2300      	movs	r3, #0
 8003b08:	9300      	str	r3, [sp, #0]
 8003b0a:	6938      	ldr	r0, [r7, #16]
 8003b0c:	2100      	movs	r1, #0
 8003b0e:	697a      	ldr	r2, [r7, #20]
 8003b10:	2300      	movs	r3, #0
 8003b12:	f7ff fdb7 	bl	8003684 <xTimerGenericCommand>
 8003b16:	60b8      	str	r0, [r7, #8]
 8003b18:	68bb      	ldr	r3, [r7, #8]
 8003b1a:	2b00      	cmp	r3, #0
 8003b1c:	d109      	bne.n	8003b32 <prvSwitchTimerLists+0x92>
 8003b1e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003b22:	f383 8811 	msr	BASEPRI, r3
 8003b26:	f3bf 8f6f 	isb	sy
 8003b2a:	f3bf 8f4f 	dsb	sy
 8003b2e:	603b      	str	r3, [r7, #0]
 8003b30:	e7fe      	b.n	8003b30 <prvSwitchTimerLists+0x90>
 8003b32:	4b09      	ldr	r3, [pc, #36]	; (8003b58 <prvSwitchTimerLists+0xb8>)
 8003b34:	681b      	ldr	r3, [r3, #0]
 8003b36:	681b      	ldr	r3, [r3, #0]
 8003b38:	2b00      	cmp	r3, #0
 8003b3a:	d1b5      	bne.n	8003aa8 <prvSwitchTimerLists+0x8>
 8003b3c:	4b06      	ldr	r3, [pc, #24]	; (8003b58 <prvSwitchTimerLists+0xb8>)
 8003b3e:	681b      	ldr	r3, [r3, #0]
 8003b40:	607b      	str	r3, [r7, #4]
 8003b42:	4b06      	ldr	r3, [pc, #24]	; (8003b5c <prvSwitchTimerLists+0xbc>)
 8003b44:	681a      	ldr	r2, [r3, #0]
 8003b46:	4b04      	ldr	r3, [pc, #16]	; (8003b58 <prvSwitchTimerLists+0xb8>)
 8003b48:	601a      	str	r2, [r3, #0]
 8003b4a:	4b04      	ldr	r3, [pc, #16]	; (8003b5c <prvSwitchTimerLists+0xbc>)
 8003b4c:	687a      	ldr	r2, [r7, #4]
 8003b4e:	601a      	str	r2, [r3, #0]
 8003b50:	3718      	adds	r7, #24
 8003b52:	46bd      	mov	sp, r7
 8003b54:	bd80      	pop	{r7, pc}
 8003b56:	bf00      	nop
 8003b58:	20001110 	.word	0x20001110
 8003b5c:	20001114 	.word	0x20001114

08003b60 <prvCheckForValidListAndQueue>:
 8003b60:	b580      	push	{r7, lr}
 8003b62:	af00      	add	r7, sp, #0
 8003b64:	f000 f90a 	bl	8003d7c <vPortEnterCritical>
 8003b68:	4b12      	ldr	r3, [pc, #72]	; (8003bb4 <prvCheckForValidListAndQueue+0x54>)
 8003b6a:	681b      	ldr	r3, [r3, #0]
 8003b6c:	2b00      	cmp	r3, #0
 8003b6e:	d11d      	bne.n	8003bac <prvCheckForValidListAndQueue+0x4c>
 8003b70:	4811      	ldr	r0, [pc, #68]	; (8003bb8 <prvCheckForValidListAndQueue+0x58>)
 8003b72:	f000 fbe1 	bl	8004338 <vListInitialise>
 8003b76:	4811      	ldr	r0, [pc, #68]	; (8003bbc <prvCheckForValidListAndQueue+0x5c>)
 8003b78:	f000 fbde 	bl	8004338 <vListInitialise>
 8003b7c:	4b10      	ldr	r3, [pc, #64]	; (8003bc0 <prvCheckForValidListAndQueue+0x60>)
 8003b7e:	4a0e      	ldr	r2, [pc, #56]	; (8003bb8 <prvCheckForValidListAndQueue+0x58>)
 8003b80:	601a      	str	r2, [r3, #0]
 8003b82:	4b10      	ldr	r3, [pc, #64]	; (8003bc4 <prvCheckForValidListAndQueue+0x64>)
 8003b84:	4a0d      	ldr	r2, [pc, #52]	; (8003bbc <prvCheckForValidListAndQueue+0x5c>)
 8003b86:	601a      	str	r2, [r3, #0]
 8003b88:	200a      	movs	r0, #10
 8003b8a:	210c      	movs	r1, #12
 8003b8c:	2200      	movs	r2, #0
 8003b8e:	f000 fced 	bl	800456c <xQueueGenericCreate>
 8003b92:	4602      	mov	r2, r0
 8003b94:	4b07      	ldr	r3, [pc, #28]	; (8003bb4 <prvCheckForValidListAndQueue+0x54>)
 8003b96:	601a      	str	r2, [r3, #0]
 8003b98:	4b06      	ldr	r3, [pc, #24]	; (8003bb4 <prvCheckForValidListAndQueue+0x54>)
 8003b9a:	681b      	ldr	r3, [r3, #0]
 8003b9c:	2b00      	cmp	r3, #0
 8003b9e:	d005      	beq.n	8003bac <prvCheckForValidListAndQueue+0x4c>
 8003ba0:	4b04      	ldr	r3, [pc, #16]	; (8003bb4 <prvCheckForValidListAndQueue+0x54>)
 8003ba2:	681b      	ldr	r3, [r3, #0]
 8003ba4:	4618      	mov	r0, r3
 8003ba6:	4908      	ldr	r1, [pc, #32]	; (8003bc8 <prvCheckForValidListAndQueue+0x68>)
 8003ba8:	f001 f8f2 	bl	8004d90 <vQueueAddToRegistry>
 8003bac:	f000 f914 	bl	8003dd8 <vPortExitCritical>
 8003bb0:	bd80      	pop	{r7, pc}
 8003bb2:	bf00      	nop
 8003bb4:	20001118 	.word	0x20001118
 8003bb8:	200010e8 	.word	0x200010e8
 8003bbc:	200010fc 	.word	0x200010fc
 8003bc0:	20001110 	.word	0x20001110
 8003bc4:	20001114 	.word	0x20001114
 8003bc8:	080050b0 	.word	0x080050b0

08003bcc <pxPortInitialiseStack>:
 8003bcc:	b480      	push	{r7}
 8003bce:	b085      	sub	sp, #20
 8003bd0:	af00      	add	r7, sp, #0
 8003bd2:	60f8      	str	r0, [r7, #12]
 8003bd4:	60b9      	str	r1, [r7, #8]
 8003bd6:	607a      	str	r2, [r7, #4]
 8003bd8:	68fb      	ldr	r3, [r7, #12]
 8003bda:	3b04      	subs	r3, #4
 8003bdc:	60fb      	str	r3, [r7, #12]
 8003bde:	68fb      	ldr	r3, [r7, #12]
 8003be0:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8003be4:	601a      	str	r2, [r3, #0]
 8003be6:	68fb      	ldr	r3, [r7, #12]
 8003be8:	3b04      	subs	r3, #4
 8003bea:	60fb      	str	r3, [r7, #12]
 8003bec:	68ba      	ldr	r2, [r7, #8]
 8003bee:	68fb      	ldr	r3, [r7, #12]
 8003bf0:	601a      	str	r2, [r3, #0]
 8003bf2:	68fb      	ldr	r3, [r7, #12]
 8003bf4:	3b04      	subs	r3, #4
 8003bf6:	60fb      	str	r3, [r7, #12]
 8003bf8:	4a0c      	ldr	r2, [pc, #48]	; (8003c2c <pxPortInitialiseStack+0x60>)
 8003bfa:	68fb      	ldr	r3, [r7, #12]
 8003bfc:	601a      	str	r2, [r3, #0]
 8003bfe:	68fb      	ldr	r3, [r7, #12]
 8003c00:	3b14      	subs	r3, #20
 8003c02:	60fb      	str	r3, [r7, #12]
 8003c04:	687a      	ldr	r2, [r7, #4]
 8003c06:	68fb      	ldr	r3, [r7, #12]
 8003c08:	601a      	str	r2, [r3, #0]
 8003c0a:	68fb      	ldr	r3, [r7, #12]
 8003c0c:	3b04      	subs	r3, #4
 8003c0e:	60fb      	str	r3, [r7, #12]
 8003c10:	68fb      	ldr	r3, [r7, #12]
 8003c12:	f06f 0202 	mvn.w	r2, #2
 8003c16:	601a      	str	r2, [r3, #0]
 8003c18:	68fb      	ldr	r3, [r7, #12]
 8003c1a:	3b20      	subs	r3, #32
 8003c1c:	60fb      	str	r3, [r7, #12]
 8003c1e:	68fb      	ldr	r3, [r7, #12]
 8003c20:	4618      	mov	r0, r3
 8003c22:	3714      	adds	r7, #20
 8003c24:	46bd      	mov	sp, r7
 8003c26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c2a:	4770      	bx	lr
 8003c2c:	08003c31 	.word	0x08003c31

08003c30 <prvTaskExitError>:
 8003c30:	b480      	push	{r7}
 8003c32:	b083      	sub	sp, #12
 8003c34:	af00      	add	r7, sp, #0
 8003c36:	4b0c      	ldr	r3, [pc, #48]	; (8003c68 <prvTaskExitError+0x38>)
 8003c38:	681b      	ldr	r3, [r3, #0]
 8003c3a:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003c3e:	d009      	beq.n	8003c54 <prvTaskExitError+0x24>
 8003c40:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003c44:	f383 8811 	msr	BASEPRI, r3
 8003c48:	f3bf 8f6f 	isb	sy
 8003c4c:	f3bf 8f4f 	dsb	sy
 8003c50:	607b      	str	r3, [r7, #4]
 8003c52:	e7fe      	b.n	8003c52 <prvTaskExitError+0x22>
 8003c54:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003c58:	f383 8811 	msr	BASEPRI, r3
 8003c5c:	f3bf 8f6f 	isb	sy
 8003c60:	f3bf 8f4f 	dsb	sy
 8003c64:	603b      	str	r3, [r7, #0]
 8003c66:	e7fe      	b.n	8003c66 <prvTaskExitError+0x36>
 8003c68:	20000f94 	.word	0x20000f94

08003c6c <SVC_Handler>:
 8003c6c:	4b06      	ldr	r3, [pc, #24]	; (8003c88 <pxCurrentTCBConst2>)
 8003c6e:	6819      	ldr	r1, [r3, #0]
 8003c70:	6808      	ldr	r0, [r1, #0]
 8003c72:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003c76:	f380 8809 	msr	PSP, r0
 8003c7a:	f3bf 8f6f 	isb	sy
 8003c7e:	f04f 0000 	mov.w	r0, #0
 8003c82:	f380 8811 	msr	BASEPRI, r0
 8003c86:	4770      	bx	lr

08003c88 <pxCurrentTCBConst2>:
 8003c88:	20000fe4 	.word	0x20000fe4

08003c8c <prvPortStartFirstTask>:
 8003c8c:	4806      	ldr	r0, [pc, #24]	; (8003ca8 <prvPortStartFirstTask+0x1c>)
 8003c8e:	6800      	ldr	r0, [r0, #0]
 8003c90:	6800      	ldr	r0, [r0, #0]
 8003c92:	f380 8808 	msr	MSP, r0
 8003c96:	b662      	cpsie	i
 8003c98:	b661      	cpsie	f
 8003c9a:	f3bf 8f4f 	dsb	sy
 8003c9e:	f3bf 8f6f 	isb	sy
 8003ca2:	df00      	svc	0
 8003ca4:	bf00      	nop
 8003ca6:	0000      	movs	r0, r0
 8003ca8:	e000ed08 	.word	0xe000ed08

08003cac <xPortStartScheduler>:
 8003cac:	b580      	push	{r7, lr}
 8003cae:	b084      	sub	sp, #16
 8003cb0:	af00      	add	r7, sp, #0
 8003cb2:	4b2c      	ldr	r3, [pc, #176]	; (8003d64 <xPortStartScheduler+0xb8>)
 8003cb4:	60fb      	str	r3, [r7, #12]
 8003cb6:	68fb      	ldr	r3, [r7, #12]
 8003cb8:	781b      	ldrb	r3, [r3, #0]
 8003cba:	b2db      	uxtb	r3, r3
 8003cbc:	60bb      	str	r3, [r7, #8]
 8003cbe:	68fb      	ldr	r3, [r7, #12]
 8003cc0:	22ff      	movs	r2, #255	; 0xff
 8003cc2:	701a      	strb	r2, [r3, #0]
 8003cc4:	68fb      	ldr	r3, [r7, #12]
 8003cc6:	781b      	ldrb	r3, [r3, #0]
 8003cc8:	b2db      	uxtb	r3, r3
 8003cca:	71fb      	strb	r3, [r7, #7]
 8003ccc:	79fb      	ldrb	r3, [r7, #7]
 8003cce:	b2db      	uxtb	r3, r3
 8003cd0:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8003cd4:	b2da      	uxtb	r2, r3
 8003cd6:	4b24      	ldr	r3, [pc, #144]	; (8003d68 <xPortStartScheduler+0xbc>)
 8003cd8:	701a      	strb	r2, [r3, #0]
 8003cda:	4b24      	ldr	r3, [pc, #144]	; (8003d6c <xPortStartScheduler+0xc0>)
 8003cdc:	2207      	movs	r2, #7
 8003cde:	601a      	str	r2, [r3, #0]
 8003ce0:	e009      	b.n	8003cf6 <xPortStartScheduler+0x4a>
 8003ce2:	4b22      	ldr	r3, [pc, #136]	; (8003d6c <xPortStartScheduler+0xc0>)
 8003ce4:	681b      	ldr	r3, [r3, #0]
 8003ce6:	1e5a      	subs	r2, r3, #1
 8003ce8:	4b20      	ldr	r3, [pc, #128]	; (8003d6c <xPortStartScheduler+0xc0>)
 8003cea:	601a      	str	r2, [r3, #0]
 8003cec:	79fb      	ldrb	r3, [r7, #7]
 8003cee:	b2db      	uxtb	r3, r3
 8003cf0:	005b      	lsls	r3, r3, #1
 8003cf2:	b2db      	uxtb	r3, r3
 8003cf4:	71fb      	strb	r3, [r7, #7]
 8003cf6:	79fb      	ldrb	r3, [r7, #7]
 8003cf8:	b2db      	uxtb	r3, r3
 8003cfa:	b2db      	uxtb	r3, r3
 8003cfc:	b25b      	sxtb	r3, r3
 8003cfe:	2b00      	cmp	r3, #0
 8003d00:	dbef      	blt.n	8003ce2 <xPortStartScheduler+0x36>
 8003d02:	4b1a      	ldr	r3, [pc, #104]	; (8003d6c <xPortStartScheduler+0xc0>)
 8003d04:	681b      	ldr	r3, [r3, #0]
 8003d06:	021a      	lsls	r2, r3, #8
 8003d08:	4b18      	ldr	r3, [pc, #96]	; (8003d6c <xPortStartScheduler+0xc0>)
 8003d0a:	601a      	str	r2, [r3, #0]
 8003d0c:	4b17      	ldr	r3, [pc, #92]	; (8003d6c <xPortStartScheduler+0xc0>)
 8003d0e:	681b      	ldr	r3, [r3, #0]
 8003d10:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 8003d14:	4b15      	ldr	r3, [pc, #84]	; (8003d6c <xPortStartScheduler+0xc0>)
 8003d16:	601a      	str	r2, [r3, #0]
 8003d18:	68bb      	ldr	r3, [r7, #8]
 8003d1a:	b2da      	uxtb	r2, r3
 8003d1c:	68fb      	ldr	r3, [r7, #12]
 8003d1e:	701a      	strb	r2, [r3, #0]
 8003d20:	4b13      	ldr	r3, [pc, #76]	; (8003d70 <xPortStartScheduler+0xc4>)
 8003d22:	4a13      	ldr	r2, [pc, #76]	; (8003d70 <xPortStartScheduler+0xc4>)
 8003d24:	6812      	ldr	r2, [r2, #0]
 8003d26:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8003d2a:	601a      	str	r2, [r3, #0]
 8003d2c:	4b10      	ldr	r3, [pc, #64]	; (8003d70 <xPortStartScheduler+0xc4>)
 8003d2e:	4a10      	ldr	r2, [pc, #64]	; (8003d70 <xPortStartScheduler+0xc4>)
 8003d30:	6812      	ldr	r2, [r2, #0]
 8003d32:	f042 4270 	orr.w	r2, r2, #4026531840	; 0xf0000000
 8003d36:	601a      	str	r2, [r3, #0]
 8003d38:	f000 f8c6 	bl	8003ec8 <vPortSetupTimerInterrupt>
 8003d3c:	4b0d      	ldr	r3, [pc, #52]	; (8003d74 <xPortStartScheduler+0xc8>)
 8003d3e:	2200      	movs	r2, #0
 8003d40:	601a      	str	r2, [r3, #0]
 8003d42:	f000 f8db 	bl	8003efc <vPortEnableVFP>
 8003d46:	4b0c      	ldr	r3, [pc, #48]	; (8003d78 <xPortStartScheduler+0xcc>)
 8003d48:	4a0b      	ldr	r2, [pc, #44]	; (8003d78 <xPortStartScheduler+0xcc>)
 8003d4a:	6812      	ldr	r2, [r2, #0]
 8003d4c:	f042 4240 	orr.w	r2, r2, #3221225472	; 0xc0000000
 8003d50:	601a      	str	r2, [r3, #0]
 8003d52:	f7ff ff9b 	bl	8003c8c <prvPortStartFirstTask>
 8003d56:	f7ff ff6b 	bl	8003c30 <prvTaskExitError>
 8003d5a:	2300      	movs	r3, #0
 8003d5c:	4618      	mov	r0, r3
 8003d5e:	3710      	adds	r7, #16
 8003d60:	46bd      	mov	sp, r7
 8003d62:	bd80      	pop	{r7, pc}
 8003d64:	e000e400 	.word	0xe000e400
 8003d68:	20001124 	.word	0x20001124
 8003d6c:	20001128 	.word	0x20001128
 8003d70:	e000ed20 	.word	0xe000ed20
 8003d74:	20000f94 	.word	0x20000f94
 8003d78:	e000ef34 	.word	0xe000ef34

08003d7c <vPortEnterCritical>:
 8003d7c:	b480      	push	{r7}
 8003d7e:	b083      	sub	sp, #12
 8003d80:	af00      	add	r7, sp, #0
 8003d82:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003d86:	f383 8811 	msr	BASEPRI, r3
 8003d8a:	f3bf 8f6f 	isb	sy
 8003d8e:	f3bf 8f4f 	dsb	sy
 8003d92:	607b      	str	r3, [r7, #4]
 8003d94:	4b0e      	ldr	r3, [pc, #56]	; (8003dd0 <vPortEnterCritical+0x54>)
 8003d96:	681b      	ldr	r3, [r3, #0]
 8003d98:	1c5a      	adds	r2, r3, #1
 8003d9a:	4b0d      	ldr	r3, [pc, #52]	; (8003dd0 <vPortEnterCritical+0x54>)
 8003d9c:	601a      	str	r2, [r3, #0]
 8003d9e:	4b0c      	ldr	r3, [pc, #48]	; (8003dd0 <vPortEnterCritical+0x54>)
 8003da0:	681b      	ldr	r3, [r3, #0]
 8003da2:	2b01      	cmp	r3, #1
 8003da4:	d10e      	bne.n	8003dc4 <vPortEnterCritical+0x48>
 8003da6:	4b0b      	ldr	r3, [pc, #44]	; (8003dd4 <vPortEnterCritical+0x58>)
 8003da8:	681b      	ldr	r3, [r3, #0]
 8003daa:	b2db      	uxtb	r3, r3
 8003dac:	2b00      	cmp	r3, #0
 8003dae:	d009      	beq.n	8003dc4 <vPortEnterCritical+0x48>
 8003db0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003db4:	f383 8811 	msr	BASEPRI, r3
 8003db8:	f3bf 8f6f 	isb	sy
 8003dbc:	f3bf 8f4f 	dsb	sy
 8003dc0:	603b      	str	r3, [r7, #0]
 8003dc2:	e7fe      	b.n	8003dc2 <vPortEnterCritical+0x46>
 8003dc4:	370c      	adds	r7, #12
 8003dc6:	46bd      	mov	sp, r7
 8003dc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003dcc:	4770      	bx	lr
 8003dce:	bf00      	nop
 8003dd0:	20000f94 	.word	0x20000f94
 8003dd4:	e000ed04 	.word	0xe000ed04

08003dd8 <vPortExitCritical>:
 8003dd8:	b480      	push	{r7}
 8003dda:	b083      	sub	sp, #12
 8003ddc:	af00      	add	r7, sp, #0
 8003dde:	4b10      	ldr	r3, [pc, #64]	; (8003e20 <vPortExitCritical+0x48>)
 8003de0:	681b      	ldr	r3, [r3, #0]
 8003de2:	2b00      	cmp	r3, #0
 8003de4:	d109      	bne.n	8003dfa <vPortExitCritical+0x22>
 8003de6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003dea:	f383 8811 	msr	BASEPRI, r3
 8003dee:	f3bf 8f6f 	isb	sy
 8003df2:	f3bf 8f4f 	dsb	sy
 8003df6:	607b      	str	r3, [r7, #4]
 8003df8:	e7fe      	b.n	8003df8 <vPortExitCritical+0x20>
 8003dfa:	4b09      	ldr	r3, [pc, #36]	; (8003e20 <vPortExitCritical+0x48>)
 8003dfc:	681b      	ldr	r3, [r3, #0]
 8003dfe:	1e5a      	subs	r2, r3, #1
 8003e00:	4b07      	ldr	r3, [pc, #28]	; (8003e20 <vPortExitCritical+0x48>)
 8003e02:	601a      	str	r2, [r3, #0]
 8003e04:	4b06      	ldr	r3, [pc, #24]	; (8003e20 <vPortExitCritical+0x48>)
 8003e06:	681b      	ldr	r3, [r3, #0]
 8003e08:	2b00      	cmp	r3, #0
 8003e0a:	d104      	bne.n	8003e16 <vPortExitCritical+0x3e>
 8003e0c:	2300      	movs	r3, #0
 8003e0e:	603b      	str	r3, [r7, #0]
 8003e10:	683b      	ldr	r3, [r7, #0]
 8003e12:	f383 8811 	msr	BASEPRI, r3
 8003e16:	370c      	adds	r7, #12
 8003e18:	46bd      	mov	sp, r7
 8003e1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e1e:	4770      	bx	lr
 8003e20:	20000f94 	.word	0x20000f94

08003e24 <PendSV_Handler>:
 8003e24:	f3ef 8009 	mrs	r0, PSP
 8003e28:	f3bf 8f6f 	isb	sy
 8003e2c:	4b14      	ldr	r3, [pc, #80]	; (8003e80 <pxCurrentTCBConst>)
 8003e2e:	681a      	ldr	r2, [r3, #0]
 8003e30:	f01e 0f10 	tst.w	lr, #16
 8003e34:	bf08      	it	eq
 8003e36:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8003e3a:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003e3e:	6010      	str	r0, [r2, #0]
 8003e40:	f84d 3d04 	str.w	r3, [sp, #-4]!
 8003e44:	f04f 0050 	mov.w	r0, #80	; 0x50
 8003e48:	f380 8811 	msr	BASEPRI, r0
 8003e4c:	f3bf 8f4f 	dsb	sy
 8003e50:	f3bf 8f6f 	isb	sy
 8003e54:	f7fe ffd8 	bl	8002e08 <vTaskSwitchContext>
 8003e58:	f04f 0000 	mov.w	r0, #0
 8003e5c:	f380 8811 	msr	BASEPRI, r0
 8003e60:	bc08      	pop	{r3}
 8003e62:	6819      	ldr	r1, [r3, #0]
 8003e64:	6808      	ldr	r0, [r1, #0]
 8003e66:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003e6a:	f01e 0f10 	tst.w	lr, #16
 8003e6e:	bf08      	it	eq
 8003e70:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8003e74:	f380 8809 	msr	PSP, r0
 8003e78:	f3bf 8f6f 	isb	sy
 8003e7c:	4770      	bx	lr
 8003e7e:	bf00      	nop

08003e80 <pxCurrentTCBConst>:
 8003e80:	20000fe4 	.word	0x20000fe4

08003e84 <SysTick_Handler>:
 8003e84:	b580      	push	{r7, lr}
 8003e86:	b084      	sub	sp, #16
 8003e88:	af00      	add	r7, sp, #0
 8003e8a:	f3ef 8211 	mrs	r2, BASEPRI
 8003e8e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003e92:	f383 8811 	msr	BASEPRI, r3
 8003e96:	f3bf 8f6f 	isb	sy
 8003e9a:	f3bf 8f4f 	dsb	sy
 8003e9e:	60fa      	str	r2, [r7, #12]
 8003ea0:	60bb      	str	r3, [r7, #8]
 8003ea2:	f7fe fef5 	bl	8002c90 <xTaskIncrementTick>
 8003ea6:	4603      	mov	r3, r0
 8003ea8:	2b00      	cmp	r3, #0
 8003eaa:	d003      	beq.n	8003eb4 <SysTick_Handler+0x30>
 8003eac:	4b05      	ldr	r3, [pc, #20]	; (8003ec4 <SysTick_Handler+0x40>)
 8003eae:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8003eb2:	601a      	str	r2, [r3, #0]
 8003eb4:	2300      	movs	r3, #0
 8003eb6:	607b      	str	r3, [r7, #4]
 8003eb8:	687b      	ldr	r3, [r7, #4]
 8003eba:	f383 8811 	msr	BASEPRI, r3
 8003ebe:	3710      	adds	r7, #16
 8003ec0:	46bd      	mov	sp, r7
 8003ec2:	bd80      	pop	{r7, pc}
 8003ec4:	e000ed04 	.word	0xe000ed04

08003ec8 <vPortSetupTimerInterrupt>:
 8003ec8:	b480      	push	{r7}
 8003eca:	af00      	add	r7, sp, #0
 8003ecc:	4b07      	ldr	r3, [pc, #28]	; (8003eec <vPortSetupTimerInterrupt+0x24>)
 8003ece:	4a08      	ldr	r2, [pc, #32]	; (8003ef0 <vPortSetupTimerInterrupt+0x28>)
 8003ed0:	6811      	ldr	r1, [r2, #0]
 8003ed2:	4a08      	ldr	r2, [pc, #32]	; (8003ef4 <vPortSetupTimerInterrupt+0x2c>)
 8003ed4:	fba2 0201 	umull	r0, r2, r2, r1
 8003ed8:	0992      	lsrs	r2, r2, #6
 8003eda:	3a01      	subs	r2, #1
 8003edc:	601a      	str	r2, [r3, #0]
 8003ede:	4b06      	ldr	r3, [pc, #24]	; (8003ef8 <vPortSetupTimerInterrupt+0x30>)
 8003ee0:	2207      	movs	r2, #7
 8003ee2:	601a      	str	r2, [r3, #0]
 8003ee4:	46bd      	mov	sp, r7
 8003ee6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003eea:	4770      	bx	lr
 8003eec:	e000e014 	.word	0xe000e014
 8003ef0:	200001b4 	.word	0x200001b4
 8003ef4:	10624dd3 	.word	0x10624dd3
 8003ef8:	e000e010 	.word	0xe000e010

08003efc <vPortEnableVFP>:
 8003efc:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8003f0c <vPortEnableVFP+0x10>
 8003f00:	6801      	ldr	r1, [r0, #0]
 8003f02:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8003f06:	6001      	str	r1, [r0, #0]
 8003f08:	4770      	bx	lr
 8003f0a:	0000      	movs	r0, r0
 8003f0c:	e000ed88 	.word	0xe000ed88

08003f10 <vPortValidateInterruptPriority>:
 8003f10:	b480      	push	{r7}
 8003f12:	b085      	sub	sp, #20
 8003f14:	af00      	add	r7, sp, #0
 8003f16:	f3ef 8305 	mrs	r3, IPSR
 8003f1a:	60fb      	str	r3, [r7, #12]
 8003f1c:	68fb      	ldr	r3, [r7, #12]
 8003f1e:	2b0f      	cmp	r3, #15
 8003f20:	d913      	bls.n	8003f4a <vPortValidateInterruptPriority+0x3a>
 8003f22:	4a15      	ldr	r2, [pc, #84]	; (8003f78 <vPortValidateInterruptPriority+0x68>)
 8003f24:	68fb      	ldr	r3, [r7, #12]
 8003f26:	4413      	add	r3, r2
 8003f28:	781b      	ldrb	r3, [r3, #0]
 8003f2a:	72fb      	strb	r3, [r7, #11]
 8003f2c:	4b13      	ldr	r3, [pc, #76]	; (8003f7c <vPortValidateInterruptPriority+0x6c>)
 8003f2e:	781b      	ldrb	r3, [r3, #0]
 8003f30:	7afa      	ldrb	r2, [r7, #11]
 8003f32:	429a      	cmp	r2, r3
 8003f34:	d209      	bcs.n	8003f4a <vPortValidateInterruptPriority+0x3a>
 8003f36:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003f3a:	f383 8811 	msr	BASEPRI, r3
 8003f3e:	f3bf 8f6f 	isb	sy
 8003f42:	f3bf 8f4f 	dsb	sy
 8003f46:	607b      	str	r3, [r7, #4]
 8003f48:	e7fe      	b.n	8003f48 <vPortValidateInterruptPriority+0x38>
 8003f4a:	4b0d      	ldr	r3, [pc, #52]	; (8003f80 <vPortValidateInterruptPriority+0x70>)
 8003f4c:	681b      	ldr	r3, [r3, #0]
 8003f4e:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 8003f52:	4b0c      	ldr	r3, [pc, #48]	; (8003f84 <vPortValidateInterruptPriority+0x74>)
 8003f54:	681b      	ldr	r3, [r3, #0]
 8003f56:	429a      	cmp	r2, r3
 8003f58:	d909      	bls.n	8003f6e <vPortValidateInterruptPriority+0x5e>
 8003f5a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003f5e:	f383 8811 	msr	BASEPRI, r3
 8003f62:	f3bf 8f6f 	isb	sy
 8003f66:	f3bf 8f4f 	dsb	sy
 8003f6a:	603b      	str	r3, [r7, #0]
 8003f6c:	e7fe      	b.n	8003f6c <vPortValidateInterruptPriority+0x5c>
 8003f6e:	3714      	adds	r7, #20
 8003f70:	46bd      	mov	sp, r7
 8003f72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f76:	4770      	bx	lr
 8003f78:	e000e3f0 	.word	0xe000e3f0
 8003f7c:	20001124 	.word	0x20001124
 8003f80:	e000ed0c 	.word	0xe000ed0c
 8003f84:	20001128 	.word	0x20001128

08003f88 <pvPortMalloc>:
 8003f88:	b580      	push	{r7, lr}
 8003f8a:	b08a      	sub	sp, #40	; 0x28
 8003f8c:	af00      	add	r7, sp, #0
 8003f8e:	6078      	str	r0, [r7, #4]
 8003f90:	2300      	movs	r3, #0
 8003f92:	61fb      	str	r3, [r7, #28]
 8003f94:	f7fe fdc2 	bl	8002b1c <vTaskSuspendAll>
 8003f98:	4b59      	ldr	r3, [pc, #356]	; (8004100 <pvPortMalloc+0x178>)
 8003f9a:	681b      	ldr	r3, [r3, #0]
 8003f9c:	2b00      	cmp	r3, #0
 8003f9e:	d101      	bne.n	8003fa4 <pvPortMalloc+0x1c>
 8003fa0:	f000 f910 	bl	80041c4 <prvHeapInit>
 8003fa4:	4b57      	ldr	r3, [pc, #348]	; (8004104 <pvPortMalloc+0x17c>)
 8003fa6:	681a      	ldr	r2, [r3, #0]
 8003fa8:	687b      	ldr	r3, [r7, #4]
 8003faa:	4013      	ands	r3, r2
 8003fac:	2b00      	cmp	r3, #0
 8003fae:	f040 808c 	bne.w	80040ca <pvPortMalloc+0x142>
 8003fb2:	687b      	ldr	r3, [r7, #4]
 8003fb4:	2b00      	cmp	r3, #0
 8003fb6:	d01c      	beq.n	8003ff2 <pvPortMalloc+0x6a>
 8003fb8:	2308      	movs	r3, #8
 8003fba:	687a      	ldr	r2, [r7, #4]
 8003fbc:	4413      	add	r3, r2
 8003fbe:	607b      	str	r3, [r7, #4]
 8003fc0:	687b      	ldr	r3, [r7, #4]
 8003fc2:	f003 0307 	and.w	r3, r3, #7
 8003fc6:	2b00      	cmp	r3, #0
 8003fc8:	d013      	beq.n	8003ff2 <pvPortMalloc+0x6a>
 8003fca:	687b      	ldr	r3, [r7, #4]
 8003fcc:	f023 0307 	bic.w	r3, r3, #7
 8003fd0:	3308      	adds	r3, #8
 8003fd2:	607b      	str	r3, [r7, #4]
 8003fd4:	687b      	ldr	r3, [r7, #4]
 8003fd6:	f003 0307 	and.w	r3, r3, #7
 8003fda:	2b00      	cmp	r3, #0
 8003fdc:	d009      	beq.n	8003ff2 <pvPortMalloc+0x6a>
 8003fde:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003fe2:	f383 8811 	msr	BASEPRI, r3
 8003fe6:	f3bf 8f6f 	isb	sy
 8003fea:	f3bf 8f4f 	dsb	sy
 8003fee:	617b      	str	r3, [r7, #20]
 8003ff0:	e7fe      	b.n	8003ff0 <pvPortMalloc+0x68>
 8003ff2:	687b      	ldr	r3, [r7, #4]
 8003ff4:	2b00      	cmp	r3, #0
 8003ff6:	d068      	beq.n	80040ca <pvPortMalloc+0x142>
 8003ff8:	4b43      	ldr	r3, [pc, #268]	; (8004108 <pvPortMalloc+0x180>)
 8003ffa:	681b      	ldr	r3, [r3, #0]
 8003ffc:	687a      	ldr	r2, [r7, #4]
 8003ffe:	429a      	cmp	r2, r3
 8004000:	d863      	bhi.n	80040ca <pvPortMalloc+0x142>
 8004002:	4b42      	ldr	r3, [pc, #264]	; (800410c <pvPortMalloc+0x184>)
 8004004:	623b      	str	r3, [r7, #32]
 8004006:	4b41      	ldr	r3, [pc, #260]	; (800410c <pvPortMalloc+0x184>)
 8004008:	681b      	ldr	r3, [r3, #0]
 800400a:	627b      	str	r3, [r7, #36]	; 0x24
 800400c:	e004      	b.n	8004018 <pvPortMalloc+0x90>
 800400e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004010:	623b      	str	r3, [r7, #32]
 8004012:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004014:	681b      	ldr	r3, [r3, #0]
 8004016:	627b      	str	r3, [r7, #36]	; 0x24
 8004018:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800401a:	685a      	ldr	r2, [r3, #4]
 800401c:	687b      	ldr	r3, [r7, #4]
 800401e:	429a      	cmp	r2, r3
 8004020:	d203      	bcs.n	800402a <pvPortMalloc+0xa2>
 8004022:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004024:	681b      	ldr	r3, [r3, #0]
 8004026:	2b00      	cmp	r3, #0
 8004028:	d1f1      	bne.n	800400e <pvPortMalloc+0x86>
 800402a:	4b35      	ldr	r3, [pc, #212]	; (8004100 <pvPortMalloc+0x178>)
 800402c:	681b      	ldr	r3, [r3, #0]
 800402e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8004030:	429a      	cmp	r2, r3
 8004032:	d04a      	beq.n	80040ca <pvPortMalloc+0x142>
 8004034:	6a3b      	ldr	r3, [r7, #32]
 8004036:	681a      	ldr	r2, [r3, #0]
 8004038:	2308      	movs	r3, #8
 800403a:	4413      	add	r3, r2
 800403c:	61fb      	str	r3, [r7, #28]
 800403e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004040:	681a      	ldr	r2, [r3, #0]
 8004042:	6a3b      	ldr	r3, [r7, #32]
 8004044:	601a      	str	r2, [r3, #0]
 8004046:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004048:	685a      	ldr	r2, [r3, #4]
 800404a:	687b      	ldr	r3, [r7, #4]
 800404c:	1ad2      	subs	r2, r2, r3
 800404e:	2308      	movs	r3, #8
 8004050:	005b      	lsls	r3, r3, #1
 8004052:	429a      	cmp	r2, r3
 8004054:	d91e      	bls.n	8004094 <pvPortMalloc+0x10c>
 8004056:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8004058:	687b      	ldr	r3, [r7, #4]
 800405a:	4413      	add	r3, r2
 800405c:	61bb      	str	r3, [r7, #24]
 800405e:	69bb      	ldr	r3, [r7, #24]
 8004060:	f003 0307 	and.w	r3, r3, #7
 8004064:	2b00      	cmp	r3, #0
 8004066:	d009      	beq.n	800407c <pvPortMalloc+0xf4>
 8004068:	f04f 0350 	mov.w	r3, #80	; 0x50
 800406c:	f383 8811 	msr	BASEPRI, r3
 8004070:	f3bf 8f6f 	isb	sy
 8004074:	f3bf 8f4f 	dsb	sy
 8004078:	613b      	str	r3, [r7, #16]
 800407a:	e7fe      	b.n	800407a <pvPortMalloc+0xf2>
 800407c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800407e:	685a      	ldr	r2, [r3, #4]
 8004080:	687b      	ldr	r3, [r7, #4]
 8004082:	1ad2      	subs	r2, r2, r3
 8004084:	69bb      	ldr	r3, [r7, #24]
 8004086:	605a      	str	r2, [r3, #4]
 8004088:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800408a:	687a      	ldr	r2, [r7, #4]
 800408c:	605a      	str	r2, [r3, #4]
 800408e:	69b8      	ldr	r0, [r7, #24]
 8004090:	f000 f8fa 	bl	8004288 <prvInsertBlockIntoFreeList>
 8004094:	4b1c      	ldr	r3, [pc, #112]	; (8004108 <pvPortMalloc+0x180>)
 8004096:	681a      	ldr	r2, [r3, #0]
 8004098:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800409a:	685b      	ldr	r3, [r3, #4]
 800409c:	1ad2      	subs	r2, r2, r3
 800409e:	4b1a      	ldr	r3, [pc, #104]	; (8004108 <pvPortMalloc+0x180>)
 80040a0:	601a      	str	r2, [r3, #0]
 80040a2:	4b19      	ldr	r3, [pc, #100]	; (8004108 <pvPortMalloc+0x180>)
 80040a4:	681a      	ldr	r2, [r3, #0]
 80040a6:	4b1a      	ldr	r3, [pc, #104]	; (8004110 <pvPortMalloc+0x188>)
 80040a8:	681b      	ldr	r3, [r3, #0]
 80040aa:	429a      	cmp	r2, r3
 80040ac:	d203      	bcs.n	80040b6 <pvPortMalloc+0x12e>
 80040ae:	4b16      	ldr	r3, [pc, #88]	; (8004108 <pvPortMalloc+0x180>)
 80040b0:	681a      	ldr	r2, [r3, #0]
 80040b2:	4b17      	ldr	r3, [pc, #92]	; (8004110 <pvPortMalloc+0x188>)
 80040b4:	601a      	str	r2, [r3, #0]
 80040b6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80040b8:	685a      	ldr	r2, [r3, #4]
 80040ba:	4b12      	ldr	r3, [pc, #72]	; (8004104 <pvPortMalloc+0x17c>)
 80040bc:	681b      	ldr	r3, [r3, #0]
 80040be:	431a      	orrs	r2, r3
 80040c0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80040c2:	605a      	str	r2, [r3, #4]
 80040c4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80040c6:	2200      	movs	r2, #0
 80040c8:	601a      	str	r2, [r3, #0]
 80040ca:	f7fe fd35 	bl	8002b38 <xTaskResumeAll>
 80040ce:	69fb      	ldr	r3, [r7, #28]
 80040d0:	2b00      	cmp	r3, #0
 80040d2:	d101      	bne.n	80040d8 <pvPortMalloc+0x150>
 80040d4:	f7fc fb5e 	bl	8000794 <ADC_IRQHandler>
 80040d8:	69fb      	ldr	r3, [r7, #28]
 80040da:	f003 0307 	and.w	r3, r3, #7
 80040de:	2b00      	cmp	r3, #0
 80040e0:	d009      	beq.n	80040f6 <pvPortMalloc+0x16e>
 80040e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80040e6:	f383 8811 	msr	BASEPRI, r3
 80040ea:	f3bf 8f6f 	isb	sy
 80040ee:	f3bf 8f4f 	dsb	sy
 80040f2:	60fb      	str	r3, [r7, #12]
 80040f4:	e7fe      	b.n	80040f4 <pvPortMalloc+0x16c>
 80040f6:	69fb      	ldr	r3, [r7, #28]
 80040f8:	4618      	mov	r0, r3
 80040fa:	3728      	adds	r7, #40	; 0x28
 80040fc:	46bd      	mov	sp, r7
 80040fe:	bd80      	pop	{r7, pc}
 8004100:	20013d34 	.word	0x20013d34
 8004104:	20013d40 	.word	0x20013d40
 8004108:	20013d38 	.word	0x20013d38
 800410c:	20013d2c 	.word	0x20013d2c
 8004110:	20013d3c 	.word	0x20013d3c

08004114 <vPortFree>:
 8004114:	b580      	push	{r7, lr}
 8004116:	b086      	sub	sp, #24
 8004118:	af00      	add	r7, sp, #0
 800411a:	6078      	str	r0, [r7, #4]
 800411c:	687b      	ldr	r3, [r7, #4]
 800411e:	617b      	str	r3, [r7, #20]
 8004120:	687b      	ldr	r3, [r7, #4]
 8004122:	2b00      	cmp	r3, #0
 8004124:	d046      	beq.n	80041b4 <vPortFree+0xa0>
 8004126:	2308      	movs	r3, #8
 8004128:	425b      	negs	r3, r3
 800412a:	697a      	ldr	r2, [r7, #20]
 800412c:	4413      	add	r3, r2
 800412e:	617b      	str	r3, [r7, #20]
 8004130:	697b      	ldr	r3, [r7, #20]
 8004132:	613b      	str	r3, [r7, #16]
 8004134:	693b      	ldr	r3, [r7, #16]
 8004136:	685a      	ldr	r2, [r3, #4]
 8004138:	4b20      	ldr	r3, [pc, #128]	; (80041bc <vPortFree+0xa8>)
 800413a:	681b      	ldr	r3, [r3, #0]
 800413c:	4013      	ands	r3, r2
 800413e:	2b00      	cmp	r3, #0
 8004140:	d109      	bne.n	8004156 <vPortFree+0x42>
 8004142:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004146:	f383 8811 	msr	BASEPRI, r3
 800414a:	f3bf 8f6f 	isb	sy
 800414e:	f3bf 8f4f 	dsb	sy
 8004152:	60fb      	str	r3, [r7, #12]
 8004154:	e7fe      	b.n	8004154 <vPortFree+0x40>
 8004156:	693b      	ldr	r3, [r7, #16]
 8004158:	681b      	ldr	r3, [r3, #0]
 800415a:	2b00      	cmp	r3, #0
 800415c:	d009      	beq.n	8004172 <vPortFree+0x5e>
 800415e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004162:	f383 8811 	msr	BASEPRI, r3
 8004166:	f3bf 8f6f 	isb	sy
 800416a:	f3bf 8f4f 	dsb	sy
 800416e:	60bb      	str	r3, [r7, #8]
 8004170:	e7fe      	b.n	8004170 <vPortFree+0x5c>
 8004172:	693b      	ldr	r3, [r7, #16]
 8004174:	685a      	ldr	r2, [r3, #4]
 8004176:	4b11      	ldr	r3, [pc, #68]	; (80041bc <vPortFree+0xa8>)
 8004178:	681b      	ldr	r3, [r3, #0]
 800417a:	4013      	ands	r3, r2
 800417c:	2b00      	cmp	r3, #0
 800417e:	d019      	beq.n	80041b4 <vPortFree+0xa0>
 8004180:	693b      	ldr	r3, [r7, #16]
 8004182:	681b      	ldr	r3, [r3, #0]
 8004184:	2b00      	cmp	r3, #0
 8004186:	d115      	bne.n	80041b4 <vPortFree+0xa0>
 8004188:	693b      	ldr	r3, [r7, #16]
 800418a:	685a      	ldr	r2, [r3, #4]
 800418c:	4b0b      	ldr	r3, [pc, #44]	; (80041bc <vPortFree+0xa8>)
 800418e:	681b      	ldr	r3, [r3, #0]
 8004190:	43db      	mvns	r3, r3
 8004192:	401a      	ands	r2, r3
 8004194:	693b      	ldr	r3, [r7, #16]
 8004196:	605a      	str	r2, [r3, #4]
 8004198:	f7fe fcc0 	bl	8002b1c <vTaskSuspendAll>
 800419c:	693b      	ldr	r3, [r7, #16]
 800419e:	685a      	ldr	r2, [r3, #4]
 80041a0:	4b07      	ldr	r3, [pc, #28]	; (80041c0 <vPortFree+0xac>)
 80041a2:	681b      	ldr	r3, [r3, #0]
 80041a4:	441a      	add	r2, r3
 80041a6:	4b06      	ldr	r3, [pc, #24]	; (80041c0 <vPortFree+0xac>)
 80041a8:	601a      	str	r2, [r3, #0]
 80041aa:	6938      	ldr	r0, [r7, #16]
 80041ac:	f000 f86c 	bl	8004288 <prvInsertBlockIntoFreeList>
 80041b0:	f7fe fcc2 	bl	8002b38 <xTaskResumeAll>
 80041b4:	3718      	adds	r7, #24
 80041b6:	46bd      	mov	sp, r7
 80041b8:	bd80      	pop	{r7, pc}
 80041ba:	bf00      	nop
 80041bc:	20013d40 	.word	0x20013d40
 80041c0:	20013d38 	.word	0x20013d38

080041c4 <prvHeapInit>:
 80041c4:	b480      	push	{r7}
 80041c6:	b085      	sub	sp, #20
 80041c8:	af00      	add	r7, sp, #0
 80041ca:	f44f 3396 	mov.w	r3, #76800	; 0x12c00
 80041ce:	60bb      	str	r3, [r7, #8]
 80041d0:	4b27      	ldr	r3, [pc, #156]	; (8004270 <prvHeapInit+0xac>)
 80041d2:	60fb      	str	r3, [r7, #12]
 80041d4:	68fb      	ldr	r3, [r7, #12]
 80041d6:	f003 0307 	and.w	r3, r3, #7
 80041da:	2b00      	cmp	r3, #0
 80041dc:	d00c      	beq.n	80041f8 <prvHeapInit+0x34>
 80041de:	68fb      	ldr	r3, [r7, #12]
 80041e0:	3307      	adds	r3, #7
 80041e2:	60fb      	str	r3, [r7, #12]
 80041e4:	68fb      	ldr	r3, [r7, #12]
 80041e6:	f023 0307 	bic.w	r3, r3, #7
 80041ea:	60fb      	str	r3, [r7, #12]
 80041ec:	68ba      	ldr	r2, [r7, #8]
 80041ee:	68fb      	ldr	r3, [r7, #12]
 80041f0:	1ad2      	subs	r2, r2, r3
 80041f2:	4b1f      	ldr	r3, [pc, #124]	; (8004270 <prvHeapInit+0xac>)
 80041f4:	4413      	add	r3, r2
 80041f6:	60bb      	str	r3, [r7, #8]
 80041f8:	68fb      	ldr	r3, [r7, #12]
 80041fa:	607b      	str	r3, [r7, #4]
 80041fc:	4b1d      	ldr	r3, [pc, #116]	; (8004274 <prvHeapInit+0xb0>)
 80041fe:	687a      	ldr	r2, [r7, #4]
 8004200:	601a      	str	r2, [r3, #0]
 8004202:	4b1c      	ldr	r3, [pc, #112]	; (8004274 <prvHeapInit+0xb0>)
 8004204:	2200      	movs	r2, #0
 8004206:	605a      	str	r2, [r3, #4]
 8004208:	687a      	ldr	r2, [r7, #4]
 800420a:	68bb      	ldr	r3, [r7, #8]
 800420c:	4413      	add	r3, r2
 800420e:	60fb      	str	r3, [r7, #12]
 8004210:	2308      	movs	r3, #8
 8004212:	68fa      	ldr	r2, [r7, #12]
 8004214:	1ad3      	subs	r3, r2, r3
 8004216:	60fb      	str	r3, [r7, #12]
 8004218:	68fb      	ldr	r3, [r7, #12]
 800421a:	f023 0307 	bic.w	r3, r3, #7
 800421e:	60fb      	str	r3, [r7, #12]
 8004220:	68fa      	ldr	r2, [r7, #12]
 8004222:	4b15      	ldr	r3, [pc, #84]	; (8004278 <prvHeapInit+0xb4>)
 8004224:	601a      	str	r2, [r3, #0]
 8004226:	4b14      	ldr	r3, [pc, #80]	; (8004278 <prvHeapInit+0xb4>)
 8004228:	681b      	ldr	r3, [r3, #0]
 800422a:	2200      	movs	r2, #0
 800422c:	605a      	str	r2, [r3, #4]
 800422e:	4b12      	ldr	r3, [pc, #72]	; (8004278 <prvHeapInit+0xb4>)
 8004230:	681b      	ldr	r3, [r3, #0]
 8004232:	2200      	movs	r2, #0
 8004234:	601a      	str	r2, [r3, #0]
 8004236:	687b      	ldr	r3, [r7, #4]
 8004238:	603b      	str	r3, [r7, #0]
 800423a:	683b      	ldr	r3, [r7, #0]
 800423c:	68fa      	ldr	r2, [r7, #12]
 800423e:	1ad2      	subs	r2, r2, r3
 8004240:	683b      	ldr	r3, [r7, #0]
 8004242:	605a      	str	r2, [r3, #4]
 8004244:	4b0c      	ldr	r3, [pc, #48]	; (8004278 <prvHeapInit+0xb4>)
 8004246:	681a      	ldr	r2, [r3, #0]
 8004248:	683b      	ldr	r3, [r7, #0]
 800424a:	601a      	str	r2, [r3, #0]
 800424c:	683b      	ldr	r3, [r7, #0]
 800424e:	685a      	ldr	r2, [r3, #4]
 8004250:	4b0a      	ldr	r3, [pc, #40]	; (800427c <prvHeapInit+0xb8>)
 8004252:	601a      	str	r2, [r3, #0]
 8004254:	683b      	ldr	r3, [r7, #0]
 8004256:	685a      	ldr	r2, [r3, #4]
 8004258:	4b09      	ldr	r3, [pc, #36]	; (8004280 <prvHeapInit+0xbc>)
 800425a:	601a      	str	r2, [r3, #0]
 800425c:	4b09      	ldr	r3, [pc, #36]	; (8004284 <prvHeapInit+0xc0>)
 800425e:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 8004262:	601a      	str	r2, [r3, #0]
 8004264:	3714      	adds	r7, #20
 8004266:	46bd      	mov	sp, r7
 8004268:	f85d 7b04 	ldr.w	r7, [sp], #4
 800426c:	4770      	bx	lr
 800426e:	bf00      	nop
 8004270:	2000112c 	.word	0x2000112c
 8004274:	20013d2c 	.word	0x20013d2c
 8004278:	20013d34 	.word	0x20013d34
 800427c:	20013d3c 	.word	0x20013d3c
 8004280:	20013d38 	.word	0x20013d38
 8004284:	20013d40 	.word	0x20013d40

08004288 <prvInsertBlockIntoFreeList>:
 8004288:	b480      	push	{r7}
 800428a:	b085      	sub	sp, #20
 800428c:	af00      	add	r7, sp, #0
 800428e:	6078      	str	r0, [r7, #4]
 8004290:	4b27      	ldr	r3, [pc, #156]	; (8004330 <prvInsertBlockIntoFreeList+0xa8>)
 8004292:	60fb      	str	r3, [r7, #12]
 8004294:	e002      	b.n	800429c <prvInsertBlockIntoFreeList+0x14>
 8004296:	68fb      	ldr	r3, [r7, #12]
 8004298:	681b      	ldr	r3, [r3, #0]
 800429a:	60fb      	str	r3, [r7, #12]
 800429c:	68fb      	ldr	r3, [r7, #12]
 800429e:	681a      	ldr	r2, [r3, #0]
 80042a0:	687b      	ldr	r3, [r7, #4]
 80042a2:	429a      	cmp	r2, r3
 80042a4:	d3f7      	bcc.n	8004296 <prvInsertBlockIntoFreeList+0xe>
 80042a6:	68fb      	ldr	r3, [r7, #12]
 80042a8:	60bb      	str	r3, [r7, #8]
 80042aa:	68fb      	ldr	r3, [r7, #12]
 80042ac:	685b      	ldr	r3, [r3, #4]
 80042ae:	68ba      	ldr	r2, [r7, #8]
 80042b0:	441a      	add	r2, r3
 80042b2:	687b      	ldr	r3, [r7, #4]
 80042b4:	429a      	cmp	r2, r3
 80042b6:	d108      	bne.n	80042ca <prvInsertBlockIntoFreeList+0x42>
 80042b8:	68fb      	ldr	r3, [r7, #12]
 80042ba:	685a      	ldr	r2, [r3, #4]
 80042bc:	687b      	ldr	r3, [r7, #4]
 80042be:	685b      	ldr	r3, [r3, #4]
 80042c0:	441a      	add	r2, r3
 80042c2:	68fb      	ldr	r3, [r7, #12]
 80042c4:	605a      	str	r2, [r3, #4]
 80042c6:	68fb      	ldr	r3, [r7, #12]
 80042c8:	607b      	str	r3, [r7, #4]
 80042ca:	687b      	ldr	r3, [r7, #4]
 80042cc:	60bb      	str	r3, [r7, #8]
 80042ce:	687b      	ldr	r3, [r7, #4]
 80042d0:	685b      	ldr	r3, [r3, #4]
 80042d2:	68ba      	ldr	r2, [r7, #8]
 80042d4:	441a      	add	r2, r3
 80042d6:	68fb      	ldr	r3, [r7, #12]
 80042d8:	681b      	ldr	r3, [r3, #0]
 80042da:	429a      	cmp	r2, r3
 80042dc:	d118      	bne.n	8004310 <prvInsertBlockIntoFreeList+0x88>
 80042de:	68fb      	ldr	r3, [r7, #12]
 80042e0:	681a      	ldr	r2, [r3, #0]
 80042e2:	4b14      	ldr	r3, [pc, #80]	; (8004334 <prvInsertBlockIntoFreeList+0xac>)
 80042e4:	681b      	ldr	r3, [r3, #0]
 80042e6:	429a      	cmp	r2, r3
 80042e8:	d00d      	beq.n	8004306 <prvInsertBlockIntoFreeList+0x7e>
 80042ea:	687b      	ldr	r3, [r7, #4]
 80042ec:	685a      	ldr	r2, [r3, #4]
 80042ee:	68fb      	ldr	r3, [r7, #12]
 80042f0:	681b      	ldr	r3, [r3, #0]
 80042f2:	685b      	ldr	r3, [r3, #4]
 80042f4:	441a      	add	r2, r3
 80042f6:	687b      	ldr	r3, [r7, #4]
 80042f8:	605a      	str	r2, [r3, #4]
 80042fa:	68fb      	ldr	r3, [r7, #12]
 80042fc:	681b      	ldr	r3, [r3, #0]
 80042fe:	681a      	ldr	r2, [r3, #0]
 8004300:	687b      	ldr	r3, [r7, #4]
 8004302:	601a      	str	r2, [r3, #0]
 8004304:	e008      	b.n	8004318 <prvInsertBlockIntoFreeList+0x90>
 8004306:	4b0b      	ldr	r3, [pc, #44]	; (8004334 <prvInsertBlockIntoFreeList+0xac>)
 8004308:	681a      	ldr	r2, [r3, #0]
 800430a:	687b      	ldr	r3, [r7, #4]
 800430c:	601a      	str	r2, [r3, #0]
 800430e:	e003      	b.n	8004318 <prvInsertBlockIntoFreeList+0x90>
 8004310:	68fb      	ldr	r3, [r7, #12]
 8004312:	681a      	ldr	r2, [r3, #0]
 8004314:	687b      	ldr	r3, [r7, #4]
 8004316:	601a      	str	r2, [r3, #0]
 8004318:	68fa      	ldr	r2, [r7, #12]
 800431a:	687b      	ldr	r3, [r7, #4]
 800431c:	429a      	cmp	r2, r3
 800431e:	d002      	beq.n	8004326 <prvInsertBlockIntoFreeList+0x9e>
 8004320:	68fb      	ldr	r3, [r7, #12]
 8004322:	687a      	ldr	r2, [r7, #4]
 8004324:	601a      	str	r2, [r3, #0]
 8004326:	3714      	adds	r7, #20
 8004328:	46bd      	mov	sp, r7
 800432a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800432e:	4770      	bx	lr
 8004330:	20013d2c 	.word	0x20013d2c
 8004334:	20013d34 	.word	0x20013d34

08004338 <vListInitialise>:
 8004338:	b480      	push	{r7}
 800433a:	b083      	sub	sp, #12
 800433c:	af00      	add	r7, sp, #0
 800433e:	6078      	str	r0, [r7, #4]
 8004340:	687b      	ldr	r3, [r7, #4]
 8004342:	f103 0208 	add.w	r2, r3, #8
 8004346:	687b      	ldr	r3, [r7, #4]
 8004348:	605a      	str	r2, [r3, #4]
 800434a:	687b      	ldr	r3, [r7, #4]
 800434c:	f04f 32ff 	mov.w	r2, #4294967295
 8004350:	609a      	str	r2, [r3, #8]
 8004352:	687b      	ldr	r3, [r7, #4]
 8004354:	f103 0208 	add.w	r2, r3, #8
 8004358:	687b      	ldr	r3, [r7, #4]
 800435a:	60da      	str	r2, [r3, #12]
 800435c:	687b      	ldr	r3, [r7, #4]
 800435e:	f103 0208 	add.w	r2, r3, #8
 8004362:	687b      	ldr	r3, [r7, #4]
 8004364:	611a      	str	r2, [r3, #16]
 8004366:	687b      	ldr	r3, [r7, #4]
 8004368:	2200      	movs	r2, #0
 800436a:	601a      	str	r2, [r3, #0]
 800436c:	370c      	adds	r7, #12
 800436e:	46bd      	mov	sp, r7
 8004370:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004374:	4770      	bx	lr
 8004376:	bf00      	nop

08004378 <vListInitialiseItem>:
 8004378:	b480      	push	{r7}
 800437a:	b083      	sub	sp, #12
 800437c:	af00      	add	r7, sp, #0
 800437e:	6078      	str	r0, [r7, #4]
 8004380:	687b      	ldr	r3, [r7, #4]
 8004382:	2200      	movs	r2, #0
 8004384:	611a      	str	r2, [r3, #16]
 8004386:	370c      	adds	r7, #12
 8004388:	46bd      	mov	sp, r7
 800438a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800438e:	4770      	bx	lr

08004390 <vListInsertEnd>:
 8004390:	b480      	push	{r7}
 8004392:	b085      	sub	sp, #20
 8004394:	af00      	add	r7, sp, #0
 8004396:	6078      	str	r0, [r7, #4]
 8004398:	6039      	str	r1, [r7, #0]
 800439a:	687b      	ldr	r3, [r7, #4]
 800439c:	685b      	ldr	r3, [r3, #4]
 800439e:	60fb      	str	r3, [r7, #12]
 80043a0:	683b      	ldr	r3, [r7, #0]
 80043a2:	68fa      	ldr	r2, [r7, #12]
 80043a4:	605a      	str	r2, [r3, #4]
 80043a6:	68fb      	ldr	r3, [r7, #12]
 80043a8:	689a      	ldr	r2, [r3, #8]
 80043aa:	683b      	ldr	r3, [r7, #0]
 80043ac:	609a      	str	r2, [r3, #8]
 80043ae:	68fb      	ldr	r3, [r7, #12]
 80043b0:	689b      	ldr	r3, [r3, #8]
 80043b2:	683a      	ldr	r2, [r7, #0]
 80043b4:	605a      	str	r2, [r3, #4]
 80043b6:	68fb      	ldr	r3, [r7, #12]
 80043b8:	683a      	ldr	r2, [r7, #0]
 80043ba:	609a      	str	r2, [r3, #8]
 80043bc:	683b      	ldr	r3, [r7, #0]
 80043be:	687a      	ldr	r2, [r7, #4]
 80043c0:	611a      	str	r2, [r3, #16]
 80043c2:	687b      	ldr	r3, [r7, #4]
 80043c4:	681b      	ldr	r3, [r3, #0]
 80043c6:	1c5a      	adds	r2, r3, #1
 80043c8:	687b      	ldr	r3, [r7, #4]
 80043ca:	601a      	str	r2, [r3, #0]
 80043cc:	3714      	adds	r7, #20
 80043ce:	46bd      	mov	sp, r7
 80043d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80043d4:	4770      	bx	lr
 80043d6:	bf00      	nop

080043d8 <vListInsert>:
 80043d8:	b480      	push	{r7}
 80043da:	b085      	sub	sp, #20
 80043dc:	af00      	add	r7, sp, #0
 80043de:	6078      	str	r0, [r7, #4]
 80043e0:	6039      	str	r1, [r7, #0]
 80043e2:	683b      	ldr	r3, [r7, #0]
 80043e4:	681b      	ldr	r3, [r3, #0]
 80043e6:	60bb      	str	r3, [r7, #8]
 80043e8:	68bb      	ldr	r3, [r7, #8]
 80043ea:	f1b3 3fff 	cmp.w	r3, #4294967295
 80043ee:	d103      	bne.n	80043f8 <vListInsert+0x20>
 80043f0:	687b      	ldr	r3, [r7, #4]
 80043f2:	691b      	ldr	r3, [r3, #16]
 80043f4:	60fb      	str	r3, [r7, #12]
 80043f6:	e00c      	b.n	8004412 <vListInsert+0x3a>
 80043f8:	687b      	ldr	r3, [r7, #4]
 80043fa:	3308      	adds	r3, #8
 80043fc:	60fb      	str	r3, [r7, #12]
 80043fe:	e002      	b.n	8004406 <vListInsert+0x2e>
 8004400:	68fb      	ldr	r3, [r7, #12]
 8004402:	685b      	ldr	r3, [r3, #4]
 8004404:	60fb      	str	r3, [r7, #12]
 8004406:	68fb      	ldr	r3, [r7, #12]
 8004408:	685b      	ldr	r3, [r3, #4]
 800440a:	681a      	ldr	r2, [r3, #0]
 800440c:	68bb      	ldr	r3, [r7, #8]
 800440e:	429a      	cmp	r2, r3
 8004410:	d9f6      	bls.n	8004400 <vListInsert+0x28>
 8004412:	68fb      	ldr	r3, [r7, #12]
 8004414:	685a      	ldr	r2, [r3, #4]
 8004416:	683b      	ldr	r3, [r7, #0]
 8004418:	605a      	str	r2, [r3, #4]
 800441a:	683b      	ldr	r3, [r7, #0]
 800441c:	685b      	ldr	r3, [r3, #4]
 800441e:	683a      	ldr	r2, [r7, #0]
 8004420:	609a      	str	r2, [r3, #8]
 8004422:	683b      	ldr	r3, [r7, #0]
 8004424:	68fa      	ldr	r2, [r7, #12]
 8004426:	609a      	str	r2, [r3, #8]
 8004428:	68fb      	ldr	r3, [r7, #12]
 800442a:	683a      	ldr	r2, [r7, #0]
 800442c:	605a      	str	r2, [r3, #4]
 800442e:	683b      	ldr	r3, [r7, #0]
 8004430:	687a      	ldr	r2, [r7, #4]
 8004432:	611a      	str	r2, [r3, #16]
 8004434:	687b      	ldr	r3, [r7, #4]
 8004436:	681b      	ldr	r3, [r3, #0]
 8004438:	1c5a      	adds	r2, r3, #1
 800443a:	687b      	ldr	r3, [r7, #4]
 800443c:	601a      	str	r2, [r3, #0]
 800443e:	3714      	adds	r7, #20
 8004440:	46bd      	mov	sp, r7
 8004442:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004446:	4770      	bx	lr

08004448 <uxListRemove>:
 8004448:	b480      	push	{r7}
 800444a:	b085      	sub	sp, #20
 800444c:	af00      	add	r7, sp, #0
 800444e:	6078      	str	r0, [r7, #4]
 8004450:	687b      	ldr	r3, [r7, #4]
 8004452:	691b      	ldr	r3, [r3, #16]
 8004454:	60fb      	str	r3, [r7, #12]
 8004456:	687b      	ldr	r3, [r7, #4]
 8004458:	685b      	ldr	r3, [r3, #4]
 800445a:	687a      	ldr	r2, [r7, #4]
 800445c:	6892      	ldr	r2, [r2, #8]
 800445e:	609a      	str	r2, [r3, #8]
 8004460:	687b      	ldr	r3, [r7, #4]
 8004462:	689b      	ldr	r3, [r3, #8]
 8004464:	687a      	ldr	r2, [r7, #4]
 8004466:	6852      	ldr	r2, [r2, #4]
 8004468:	605a      	str	r2, [r3, #4]
 800446a:	68fb      	ldr	r3, [r7, #12]
 800446c:	685a      	ldr	r2, [r3, #4]
 800446e:	687b      	ldr	r3, [r7, #4]
 8004470:	429a      	cmp	r2, r3
 8004472:	d103      	bne.n	800447c <uxListRemove+0x34>
 8004474:	687b      	ldr	r3, [r7, #4]
 8004476:	689a      	ldr	r2, [r3, #8]
 8004478:	68fb      	ldr	r3, [r7, #12]
 800447a:	605a      	str	r2, [r3, #4]
 800447c:	687b      	ldr	r3, [r7, #4]
 800447e:	2200      	movs	r2, #0
 8004480:	611a      	str	r2, [r3, #16]
 8004482:	68fb      	ldr	r3, [r7, #12]
 8004484:	681b      	ldr	r3, [r3, #0]
 8004486:	1e5a      	subs	r2, r3, #1
 8004488:	68fb      	ldr	r3, [r7, #12]
 800448a:	601a      	str	r2, [r3, #0]
 800448c:	68fb      	ldr	r3, [r7, #12]
 800448e:	681b      	ldr	r3, [r3, #0]
 8004490:	4618      	mov	r0, r3
 8004492:	3714      	adds	r7, #20
 8004494:	46bd      	mov	sp, r7
 8004496:	f85d 7b04 	ldr.w	r7, [sp], #4
 800449a:	4770      	bx	lr

0800449c <xQueueGenericReset>:
 800449c:	b580      	push	{r7, lr}
 800449e:	b084      	sub	sp, #16
 80044a0:	af00      	add	r7, sp, #0
 80044a2:	6078      	str	r0, [r7, #4]
 80044a4:	6039      	str	r1, [r7, #0]
 80044a6:	687b      	ldr	r3, [r7, #4]
 80044a8:	60fb      	str	r3, [r7, #12]
 80044aa:	68fb      	ldr	r3, [r7, #12]
 80044ac:	2b00      	cmp	r3, #0
 80044ae:	d109      	bne.n	80044c4 <xQueueGenericReset+0x28>
 80044b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80044b4:	f383 8811 	msr	BASEPRI, r3
 80044b8:	f3bf 8f6f 	isb	sy
 80044bc:	f3bf 8f4f 	dsb	sy
 80044c0:	60bb      	str	r3, [r7, #8]
 80044c2:	e7fe      	b.n	80044c2 <xQueueGenericReset+0x26>
 80044c4:	f7ff fc5a 	bl	8003d7c <vPortEnterCritical>
 80044c8:	68fb      	ldr	r3, [r7, #12]
 80044ca:	681a      	ldr	r2, [r3, #0]
 80044cc:	68fb      	ldr	r3, [r7, #12]
 80044ce:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80044d0:	68f9      	ldr	r1, [r7, #12]
 80044d2:	6c09      	ldr	r1, [r1, #64]	; 0x40
 80044d4:	fb01 f303 	mul.w	r3, r1, r3
 80044d8:	441a      	add	r2, r3
 80044da:	68fb      	ldr	r3, [r7, #12]
 80044dc:	605a      	str	r2, [r3, #4]
 80044de:	68fb      	ldr	r3, [r7, #12]
 80044e0:	2200      	movs	r2, #0
 80044e2:	639a      	str	r2, [r3, #56]	; 0x38
 80044e4:	68fb      	ldr	r3, [r7, #12]
 80044e6:	681a      	ldr	r2, [r3, #0]
 80044e8:	68fb      	ldr	r3, [r7, #12]
 80044ea:	609a      	str	r2, [r3, #8]
 80044ec:	68fb      	ldr	r3, [r7, #12]
 80044ee:	681a      	ldr	r2, [r3, #0]
 80044f0:	68fb      	ldr	r3, [r7, #12]
 80044f2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80044f4:	3b01      	subs	r3, #1
 80044f6:	68f9      	ldr	r1, [r7, #12]
 80044f8:	6c09      	ldr	r1, [r1, #64]	; 0x40
 80044fa:	fb01 f303 	mul.w	r3, r1, r3
 80044fe:	441a      	add	r2, r3
 8004500:	68fb      	ldr	r3, [r7, #12]
 8004502:	60da      	str	r2, [r3, #12]
 8004504:	68fb      	ldr	r3, [r7, #12]
 8004506:	22ff      	movs	r2, #255	; 0xff
 8004508:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800450c:	68fb      	ldr	r3, [r7, #12]
 800450e:	22ff      	movs	r2, #255	; 0xff
 8004510:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8004514:	683b      	ldr	r3, [r7, #0]
 8004516:	2b00      	cmp	r3, #0
 8004518:	d114      	bne.n	8004544 <xQueueGenericReset+0xa8>
 800451a:	68fb      	ldr	r3, [r7, #12]
 800451c:	691b      	ldr	r3, [r3, #16]
 800451e:	2b00      	cmp	r3, #0
 8004520:	d01a      	beq.n	8004558 <xQueueGenericReset+0xbc>
 8004522:	68fb      	ldr	r3, [r7, #12]
 8004524:	3310      	adds	r3, #16
 8004526:	4618      	mov	r0, r3
 8004528:	f7fe fd38 	bl	8002f9c <xTaskRemoveFromEventList>
 800452c:	4603      	mov	r3, r0
 800452e:	2b00      	cmp	r3, #0
 8004530:	d012      	beq.n	8004558 <xQueueGenericReset+0xbc>
 8004532:	4b0d      	ldr	r3, [pc, #52]	; (8004568 <xQueueGenericReset+0xcc>)
 8004534:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8004538:	601a      	str	r2, [r3, #0]
 800453a:	f3bf 8f4f 	dsb	sy
 800453e:	f3bf 8f6f 	isb	sy
 8004542:	e009      	b.n	8004558 <xQueueGenericReset+0xbc>
 8004544:	68fb      	ldr	r3, [r7, #12]
 8004546:	3310      	adds	r3, #16
 8004548:	4618      	mov	r0, r3
 800454a:	f7ff fef5 	bl	8004338 <vListInitialise>
 800454e:	68fb      	ldr	r3, [r7, #12]
 8004550:	3324      	adds	r3, #36	; 0x24
 8004552:	4618      	mov	r0, r3
 8004554:	f7ff fef0 	bl	8004338 <vListInitialise>
 8004558:	f7ff fc3e 	bl	8003dd8 <vPortExitCritical>
 800455c:	2301      	movs	r3, #1
 800455e:	4618      	mov	r0, r3
 8004560:	3710      	adds	r7, #16
 8004562:	46bd      	mov	sp, r7
 8004564:	bd80      	pop	{r7, pc}
 8004566:	bf00      	nop
 8004568:	e000ed04 	.word	0xe000ed04

0800456c <xQueueGenericCreate>:
 800456c:	b580      	push	{r7, lr}
 800456e:	b08a      	sub	sp, #40	; 0x28
 8004570:	af02      	add	r7, sp, #8
 8004572:	60f8      	str	r0, [r7, #12]
 8004574:	60b9      	str	r1, [r7, #8]
 8004576:	4613      	mov	r3, r2
 8004578:	71fb      	strb	r3, [r7, #7]
 800457a:	68fb      	ldr	r3, [r7, #12]
 800457c:	2b00      	cmp	r3, #0
 800457e:	d109      	bne.n	8004594 <xQueueGenericCreate+0x28>
 8004580:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004584:	f383 8811 	msr	BASEPRI, r3
 8004588:	f3bf 8f6f 	isb	sy
 800458c:	f3bf 8f4f 	dsb	sy
 8004590:	613b      	str	r3, [r7, #16]
 8004592:	e7fe      	b.n	8004592 <xQueueGenericCreate+0x26>
 8004594:	68bb      	ldr	r3, [r7, #8]
 8004596:	2b00      	cmp	r3, #0
 8004598:	d102      	bne.n	80045a0 <xQueueGenericCreate+0x34>
 800459a:	2300      	movs	r3, #0
 800459c:	61fb      	str	r3, [r7, #28]
 800459e:	e004      	b.n	80045aa <xQueueGenericCreate+0x3e>
 80045a0:	68fb      	ldr	r3, [r7, #12]
 80045a2:	68ba      	ldr	r2, [r7, #8]
 80045a4:	fb02 f303 	mul.w	r3, r2, r3
 80045a8:	61fb      	str	r3, [r7, #28]
 80045aa:	69fb      	ldr	r3, [r7, #28]
 80045ac:	3350      	adds	r3, #80	; 0x50
 80045ae:	4618      	mov	r0, r3
 80045b0:	f7ff fcea 	bl	8003f88 <pvPortMalloc>
 80045b4:	61b8      	str	r0, [r7, #24]
 80045b6:	69bb      	ldr	r3, [r7, #24]
 80045b8:	2b00      	cmp	r3, #0
 80045ba:	d00a      	beq.n	80045d2 <xQueueGenericCreate+0x66>
 80045bc:	69bb      	ldr	r3, [r7, #24]
 80045be:	3350      	adds	r3, #80	; 0x50
 80045c0:	617b      	str	r3, [r7, #20]
 80045c2:	79fb      	ldrb	r3, [r7, #7]
 80045c4:	69ba      	ldr	r2, [r7, #24]
 80045c6:	9200      	str	r2, [sp, #0]
 80045c8:	68f8      	ldr	r0, [r7, #12]
 80045ca:	68b9      	ldr	r1, [r7, #8]
 80045cc:	697a      	ldr	r2, [r7, #20]
 80045ce:	f000 f805 	bl	80045dc <prvInitialiseNewQueue>
 80045d2:	69bb      	ldr	r3, [r7, #24]
 80045d4:	4618      	mov	r0, r3
 80045d6:	3720      	adds	r7, #32
 80045d8:	46bd      	mov	sp, r7
 80045da:	bd80      	pop	{r7, pc}

080045dc <prvInitialiseNewQueue>:
 80045dc:	b580      	push	{r7, lr}
 80045de:	b084      	sub	sp, #16
 80045e0:	af00      	add	r7, sp, #0
 80045e2:	60f8      	str	r0, [r7, #12]
 80045e4:	60b9      	str	r1, [r7, #8]
 80045e6:	607a      	str	r2, [r7, #4]
 80045e8:	70fb      	strb	r3, [r7, #3]
 80045ea:	68bb      	ldr	r3, [r7, #8]
 80045ec:	2b00      	cmp	r3, #0
 80045ee:	d103      	bne.n	80045f8 <prvInitialiseNewQueue+0x1c>
 80045f0:	69bb      	ldr	r3, [r7, #24]
 80045f2:	69ba      	ldr	r2, [r7, #24]
 80045f4:	601a      	str	r2, [r3, #0]
 80045f6:	e002      	b.n	80045fe <prvInitialiseNewQueue+0x22>
 80045f8:	69bb      	ldr	r3, [r7, #24]
 80045fa:	687a      	ldr	r2, [r7, #4]
 80045fc:	601a      	str	r2, [r3, #0]
 80045fe:	69bb      	ldr	r3, [r7, #24]
 8004600:	68fa      	ldr	r2, [r7, #12]
 8004602:	63da      	str	r2, [r3, #60]	; 0x3c
 8004604:	69bb      	ldr	r3, [r7, #24]
 8004606:	68ba      	ldr	r2, [r7, #8]
 8004608:	641a      	str	r2, [r3, #64]	; 0x40
 800460a:	69b8      	ldr	r0, [r7, #24]
 800460c:	2101      	movs	r1, #1
 800460e:	f7ff ff45 	bl	800449c <xQueueGenericReset>
 8004612:	69bb      	ldr	r3, [r7, #24]
 8004614:	78fa      	ldrb	r2, [r7, #3]
 8004616:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
 800461a:	3710      	adds	r7, #16
 800461c:	46bd      	mov	sp, r7
 800461e:	bd80      	pop	{r7, pc}

08004620 <xQueueGenericSend>:
 8004620:	b580      	push	{r7, lr}
 8004622:	b08e      	sub	sp, #56	; 0x38
 8004624:	af00      	add	r7, sp, #0
 8004626:	60f8      	str	r0, [r7, #12]
 8004628:	60b9      	str	r1, [r7, #8]
 800462a:	607a      	str	r2, [r7, #4]
 800462c:	603b      	str	r3, [r7, #0]
 800462e:	2300      	movs	r3, #0
 8004630:	637b      	str	r3, [r7, #52]	; 0x34
 8004632:	68fb      	ldr	r3, [r7, #12]
 8004634:	633b      	str	r3, [r7, #48]	; 0x30
 8004636:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004638:	2b00      	cmp	r3, #0
 800463a:	d109      	bne.n	8004650 <xQueueGenericSend+0x30>
 800463c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004640:	f383 8811 	msr	BASEPRI, r3
 8004644:	f3bf 8f6f 	isb	sy
 8004648:	f3bf 8f4f 	dsb	sy
 800464c:	62bb      	str	r3, [r7, #40]	; 0x28
 800464e:	e7fe      	b.n	800464e <xQueueGenericSend+0x2e>
 8004650:	68bb      	ldr	r3, [r7, #8]
 8004652:	2b00      	cmp	r3, #0
 8004654:	d103      	bne.n	800465e <xQueueGenericSend+0x3e>
 8004656:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004658:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800465a:	2b00      	cmp	r3, #0
 800465c:	d101      	bne.n	8004662 <xQueueGenericSend+0x42>
 800465e:	2301      	movs	r3, #1
 8004660:	e000      	b.n	8004664 <xQueueGenericSend+0x44>
 8004662:	2300      	movs	r3, #0
 8004664:	2b00      	cmp	r3, #0
 8004666:	d109      	bne.n	800467c <xQueueGenericSend+0x5c>
 8004668:	f04f 0350 	mov.w	r3, #80	; 0x50
 800466c:	f383 8811 	msr	BASEPRI, r3
 8004670:	f3bf 8f6f 	isb	sy
 8004674:	f3bf 8f4f 	dsb	sy
 8004678:	627b      	str	r3, [r7, #36]	; 0x24
 800467a:	e7fe      	b.n	800467a <xQueueGenericSend+0x5a>
 800467c:	683b      	ldr	r3, [r7, #0]
 800467e:	2b02      	cmp	r3, #2
 8004680:	d103      	bne.n	800468a <xQueueGenericSend+0x6a>
 8004682:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004684:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004686:	2b01      	cmp	r3, #1
 8004688:	d101      	bne.n	800468e <xQueueGenericSend+0x6e>
 800468a:	2301      	movs	r3, #1
 800468c:	e000      	b.n	8004690 <xQueueGenericSend+0x70>
 800468e:	2300      	movs	r3, #0
 8004690:	2b00      	cmp	r3, #0
 8004692:	d109      	bne.n	80046a8 <xQueueGenericSend+0x88>
 8004694:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004698:	f383 8811 	msr	BASEPRI, r3
 800469c:	f3bf 8f6f 	isb	sy
 80046a0:	f3bf 8f4f 	dsb	sy
 80046a4:	623b      	str	r3, [r7, #32]
 80046a6:	e7fe      	b.n	80046a6 <xQueueGenericSend+0x86>
 80046a8:	f7fe fe2a 	bl	8003300 <xTaskGetSchedulerState>
 80046ac:	4603      	mov	r3, r0
 80046ae:	2b00      	cmp	r3, #0
 80046b0:	d102      	bne.n	80046b8 <xQueueGenericSend+0x98>
 80046b2:	687b      	ldr	r3, [r7, #4]
 80046b4:	2b00      	cmp	r3, #0
 80046b6:	d101      	bne.n	80046bc <xQueueGenericSend+0x9c>
 80046b8:	2301      	movs	r3, #1
 80046ba:	e000      	b.n	80046be <xQueueGenericSend+0x9e>
 80046bc:	2300      	movs	r3, #0
 80046be:	2b00      	cmp	r3, #0
 80046c0:	d109      	bne.n	80046d6 <xQueueGenericSend+0xb6>
 80046c2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80046c6:	f383 8811 	msr	BASEPRI, r3
 80046ca:	f3bf 8f6f 	isb	sy
 80046ce:	f3bf 8f4f 	dsb	sy
 80046d2:	61fb      	str	r3, [r7, #28]
 80046d4:	e7fe      	b.n	80046d4 <xQueueGenericSend+0xb4>
 80046d6:	f7ff fb51 	bl	8003d7c <vPortEnterCritical>
 80046da:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80046dc:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80046de:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80046e0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80046e2:	429a      	cmp	r2, r3
 80046e4:	d302      	bcc.n	80046ec <xQueueGenericSend+0xcc>
 80046e6:	683b      	ldr	r3, [r7, #0]
 80046e8:	2b02      	cmp	r3, #2
 80046ea:	d129      	bne.n	8004740 <xQueueGenericSend+0x120>
 80046ec:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80046ee:	68b9      	ldr	r1, [r7, #8]
 80046f0:	683a      	ldr	r2, [r7, #0]
 80046f2:	f000 fa3d 	bl	8004b70 <prvCopyDataToQueue>
 80046f6:	62f8      	str	r0, [r7, #44]	; 0x2c
 80046f8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80046fa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80046fc:	2b00      	cmp	r3, #0
 80046fe:	d010      	beq.n	8004722 <xQueueGenericSend+0x102>
 8004700:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004702:	3324      	adds	r3, #36	; 0x24
 8004704:	4618      	mov	r0, r3
 8004706:	f7fe fc49 	bl	8002f9c <xTaskRemoveFromEventList>
 800470a:	4603      	mov	r3, r0
 800470c:	2b00      	cmp	r3, #0
 800470e:	d013      	beq.n	8004738 <xQueueGenericSend+0x118>
 8004710:	4b41      	ldr	r3, [pc, #260]	; (8004818 <xQueueGenericSend+0x1f8>)
 8004712:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8004716:	601a      	str	r2, [r3, #0]
 8004718:	f3bf 8f4f 	dsb	sy
 800471c:	f3bf 8f6f 	isb	sy
 8004720:	e00a      	b.n	8004738 <xQueueGenericSend+0x118>
 8004722:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004724:	2b00      	cmp	r3, #0
 8004726:	d007      	beq.n	8004738 <xQueueGenericSend+0x118>
 8004728:	4b3b      	ldr	r3, [pc, #236]	; (8004818 <xQueueGenericSend+0x1f8>)
 800472a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800472e:	601a      	str	r2, [r3, #0]
 8004730:	f3bf 8f4f 	dsb	sy
 8004734:	f3bf 8f6f 	isb	sy
 8004738:	f7ff fb4e 	bl	8003dd8 <vPortExitCritical>
 800473c:	2301      	movs	r3, #1
 800473e:	e067      	b.n	8004810 <xQueueGenericSend+0x1f0>
 8004740:	687b      	ldr	r3, [r7, #4]
 8004742:	2b00      	cmp	r3, #0
 8004744:	d103      	bne.n	800474e <xQueueGenericSend+0x12e>
 8004746:	f7ff fb47 	bl	8003dd8 <vPortExitCritical>
 800474a:	2300      	movs	r3, #0
 800474c:	e060      	b.n	8004810 <xQueueGenericSend+0x1f0>
 800474e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8004750:	2b00      	cmp	r3, #0
 8004752:	d106      	bne.n	8004762 <xQueueGenericSend+0x142>
 8004754:	f107 0314 	add.w	r3, r7, #20
 8004758:	4618      	mov	r0, r3
 800475a:	f7fe fc81 	bl	8003060 <vTaskSetTimeOutState>
 800475e:	2301      	movs	r3, #1
 8004760:	637b      	str	r3, [r7, #52]	; 0x34
 8004762:	f7ff fb39 	bl	8003dd8 <vPortExitCritical>
 8004766:	f7fe f9d9 	bl	8002b1c <vTaskSuspendAll>
 800476a:	f7ff fb07 	bl	8003d7c <vPortEnterCritical>
 800476e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004770:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8004774:	b2db      	uxtb	r3, r3
 8004776:	b25b      	sxtb	r3, r3
 8004778:	f1b3 3fff 	cmp.w	r3, #4294967295
 800477c:	d103      	bne.n	8004786 <xQueueGenericSend+0x166>
 800477e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004780:	2200      	movs	r2, #0
 8004782:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8004786:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004788:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 800478c:	b2db      	uxtb	r3, r3
 800478e:	b25b      	sxtb	r3, r3
 8004790:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004794:	d103      	bne.n	800479e <xQueueGenericSend+0x17e>
 8004796:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004798:	2200      	movs	r2, #0
 800479a:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800479e:	f7ff fb1b 	bl	8003dd8 <vPortExitCritical>
 80047a2:	f107 0214 	add.w	r2, r7, #20
 80047a6:	1d3b      	adds	r3, r7, #4
 80047a8:	4610      	mov	r0, r2
 80047aa:	4619      	mov	r1, r3
 80047ac:	f7fe fc7a 	bl	80030a4 <xTaskCheckForTimeOut>
 80047b0:	4603      	mov	r3, r0
 80047b2:	2b00      	cmp	r3, #0
 80047b4:	d124      	bne.n	8004800 <xQueueGenericSend+0x1e0>
 80047b6:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80047b8:	f000 fad2 	bl	8004d60 <prvIsQueueFull>
 80047bc:	4603      	mov	r3, r0
 80047be:	2b00      	cmp	r3, #0
 80047c0:	d018      	beq.n	80047f4 <xQueueGenericSend+0x1d4>
 80047c2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80047c4:	f103 0210 	add.w	r2, r3, #16
 80047c8:	687b      	ldr	r3, [r7, #4]
 80047ca:	4610      	mov	r0, r2
 80047cc:	4619      	mov	r1, r3
 80047ce:	f7fe fb99 	bl	8002f04 <vTaskPlaceOnEventList>
 80047d2:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80047d4:	f000 fa5e 	bl	8004c94 <prvUnlockQueue>
 80047d8:	f7fe f9ae 	bl	8002b38 <xTaskResumeAll>
 80047dc:	4603      	mov	r3, r0
 80047de:	2b00      	cmp	r3, #0
 80047e0:	d115      	bne.n	800480e <xQueueGenericSend+0x1ee>
 80047e2:	4b0d      	ldr	r3, [pc, #52]	; (8004818 <xQueueGenericSend+0x1f8>)
 80047e4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80047e8:	601a      	str	r2, [r3, #0]
 80047ea:	f3bf 8f4f 	dsb	sy
 80047ee:	f3bf 8f6f 	isb	sy
 80047f2:	e00c      	b.n	800480e <xQueueGenericSend+0x1ee>
 80047f4:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80047f6:	f000 fa4d 	bl	8004c94 <prvUnlockQueue>
 80047fa:	f7fe f99d 	bl	8002b38 <xTaskResumeAll>
 80047fe:	e76a      	b.n	80046d6 <xQueueGenericSend+0xb6>
 8004800:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8004802:	f000 fa47 	bl	8004c94 <prvUnlockQueue>
 8004806:	f7fe f997 	bl	8002b38 <xTaskResumeAll>
 800480a:	2300      	movs	r3, #0
 800480c:	e000      	b.n	8004810 <xQueueGenericSend+0x1f0>
 800480e:	e762      	b.n	80046d6 <xQueueGenericSend+0xb6>
 8004810:	4618      	mov	r0, r3
 8004812:	3738      	adds	r7, #56	; 0x38
 8004814:	46bd      	mov	sp, r7
 8004816:	bd80      	pop	{r7, pc}
 8004818:	e000ed04 	.word	0xe000ed04

0800481c <xQueueGenericSendFromISR>:
 800481c:	b580      	push	{r7, lr}
 800481e:	b08e      	sub	sp, #56	; 0x38
 8004820:	af00      	add	r7, sp, #0
 8004822:	60f8      	str	r0, [r7, #12]
 8004824:	60b9      	str	r1, [r7, #8]
 8004826:	607a      	str	r2, [r7, #4]
 8004828:	603b      	str	r3, [r7, #0]
 800482a:	68fb      	ldr	r3, [r7, #12]
 800482c:	633b      	str	r3, [r7, #48]	; 0x30
 800482e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004830:	2b00      	cmp	r3, #0
 8004832:	d109      	bne.n	8004848 <xQueueGenericSendFromISR+0x2c>
 8004834:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004838:	f383 8811 	msr	BASEPRI, r3
 800483c:	f3bf 8f6f 	isb	sy
 8004840:	f3bf 8f4f 	dsb	sy
 8004844:	627b      	str	r3, [r7, #36]	; 0x24
 8004846:	e7fe      	b.n	8004846 <xQueueGenericSendFromISR+0x2a>
 8004848:	68bb      	ldr	r3, [r7, #8]
 800484a:	2b00      	cmp	r3, #0
 800484c:	d103      	bne.n	8004856 <xQueueGenericSendFromISR+0x3a>
 800484e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004850:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004852:	2b00      	cmp	r3, #0
 8004854:	d101      	bne.n	800485a <xQueueGenericSendFromISR+0x3e>
 8004856:	2301      	movs	r3, #1
 8004858:	e000      	b.n	800485c <xQueueGenericSendFromISR+0x40>
 800485a:	2300      	movs	r3, #0
 800485c:	2b00      	cmp	r3, #0
 800485e:	d109      	bne.n	8004874 <xQueueGenericSendFromISR+0x58>
 8004860:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004864:	f383 8811 	msr	BASEPRI, r3
 8004868:	f3bf 8f6f 	isb	sy
 800486c:	f3bf 8f4f 	dsb	sy
 8004870:	623b      	str	r3, [r7, #32]
 8004872:	e7fe      	b.n	8004872 <xQueueGenericSendFromISR+0x56>
 8004874:	683b      	ldr	r3, [r7, #0]
 8004876:	2b02      	cmp	r3, #2
 8004878:	d103      	bne.n	8004882 <xQueueGenericSendFromISR+0x66>
 800487a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800487c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800487e:	2b01      	cmp	r3, #1
 8004880:	d101      	bne.n	8004886 <xQueueGenericSendFromISR+0x6a>
 8004882:	2301      	movs	r3, #1
 8004884:	e000      	b.n	8004888 <xQueueGenericSendFromISR+0x6c>
 8004886:	2300      	movs	r3, #0
 8004888:	2b00      	cmp	r3, #0
 800488a:	d109      	bne.n	80048a0 <xQueueGenericSendFromISR+0x84>
 800488c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004890:	f383 8811 	msr	BASEPRI, r3
 8004894:	f3bf 8f6f 	isb	sy
 8004898:	f3bf 8f4f 	dsb	sy
 800489c:	61fb      	str	r3, [r7, #28]
 800489e:	e7fe      	b.n	800489e <xQueueGenericSendFromISR+0x82>
 80048a0:	f7ff fb36 	bl	8003f10 <vPortValidateInterruptPriority>
 80048a4:	f3ef 8211 	mrs	r2, BASEPRI
 80048a8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80048ac:	f383 8811 	msr	BASEPRI, r3
 80048b0:	f3bf 8f6f 	isb	sy
 80048b4:	f3bf 8f4f 	dsb	sy
 80048b8:	61ba      	str	r2, [r7, #24]
 80048ba:	617b      	str	r3, [r7, #20]
 80048bc:	69bb      	ldr	r3, [r7, #24]
 80048be:	62fb      	str	r3, [r7, #44]	; 0x2c
 80048c0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80048c2:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80048c4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80048c6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80048c8:	429a      	cmp	r2, r3
 80048ca:	d302      	bcc.n	80048d2 <xQueueGenericSendFromISR+0xb6>
 80048cc:	683b      	ldr	r3, [r7, #0]
 80048ce:	2b02      	cmp	r3, #2
 80048d0:	d12c      	bne.n	800492c <xQueueGenericSendFromISR+0x110>
 80048d2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80048d4:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 80048d8:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 80048dc:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80048de:	68b9      	ldr	r1, [r7, #8]
 80048e0:	683a      	ldr	r2, [r7, #0]
 80048e2:	f000 f945 	bl	8004b70 <prvCopyDataToQueue>
 80048e6:	f997 302b 	ldrsb.w	r3, [r7, #43]	; 0x2b
 80048ea:	f1b3 3fff 	cmp.w	r3, #4294967295
 80048ee:	d112      	bne.n	8004916 <xQueueGenericSendFromISR+0xfa>
 80048f0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80048f2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80048f4:	2b00      	cmp	r3, #0
 80048f6:	d016      	beq.n	8004926 <xQueueGenericSendFromISR+0x10a>
 80048f8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80048fa:	3324      	adds	r3, #36	; 0x24
 80048fc:	4618      	mov	r0, r3
 80048fe:	f7fe fb4d 	bl	8002f9c <xTaskRemoveFromEventList>
 8004902:	4603      	mov	r3, r0
 8004904:	2b00      	cmp	r3, #0
 8004906:	d00e      	beq.n	8004926 <xQueueGenericSendFromISR+0x10a>
 8004908:	687b      	ldr	r3, [r7, #4]
 800490a:	2b00      	cmp	r3, #0
 800490c:	d00b      	beq.n	8004926 <xQueueGenericSendFromISR+0x10a>
 800490e:	687b      	ldr	r3, [r7, #4]
 8004910:	2201      	movs	r2, #1
 8004912:	601a      	str	r2, [r3, #0]
 8004914:	e007      	b.n	8004926 <xQueueGenericSendFromISR+0x10a>
 8004916:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 800491a:	3301      	adds	r3, #1
 800491c:	b2db      	uxtb	r3, r3
 800491e:	b2da      	uxtb	r2, r3
 8004920:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004922:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8004926:	2301      	movs	r3, #1
 8004928:	637b      	str	r3, [r7, #52]	; 0x34
 800492a:	e001      	b.n	8004930 <xQueueGenericSendFromISR+0x114>
 800492c:	2300      	movs	r3, #0
 800492e:	637b      	str	r3, [r7, #52]	; 0x34
 8004930:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004932:	613b      	str	r3, [r7, #16]
 8004934:	693b      	ldr	r3, [r7, #16]
 8004936:	f383 8811 	msr	BASEPRI, r3
 800493a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800493c:	4618      	mov	r0, r3
 800493e:	3738      	adds	r7, #56	; 0x38
 8004940:	46bd      	mov	sp, r7
 8004942:	bd80      	pop	{r7, pc}

08004944 <xQueueGenericReceive>:
 8004944:	b580      	push	{r7, lr}
 8004946:	b08e      	sub	sp, #56	; 0x38
 8004948:	af00      	add	r7, sp, #0
 800494a:	60f8      	str	r0, [r7, #12]
 800494c:	60b9      	str	r1, [r7, #8]
 800494e:	607a      	str	r2, [r7, #4]
 8004950:	603b      	str	r3, [r7, #0]
 8004952:	2300      	movs	r3, #0
 8004954:	637b      	str	r3, [r7, #52]	; 0x34
 8004956:	68fb      	ldr	r3, [r7, #12]
 8004958:	633b      	str	r3, [r7, #48]	; 0x30
 800495a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800495c:	2b00      	cmp	r3, #0
 800495e:	d109      	bne.n	8004974 <xQueueGenericReceive+0x30>
 8004960:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004964:	f383 8811 	msr	BASEPRI, r3
 8004968:	f3bf 8f6f 	isb	sy
 800496c:	f3bf 8f4f 	dsb	sy
 8004970:	627b      	str	r3, [r7, #36]	; 0x24
 8004972:	e7fe      	b.n	8004972 <xQueueGenericReceive+0x2e>
 8004974:	68bb      	ldr	r3, [r7, #8]
 8004976:	2b00      	cmp	r3, #0
 8004978:	d103      	bne.n	8004982 <xQueueGenericReceive+0x3e>
 800497a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800497c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800497e:	2b00      	cmp	r3, #0
 8004980:	d101      	bne.n	8004986 <xQueueGenericReceive+0x42>
 8004982:	2301      	movs	r3, #1
 8004984:	e000      	b.n	8004988 <xQueueGenericReceive+0x44>
 8004986:	2300      	movs	r3, #0
 8004988:	2b00      	cmp	r3, #0
 800498a:	d109      	bne.n	80049a0 <xQueueGenericReceive+0x5c>
 800498c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004990:	f383 8811 	msr	BASEPRI, r3
 8004994:	f3bf 8f6f 	isb	sy
 8004998:	f3bf 8f4f 	dsb	sy
 800499c:	623b      	str	r3, [r7, #32]
 800499e:	e7fe      	b.n	800499e <xQueueGenericReceive+0x5a>
 80049a0:	f7fe fcae 	bl	8003300 <xTaskGetSchedulerState>
 80049a4:	4603      	mov	r3, r0
 80049a6:	2b00      	cmp	r3, #0
 80049a8:	d102      	bne.n	80049b0 <xQueueGenericReceive+0x6c>
 80049aa:	687b      	ldr	r3, [r7, #4]
 80049ac:	2b00      	cmp	r3, #0
 80049ae:	d101      	bne.n	80049b4 <xQueueGenericReceive+0x70>
 80049b0:	2301      	movs	r3, #1
 80049b2:	e000      	b.n	80049b6 <xQueueGenericReceive+0x72>
 80049b4:	2300      	movs	r3, #0
 80049b6:	2b00      	cmp	r3, #0
 80049b8:	d109      	bne.n	80049ce <xQueueGenericReceive+0x8a>
 80049ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 80049be:	f383 8811 	msr	BASEPRI, r3
 80049c2:	f3bf 8f6f 	isb	sy
 80049c6:	f3bf 8f4f 	dsb	sy
 80049ca:	61fb      	str	r3, [r7, #28]
 80049cc:	e7fe      	b.n	80049cc <xQueueGenericReceive+0x88>
 80049ce:	f7ff f9d5 	bl	8003d7c <vPortEnterCritical>
 80049d2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80049d4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80049d6:	62fb      	str	r3, [r7, #44]	; 0x2c
 80049d8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80049da:	2b00      	cmp	r3, #0
 80049dc:	d046      	beq.n	8004a6c <xQueueGenericReceive+0x128>
 80049de:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80049e0:	68db      	ldr	r3, [r3, #12]
 80049e2:	62bb      	str	r3, [r7, #40]	; 0x28
 80049e4:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80049e6:	68b9      	ldr	r1, [r7, #8]
 80049e8:	f000 f92e 	bl	8004c48 <prvCopyDataFromQueue>
 80049ec:	683b      	ldr	r3, [r7, #0]
 80049ee:	2b00      	cmp	r3, #0
 80049f0:	d121      	bne.n	8004a36 <xQueueGenericReceive+0xf2>
 80049f2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80049f4:	1e5a      	subs	r2, r3, #1
 80049f6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80049f8:	639a      	str	r2, [r3, #56]	; 0x38
 80049fa:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80049fc:	681b      	ldr	r3, [r3, #0]
 80049fe:	2b00      	cmp	r3, #0
 8004a00:	d104      	bne.n	8004a0c <xQueueGenericReceive+0xc8>
 8004a02:	f7fe fd95 	bl	8003530 <pvTaskIncrementMutexHeldCount>
 8004a06:	4602      	mov	r2, r0
 8004a08:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004a0a:	605a      	str	r2, [r3, #4]
 8004a0c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004a0e:	691b      	ldr	r3, [r3, #16]
 8004a10:	2b00      	cmp	r3, #0
 8004a12:	d027      	beq.n	8004a64 <xQueueGenericReceive+0x120>
 8004a14:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004a16:	3310      	adds	r3, #16
 8004a18:	4618      	mov	r0, r3
 8004a1a:	f7fe fabf 	bl	8002f9c <xTaskRemoveFromEventList>
 8004a1e:	4603      	mov	r3, r0
 8004a20:	2b00      	cmp	r3, #0
 8004a22:	d01f      	beq.n	8004a64 <xQueueGenericReceive+0x120>
 8004a24:	4b51      	ldr	r3, [pc, #324]	; (8004b6c <xQueueGenericReceive+0x228>)
 8004a26:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8004a2a:	601a      	str	r2, [r3, #0]
 8004a2c:	f3bf 8f4f 	dsb	sy
 8004a30:	f3bf 8f6f 	isb	sy
 8004a34:	e016      	b.n	8004a64 <xQueueGenericReceive+0x120>
 8004a36:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004a38:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8004a3a:	60da      	str	r2, [r3, #12]
 8004a3c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004a3e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a40:	2b00      	cmp	r3, #0
 8004a42:	d00f      	beq.n	8004a64 <xQueueGenericReceive+0x120>
 8004a44:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004a46:	3324      	adds	r3, #36	; 0x24
 8004a48:	4618      	mov	r0, r3
 8004a4a:	f7fe faa7 	bl	8002f9c <xTaskRemoveFromEventList>
 8004a4e:	4603      	mov	r3, r0
 8004a50:	2b00      	cmp	r3, #0
 8004a52:	d007      	beq.n	8004a64 <xQueueGenericReceive+0x120>
 8004a54:	4b45      	ldr	r3, [pc, #276]	; (8004b6c <xQueueGenericReceive+0x228>)
 8004a56:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8004a5a:	601a      	str	r2, [r3, #0]
 8004a5c:	f3bf 8f4f 	dsb	sy
 8004a60:	f3bf 8f6f 	isb	sy
 8004a64:	f7ff f9b8 	bl	8003dd8 <vPortExitCritical>
 8004a68:	2301      	movs	r3, #1
 8004a6a:	e07a      	b.n	8004b62 <xQueueGenericReceive+0x21e>
 8004a6c:	687b      	ldr	r3, [r7, #4]
 8004a6e:	2b00      	cmp	r3, #0
 8004a70:	d103      	bne.n	8004a7a <xQueueGenericReceive+0x136>
 8004a72:	f7ff f9b1 	bl	8003dd8 <vPortExitCritical>
 8004a76:	2300      	movs	r3, #0
 8004a78:	e073      	b.n	8004b62 <xQueueGenericReceive+0x21e>
 8004a7a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8004a7c:	2b00      	cmp	r3, #0
 8004a7e:	d106      	bne.n	8004a8e <xQueueGenericReceive+0x14a>
 8004a80:	f107 0314 	add.w	r3, r7, #20
 8004a84:	4618      	mov	r0, r3
 8004a86:	f7fe faeb 	bl	8003060 <vTaskSetTimeOutState>
 8004a8a:	2301      	movs	r3, #1
 8004a8c:	637b      	str	r3, [r7, #52]	; 0x34
 8004a8e:	f7ff f9a3 	bl	8003dd8 <vPortExitCritical>
 8004a92:	f7fe f843 	bl	8002b1c <vTaskSuspendAll>
 8004a96:	f7ff f971 	bl	8003d7c <vPortEnterCritical>
 8004a9a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004a9c:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8004aa0:	b2db      	uxtb	r3, r3
 8004aa2:	b25b      	sxtb	r3, r3
 8004aa4:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004aa8:	d103      	bne.n	8004ab2 <xQueueGenericReceive+0x16e>
 8004aaa:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004aac:	2200      	movs	r2, #0
 8004aae:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8004ab2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004ab4:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8004ab8:	b2db      	uxtb	r3, r3
 8004aba:	b25b      	sxtb	r3, r3
 8004abc:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004ac0:	d103      	bne.n	8004aca <xQueueGenericReceive+0x186>
 8004ac2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004ac4:	2200      	movs	r2, #0
 8004ac6:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8004aca:	f7ff f985 	bl	8003dd8 <vPortExitCritical>
 8004ace:	f107 0214 	add.w	r2, r7, #20
 8004ad2:	1d3b      	adds	r3, r7, #4
 8004ad4:	4610      	mov	r0, r2
 8004ad6:	4619      	mov	r1, r3
 8004ad8:	f7fe fae4 	bl	80030a4 <xTaskCheckForTimeOut>
 8004adc:	4603      	mov	r3, r0
 8004ade:	2b00      	cmp	r3, #0
 8004ae0:	d131      	bne.n	8004b46 <xQueueGenericReceive+0x202>
 8004ae2:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8004ae4:	f000 f926 	bl	8004d34 <prvIsQueueEmpty>
 8004ae8:	4603      	mov	r3, r0
 8004aea:	2b00      	cmp	r3, #0
 8004aec:	d025      	beq.n	8004b3a <xQueueGenericReceive+0x1f6>
 8004aee:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004af0:	681b      	ldr	r3, [r3, #0]
 8004af2:	2b00      	cmp	r3, #0
 8004af4:	d108      	bne.n	8004b08 <xQueueGenericReceive+0x1c4>
 8004af6:	f7ff f941 	bl	8003d7c <vPortEnterCritical>
 8004afa:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004afc:	685b      	ldr	r3, [r3, #4]
 8004afe:	4618      	mov	r0, r3
 8004b00:	f7fe fc1c 	bl	800333c <vTaskPriorityInherit>
 8004b04:	f7ff f968 	bl	8003dd8 <vPortExitCritical>
 8004b08:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004b0a:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8004b0e:	687b      	ldr	r3, [r7, #4]
 8004b10:	4610      	mov	r0, r2
 8004b12:	4619      	mov	r1, r3
 8004b14:	f7fe f9f6 	bl	8002f04 <vTaskPlaceOnEventList>
 8004b18:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8004b1a:	f000 f8bb 	bl	8004c94 <prvUnlockQueue>
 8004b1e:	f7fe f80b 	bl	8002b38 <xTaskResumeAll>
 8004b22:	4603      	mov	r3, r0
 8004b24:	2b00      	cmp	r3, #0
 8004b26:	d11b      	bne.n	8004b60 <xQueueGenericReceive+0x21c>
 8004b28:	4b10      	ldr	r3, [pc, #64]	; (8004b6c <xQueueGenericReceive+0x228>)
 8004b2a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8004b2e:	601a      	str	r2, [r3, #0]
 8004b30:	f3bf 8f4f 	dsb	sy
 8004b34:	f3bf 8f6f 	isb	sy
 8004b38:	e012      	b.n	8004b60 <xQueueGenericReceive+0x21c>
 8004b3a:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8004b3c:	f000 f8aa 	bl	8004c94 <prvUnlockQueue>
 8004b40:	f7fd fffa 	bl	8002b38 <xTaskResumeAll>
 8004b44:	e743      	b.n	80049ce <xQueueGenericReceive+0x8a>
 8004b46:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8004b48:	f000 f8a4 	bl	8004c94 <prvUnlockQueue>
 8004b4c:	f7fd fff4 	bl	8002b38 <xTaskResumeAll>
 8004b50:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8004b52:	f000 f8ef 	bl	8004d34 <prvIsQueueEmpty>
 8004b56:	4603      	mov	r3, r0
 8004b58:	2b00      	cmp	r3, #0
 8004b5a:	d001      	beq.n	8004b60 <xQueueGenericReceive+0x21c>
 8004b5c:	2300      	movs	r3, #0
 8004b5e:	e000      	b.n	8004b62 <xQueueGenericReceive+0x21e>
 8004b60:	e735      	b.n	80049ce <xQueueGenericReceive+0x8a>
 8004b62:	4618      	mov	r0, r3
 8004b64:	3738      	adds	r7, #56	; 0x38
 8004b66:	46bd      	mov	sp, r7
 8004b68:	bd80      	pop	{r7, pc}
 8004b6a:	bf00      	nop
 8004b6c:	e000ed04 	.word	0xe000ed04

08004b70 <prvCopyDataToQueue>:
 8004b70:	b580      	push	{r7, lr}
 8004b72:	b086      	sub	sp, #24
 8004b74:	af00      	add	r7, sp, #0
 8004b76:	60f8      	str	r0, [r7, #12]
 8004b78:	60b9      	str	r1, [r7, #8]
 8004b7a:	607a      	str	r2, [r7, #4]
 8004b7c:	2300      	movs	r3, #0
 8004b7e:	617b      	str	r3, [r7, #20]
 8004b80:	68fb      	ldr	r3, [r7, #12]
 8004b82:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004b84:	613b      	str	r3, [r7, #16]
 8004b86:	68fb      	ldr	r3, [r7, #12]
 8004b88:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004b8a:	2b00      	cmp	r3, #0
 8004b8c:	d10d      	bne.n	8004baa <prvCopyDataToQueue+0x3a>
 8004b8e:	68fb      	ldr	r3, [r7, #12]
 8004b90:	681b      	ldr	r3, [r3, #0]
 8004b92:	2b00      	cmp	r3, #0
 8004b94:	d14f      	bne.n	8004c36 <prvCopyDataToQueue+0xc6>
 8004b96:	68fb      	ldr	r3, [r7, #12]
 8004b98:	685b      	ldr	r3, [r3, #4]
 8004b9a:	4618      	mov	r0, r3
 8004b9c:	f7fe fc44 	bl	8003428 <xTaskPriorityDisinherit>
 8004ba0:	6178      	str	r0, [r7, #20]
 8004ba2:	68fb      	ldr	r3, [r7, #12]
 8004ba4:	2200      	movs	r2, #0
 8004ba6:	605a      	str	r2, [r3, #4]
 8004ba8:	e045      	b.n	8004c36 <prvCopyDataToQueue+0xc6>
 8004baa:	687b      	ldr	r3, [r7, #4]
 8004bac:	2b00      	cmp	r3, #0
 8004bae:	d11a      	bne.n	8004be6 <prvCopyDataToQueue+0x76>
 8004bb0:	68fb      	ldr	r3, [r7, #12]
 8004bb2:	689a      	ldr	r2, [r3, #8]
 8004bb4:	68fb      	ldr	r3, [r7, #12]
 8004bb6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004bb8:	4610      	mov	r0, r2
 8004bba:	68b9      	ldr	r1, [r7, #8]
 8004bbc:	461a      	mov	r2, r3
 8004bbe:	f000 f945 	bl	8004e4c <memcpy>
 8004bc2:	68fb      	ldr	r3, [r7, #12]
 8004bc4:	689a      	ldr	r2, [r3, #8]
 8004bc6:	68fb      	ldr	r3, [r7, #12]
 8004bc8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004bca:	441a      	add	r2, r3
 8004bcc:	68fb      	ldr	r3, [r7, #12]
 8004bce:	609a      	str	r2, [r3, #8]
 8004bd0:	68fb      	ldr	r3, [r7, #12]
 8004bd2:	689a      	ldr	r2, [r3, #8]
 8004bd4:	68fb      	ldr	r3, [r7, #12]
 8004bd6:	685b      	ldr	r3, [r3, #4]
 8004bd8:	429a      	cmp	r2, r3
 8004bda:	d32c      	bcc.n	8004c36 <prvCopyDataToQueue+0xc6>
 8004bdc:	68fb      	ldr	r3, [r7, #12]
 8004bde:	681a      	ldr	r2, [r3, #0]
 8004be0:	68fb      	ldr	r3, [r7, #12]
 8004be2:	609a      	str	r2, [r3, #8]
 8004be4:	e027      	b.n	8004c36 <prvCopyDataToQueue+0xc6>
 8004be6:	68fb      	ldr	r3, [r7, #12]
 8004be8:	68da      	ldr	r2, [r3, #12]
 8004bea:	68fb      	ldr	r3, [r7, #12]
 8004bec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004bee:	4610      	mov	r0, r2
 8004bf0:	68b9      	ldr	r1, [r7, #8]
 8004bf2:	461a      	mov	r2, r3
 8004bf4:	f000 f92a 	bl	8004e4c <memcpy>
 8004bf8:	68fb      	ldr	r3, [r7, #12]
 8004bfa:	68da      	ldr	r2, [r3, #12]
 8004bfc:	68fb      	ldr	r3, [r7, #12]
 8004bfe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004c00:	425b      	negs	r3, r3
 8004c02:	441a      	add	r2, r3
 8004c04:	68fb      	ldr	r3, [r7, #12]
 8004c06:	60da      	str	r2, [r3, #12]
 8004c08:	68fb      	ldr	r3, [r7, #12]
 8004c0a:	68da      	ldr	r2, [r3, #12]
 8004c0c:	68fb      	ldr	r3, [r7, #12]
 8004c0e:	681b      	ldr	r3, [r3, #0]
 8004c10:	429a      	cmp	r2, r3
 8004c12:	d207      	bcs.n	8004c24 <prvCopyDataToQueue+0xb4>
 8004c14:	68fb      	ldr	r3, [r7, #12]
 8004c16:	685a      	ldr	r2, [r3, #4]
 8004c18:	68fb      	ldr	r3, [r7, #12]
 8004c1a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004c1c:	425b      	negs	r3, r3
 8004c1e:	441a      	add	r2, r3
 8004c20:	68fb      	ldr	r3, [r7, #12]
 8004c22:	60da      	str	r2, [r3, #12]
 8004c24:	687b      	ldr	r3, [r7, #4]
 8004c26:	2b02      	cmp	r3, #2
 8004c28:	d105      	bne.n	8004c36 <prvCopyDataToQueue+0xc6>
 8004c2a:	693b      	ldr	r3, [r7, #16]
 8004c2c:	2b00      	cmp	r3, #0
 8004c2e:	d002      	beq.n	8004c36 <prvCopyDataToQueue+0xc6>
 8004c30:	693b      	ldr	r3, [r7, #16]
 8004c32:	3b01      	subs	r3, #1
 8004c34:	613b      	str	r3, [r7, #16]
 8004c36:	693b      	ldr	r3, [r7, #16]
 8004c38:	1c5a      	adds	r2, r3, #1
 8004c3a:	68fb      	ldr	r3, [r7, #12]
 8004c3c:	639a      	str	r2, [r3, #56]	; 0x38
 8004c3e:	697b      	ldr	r3, [r7, #20]
 8004c40:	4618      	mov	r0, r3
 8004c42:	3718      	adds	r7, #24
 8004c44:	46bd      	mov	sp, r7
 8004c46:	bd80      	pop	{r7, pc}

08004c48 <prvCopyDataFromQueue>:
 8004c48:	b580      	push	{r7, lr}
 8004c4a:	b082      	sub	sp, #8
 8004c4c:	af00      	add	r7, sp, #0
 8004c4e:	6078      	str	r0, [r7, #4]
 8004c50:	6039      	str	r1, [r7, #0]
 8004c52:	687b      	ldr	r3, [r7, #4]
 8004c54:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004c56:	2b00      	cmp	r3, #0
 8004c58:	d019      	beq.n	8004c8e <prvCopyDataFromQueue+0x46>
 8004c5a:	687b      	ldr	r3, [r7, #4]
 8004c5c:	68da      	ldr	r2, [r3, #12]
 8004c5e:	687b      	ldr	r3, [r7, #4]
 8004c60:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004c62:	441a      	add	r2, r3
 8004c64:	687b      	ldr	r3, [r7, #4]
 8004c66:	60da      	str	r2, [r3, #12]
 8004c68:	687b      	ldr	r3, [r7, #4]
 8004c6a:	68da      	ldr	r2, [r3, #12]
 8004c6c:	687b      	ldr	r3, [r7, #4]
 8004c6e:	685b      	ldr	r3, [r3, #4]
 8004c70:	429a      	cmp	r2, r3
 8004c72:	d303      	bcc.n	8004c7c <prvCopyDataFromQueue+0x34>
 8004c74:	687b      	ldr	r3, [r7, #4]
 8004c76:	681a      	ldr	r2, [r3, #0]
 8004c78:	687b      	ldr	r3, [r7, #4]
 8004c7a:	60da      	str	r2, [r3, #12]
 8004c7c:	687b      	ldr	r3, [r7, #4]
 8004c7e:	68da      	ldr	r2, [r3, #12]
 8004c80:	687b      	ldr	r3, [r7, #4]
 8004c82:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004c84:	6838      	ldr	r0, [r7, #0]
 8004c86:	4611      	mov	r1, r2
 8004c88:	461a      	mov	r2, r3
 8004c8a:	f000 f8df 	bl	8004e4c <memcpy>
 8004c8e:	3708      	adds	r7, #8
 8004c90:	46bd      	mov	sp, r7
 8004c92:	bd80      	pop	{r7, pc}

08004c94 <prvUnlockQueue>:
 8004c94:	b580      	push	{r7, lr}
 8004c96:	b084      	sub	sp, #16
 8004c98:	af00      	add	r7, sp, #0
 8004c9a:	6078      	str	r0, [r7, #4]
 8004c9c:	f7ff f86e 	bl	8003d7c <vPortEnterCritical>
 8004ca0:	687b      	ldr	r3, [r7, #4]
 8004ca2:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8004ca6:	73fb      	strb	r3, [r7, #15]
 8004ca8:	e012      	b.n	8004cd0 <prvUnlockQueue+0x3c>
 8004caa:	687b      	ldr	r3, [r7, #4]
 8004cac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004cae:	2b00      	cmp	r3, #0
 8004cb0:	d00a      	beq.n	8004cc8 <prvUnlockQueue+0x34>
 8004cb2:	687b      	ldr	r3, [r7, #4]
 8004cb4:	3324      	adds	r3, #36	; 0x24
 8004cb6:	4618      	mov	r0, r3
 8004cb8:	f7fe f970 	bl	8002f9c <xTaskRemoveFromEventList>
 8004cbc:	4603      	mov	r3, r0
 8004cbe:	2b00      	cmp	r3, #0
 8004cc0:	d003      	beq.n	8004cca <prvUnlockQueue+0x36>
 8004cc2:	f7fe fa4d 	bl	8003160 <vTaskMissedYield>
 8004cc6:	e000      	b.n	8004cca <prvUnlockQueue+0x36>
 8004cc8:	e006      	b.n	8004cd8 <prvUnlockQueue+0x44>
 8004cca:	7bfb      	ldrb	r3, [r7, #15]
 8004ccc:	3b01      	subs	r3, #1
 8004cce:	73fb      	strb	r3, [r7, #15]
 8004cd0:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8004cd4:	2b00      	cmp	r3, #0
 8004cd6:	dce8      	bgt.n	8004caa <prvUnlockQueue+0x16>
 8004cd8:	687b      	ldr	r3, [r7, #4]
 8004cda:	22ff      	movs	r2, #255	; 0xff
 8004cdc:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8004ce0:	f7ff f87a 	bl	8003dd8 <vPortExitCritical>
 8004ce4:	f7ff f84a 	bl	8003d7c <vPortEnterCritical>
 8004ce8:	687b      	ldr	r3, [r7, #4]
 8004cea:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8004cee:	73bb      	strb	r3, [r7, #14]
 8004cf0:	e012      	b.n	8004d18 <prvUnlockQueue+0x84>
 8004cf2:	687b      	ldr	r3, [r7, #4]
 8004cf4:	691b      	ldr	r3, [r3, #16]
 8004cf6:	2b00      	cmp	r3, #0
 8004cf8:	d00d      	beq.n	8004d16 <prvUnlockQueue+0x82>
 8004cfa:	687b      	ldr	r3, [r7, #4]
 8004cfc:	3310      	adds	r3, #16
 8004cfe:	4618      	mov	r0, r3
 8004d00:	f7fe f94c 	bl	8002f9c <xTaskRemoveFromEventList>
 8004d04:	4603      	mov	r3, r0
 8004d06:	2b00      	cmp	r3, #0
 8004d08:	d001      	beq.n	8004d0e <prvUnlockQueue+0x7a>
 8004d0a:	f7fe fa29 	bl	8003160 <vTaskMissedYield>
 8004d0e:	7bbb      	ldrb	r3, [r7, #14]
 8004d10:	3b01      	subs	r3, #1
 8004d12:	73bb      	strb	r3, [r7, #14]
 8004d14:	e000      	b.n	8004d18 <prvUnlockQueue+0x84>
 8004d16:	e003      	b.n	8004d20 <prvUnlockQueue+0x8c>
 8004d18:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8004d1c:	2b00      	cmp	r3, #0
 8004d1e:	dce8      	bgt.n	8004cf2 <prvUnlockQueue+0x5e>
 8004d20:	687b      	ldr	r3, [r7, #4]
 8004d22:	22ff      	movs	r2, #255	; 0xff
 8004d24:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8004d28:	f7ff f856 	bl	8003dd8 <vPortExitCritical>
 8004d2c:	3710      	adds	r7, #16
 8004d2e:	46bd      	mov	sp, r7
 8004d30:	bd80      	pop	{r7, pc}
 8004d32:	bf00      	nop

08004d34 <prvIsQueueEmpty>:
 8004d34:	b580      	push	{r7, lr}
 8004d36:	b084      	sub	sp, #16
 8004d38:	af00      	add	r7, sp, #0
 8004d3a:	6078      	str	r0, [r7, #4]
 8004d3c:	f7ff f81e 	bl	8003d7c <vPortEnterCritical>
 8004d40:	687b      	ldr	r3, [r7, #4]
 8004d42:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004d44:	2b00      	cmp	r3, #0
 8004d46:	d102      	bne.n	8004d4e <prvIsQueueEmpty+0x1a>
 8004d48:	2301      	movs	r3, #1
 8004d4a:	60fb      	str	r3, [r7, #12]
 8004d4c:	e001      	b.n	8004d52 <prvIsQueueEmpty+0x1e>
 8004d4e:	2300      	movs	r3, #0
 8004d50:	60fb      	str	r3, [r7, #12]
 8004d52:	f7ff f841 	bl	8003dd8 <vPortExitCritical>
 8004d56:	68fb      	ldr	r3, [r7, #12]
 8004d58:	4618      	mov	r0, r3
 8004d5a:	3710      	adds	r7, #16
 8004d5c:	46bd      	mov	sp, r7
 8004d5e:	bd80      	pop	{r7, pc}

08004d60 <prvIsQueueFull>:
 8004d60:	b580      	push	{r7, lr}
 8004d62:	b084      	sub	sp, #16
 8004d64:	af00      	add	r7, sp, #0
 8004d66:	6078      	str	r0, [r7, #4]
 8004d68:	f7ff f808 	bl	8003d7c <vPortEnterCritical>
 8004d6c:	687b      	ldr	r3, [r7, #4]
 8004d6e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8004d70:	687b      	ldr	r3, [r7, #4]
 8004d72:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004d74:	429a      	cmp	r2, r3
 8004d76:	d102      	bne.n	8004d7e <prvIsQueueFull+0x1e>
 8004d78:	2301      	movs	r3, #1
 8004d7a:	60fb      	str	r3, [r7, #12]
 8004d7c:	e001      	b.n	8004d82 <prvIsQueueFull+0x22>
 8004d7e:	2300      	movs	r3, #0
 8004d80:	60fb      	str	r3, [r7, #12]
 8004d82:	f7ff f829 	bl	8003dd8 <vPortExitCritical>
 8004d86:	68fb      	ldr	r3, [r7, #12]
 8004d88:	4618      	mov	r0, r3
 8004d8a:	3710      	adds	r7, #16
 8004d8c:	46bd      	mov	sp, r7
 8004d8e:	bd80      	pop	{r7, pc}

08004d90 <vQueueAddToRegistry>:
 8004d90:	b480      	push	{r7}
 8004d92:	b085      	sub	sp, #20
 8004d94:	af00      	add	r7, sp, #0
 8004d96:	6078      	str	r0, [r7, #4]
 8004d98:	6039      	str	r1, [r7, #0]
 8004d9a:	2300      	movs	r3, #0
 8004d9c:	60fb      	str	r3, [r7, #12]
 8004d9e:	e014      	b.n	8004dca <vQueueAddToRegistry+0x3a>
 8004da0:	4b0e      	ldr	r3, [pc, #56]	; (8004ddc <vQueueAddToRegistry+0x4c>)
 8004da2:	68fa      	ldr	r2, [r7, #12]
 8004da4:	f853 3032 	ldr.w	r3, [r3, r2, lsl #3]
 8004da8:	2b00      	cmp	r3, #0
 8004daa:	d10b      	bne.n	8004dc4 <vQueueAddToRegistry+0x34>
 8004dac:	4b0b      	ldr	r3, [pc, #44]	; (8004ddc <vQueueAddToRegistry+0x4c>)
 8004dae:	68fa      	ldr	r2, [r7, #12]
 8004db0:	6839      	ldr	r1, [r7, #0]
 8004db2:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
 8004db6:	4a09      	ldr	r2, [pc, #36]	; (8004ddc <vQueueAddToRegistry+0x4c>)
 8004db8:	68fb      	ldr	r3, [r7, #12]
 8004dba:	00db      	lsls	r3, r3, #3
 8004dbc:	4413      	add	r3, r2
 8004dbe:	687a      	ldr	r2, [r7, #4]
 8004dc0:	605a      	str	r2, [r3, #4]
 8004dc2:	e005      	b.n	8004dd0 <vQueueAddToRegistry+0x40>
 8004dc4:	68fb      	ldr	r3, [r7, #12]
 8004dc6:	3301      	adds	r3, #1
 8004dc8:	60fb      	str	r3, [r7, #12]
 8004dca:	68fb      	ldr	r3, [r7, #12]
 8004dcc:	2b07      	cmp	r3, #7
 8004dce:	d9e7      	bls.n	8004da0 <vQueueAddToRegistry+0x10>
 8004dd0:	3714      	adds	r7, #20
 8004dd2:	46bd      	mov	sp, r7
 8004dd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004dd8:	4770      	bx	lr
 8004dda:	bf00      	nop
 8004ddc:	20013d48 	.word	0x20013d48

08004de0 <vQueueWaitForMessageRestricted>:
 8004de0:	b580      	push	{r7, lr}
 8004de2:	b086      	sub	sp, #24
 8004de4:	af00      	add	r7, sp, #0
 8004de6:	60f8      	str	r0, [r7, #12]
 8004de8:	60b9      	str	r1, [r7, #8]
 8004dea:	607a      	str	r2, [r7, #4]
 8004dec:	68fb      	ldr	r3, [r7, #12]
 8004dee:	617b      	str	r3, [r7, #20]
 8004df0:	f7fe ffc4 	bl	8003d7c <vPortEnterCritical>
 8004df4:	697b      	ldr	r3, [r7, #20]
 8004df6:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8004dfa:	b2db      	uxtb	r3, r3
 8004dfc:	b25b      	sxtb	r3, r3
 8004dfe:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004e02:	d103      	bne.n	8004e0c <vQueueWaitForMessageRestricted+0x2c>
 8004e04:	697b      	ldr	r3, [r7, #20]
 8004e06:	2200      	movs	r2, #0
 8004e08:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8004e0c:	697b      	ldr	r3, [r7, #20]
 8004e0e:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8004e12:	b2db      	uxtb	r3, r3
 8004e14:	b25b      	sxtb	r3, r3
 8004e16:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004e1a:	d103      	bne.n	8004e24 <vQueueWaitForMessageRestricted+0x44>
 8004e1c:	697b      	ldr	r3, [r7, #20]
 8004e1e:	2200      	movs	r2, #0
 8004e20:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8004e24:	f7fe ffd8 	bl	8003dd8 <vPortExitCritical>
 8004e28:	697b      	ldr	r3, [r7, #20]
 8004e2a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004e2c:	2b00      	cmp	r3, #0
 8004e2e:	d106      	bne.n	8004e3e <vQueueWaitForMessageRestricted+0x5e>
 8004e30:	697b      	ldr	r3, [r7, #20]
 8004e32:	3324      	adds	r3, #36	; 0x24
 8004e34:	4618      	mov	r0, r3
 8004e36:	68b9      	ldr	r1, [r7, #8]
 8004e38:	687a      	ldr	r2, [r7, #4]
 8004e3a:	f7fe f885 	bl	8002f48 <vTaskPlaceOnEventListRestricted>
 8004e3e:	6978      	ldr	r0, [r7, #20]
 8004e40:	f7ff ff28 	bl	8004c94 <prvUnlockQueue>
 8004e44:	3718      	adds	r7, #24
 8004e46:	46bd      	mov	sp, r7
 8004e48:	bd80      	pop	{r7, pc}
 8004e4a:	bf00      	nop

08004e4c <memcpy>:
 8004e4c:	b510      	push	{r4, lr}
 8004e4e:	1e43      	subs	r3, r0, #1
 8004e50:	440a      	add	r2, r1
 8004e52:	4291      	cmp	r1, r2
 8004e54:	d004      	beq.n	8004e60 <memcpy+0x14>
 8004e56:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004e5a:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004e5e:	e7f8      	b.n	8004e52 <memcpy+0x6>
 8004e60:	bd10      	pop	{r4, pc}

08004e62 <memset>:
 8004e62:	4402      	add	r2, r0
 8004e64:	4603      	mov	r3, r0
 8004e66:	4293      	cmp	r3, r2
 8004e68:	d002      	beq.n	8004e70 <memset+0xe>
 8004e6a:	f803 1b01 	strb.w	r1, [r3], #1
 8004e6e:	e7fa      	b.n	8004e66 <memset+0x4>
 8004e70:	4770      	bx	lr
 8004e72:	0000      	movs	r0, r0
 8004e74:	53425a45 	.word	0x53425a45
 8004e78:	31552059 	.word	0x31552059
 8004e7c:	00003441 	.word	0x00003441
 8004e80:	74747542 	.word	0x74747542
 8004e84:	20736e6f 	.word	0x20736e6f
 8004e88:	6425203d 	.word	0x6425203d
 8004e8c:	00000000 	.word	0x00000000
 8004e90:	74697753 	.word	0x74697753
 8004e94:	73656863 	.word	0x73656863
 8004e98:	25203d20 	.word	0x25203d20
 8004e9c:	00000064 	.word	0x00000064
 8004ea0:	74697753 	.word	0x74697753
 8004ea4:	00006863 	.word	0x00006863
 8004ea8:	74747542 	.word	0x74747542
 8004eac:	00006e6f 	.word	0x00006e6f
 8004eb0:	0044434c 	.word	0x0044434c
 8004eb4:	0000631b 	.word	0x0000631b
 8004eb8:	4a325b1b 	.word	0x4a325b1b
 8004ebc:	00000000 	.word	0x00000000
 8004ec0:	323f5b1b 	.word	0x323f5b1b
 8004ec4:	00006c35 	.word	0x00006c35
 8004ec8:	636c6557 	.word	0x636c6557
 8004ecc:	20656d6f 	.word	0x20656d6f
 8004ed0:	43206f74 	.word	0x43206f74
 8004ed4:	454d5241 	.word	0x454d5241
 8004ed8:	20344d2d 	.word	0x20344d2d
 8004edc:	65657246 	.word	0x65657246
 8004ee0:	534f5452 	.word	0x534f5452
 8004ee4:	0000000d 	.word	0x0000000d
 8004ee8:	20202020 	.word	0x20202020
 8004eec:	20202020 	.word	0x20202020
 8004ef0:	20202020 	.word	0x20202020
 8004ef4:	00002020 	.word	0x00002020
 8004ef8:	40021400 	.word	0x40021400
 8004efc:	0c020001 	.word	0x0c020001
 8004f00:	40021400 	.word	0x40021400
 8004f04:	0c020002 	.word	0x0c020002
 8004f08:	40021400 	.word	0x40021400
 8004f0c:	0c020004 	.word	0x0c020004
 8004f10:	40021400 	.word	0x40021400
 8004f14:	0c020008 	.word	0x0c020008
 8004f18:	40021400 	.word	0x40021400
 8004f1c:	0c020010 	.word	0x0c020010
 8004f20:	40021400 	.word	0x40021400
 8004f24:	0c020020 	.word	0x0c020020
 8004f28:	40021400 	.word	0x40021400
 8004f2c:	0c021000 	.word	0x0c021000
 8004f30:	40021400 	.word	0x40021400
 8004f34:	0c022000 	.word	0x0c022000
 8004f38:	40021400 	.word	0x40021400
 8004f3c:	0c024000 	.word	0x0c024000
 8004f40:	40021400 	.word	0x40021400
 8004f44:	0c028000 	.word	0x0c028000
 8004f48:	40021800 	.word	0x40021800
 8004f4c:	0c020001 	.word	0x0c020001
 8004f50:	40021800 	.word	0x40021800
 8004f54:	0c020002 	.word	0x0c020002
 8004f58:	40021800 	.word	0x40021800
 8004f5c:	0c020004 	.word	0x0c020004
 8004f60:	40021800 	.word	0x40021800
 8004f64:	0c020008 	.word	0x0c020008
 8004f68:	40021800 	.word	0x40021800
 8004f6c:	0c020010 	.word	0x0c020010
 8004f70:	40021800 	.word	0x40021800
 8004f74:	0c020020 	.word	0x0c020020
 8004f78:	40020c00 	.word	0x40020c00
 8004f7c:	0c020800 	.word	0x0c020800
 8004f80:	40020c00 	.word	0x40020c00
 8004f84:	0c021000 	.word	0x0c021000
 8004f88:	40020c00 	.word	0x40020c00
 8004f8c:	0c022000 	.word	0x0c022000
 8004f90:	40021000 	.word	0x40021000
 8004f94:	0c020008 	.word	0x0c020008
 8004f98:	40021000 	.word	0x40021000
 8004f9c:	0c020010 	.word	0x0c020010
 8004fa0:	40021000 	.word	0x40021000
 8004fa4:	0c020020 	.word	0x0c020020
 8004fa8:	40021000 	.word	0x40021000
 8004fac:	0c020040 	.word	0x0c020040
 8004fb0:	40021000 	.word	0x40021000
 8004fb4:	0c020004 	.word	0x0c020004
 8004fb8:	40021800 	.word	0x40021800
 8004fbc:	0c022000 	.word	0x0c022000
 8004fc0:	40021800 	.word	0x40021800
 8004fc4:	0c024000 	.word	0x0c024000
 8004fc8:	40020c00 	.word	0x40020c00
 8004fcc:	0c024000 	.word	0x0c024000
 8004fd0:	40020c00 	.word	0x40020c00
 8004fd4:	0c028000 	.word	0x0c028000
 8004fd8:	40020c00 	.word	0x40020c00
 8004fdc:	0c020001 	.word	0x0c020001
 8004fe0:	40020c00 	.word	0x40020c00
 8004fe4:	0c020002 	.word	0x0c020002
 8004fe8:	40021000 	.word	0x40021000
 8004fec:	0c020080 	.word	0x0c020080
 8004ff0:	40021000 	.word	0x40021000
 8004ff4:	0c020100 	.word	0x0c020100
 8004ff8:	40021000 	.word	0x40021000
 8004ffc:	0c020200 	.word	0x0c020200
 8005000:	40021000 	.word	0x40021000
 8005004:	0c020400 	.word	0x0c020400
 8005008:	40021000 	.word	0x40021000
 800500c:	0c020800 	.word	0x0c020800
 8005010:	40021000 	.word	0x40021000
 8005014:	0c021000 	.word	0x0c021000
 8005018:	40021000 	.word	0x40021000
 800501c:	0c022000 	.word	0x0c022000
 8005020:	40021000 	.word	0x40021000
 8005024:	0c024000 	.word	0x0c024000
 8005028:	40021000 	.word	0x40021000
 800502c:	0c028000 	.word	0x0c028000
 8005030:	40020c00 	.word	0x40020c00
 8005034:	0c020100 	.word	0x0c020100
 8005038:	40020c00 	.word	0x40020c00
 800503c:	0c020200 	.word	0x0c020200
 8005040:	40020c00 	.word	0x40020c00
 8005044:	0c020400 	.word	0x0c020400
 8005048:	40020c00 	.word	0x40020c00
 800504c:	0c020080 	.word	0x0c020080
 8005050:	40021800 	.word	0x40021800
 8005054:	0c020200 	.word	0x0c020200
 8005058:	40021800 	.word	0x40021800
 800505c:	0c020400 	.word	0x0c020400
 8005060:	40021800 	.word	0x40021800
 8005064:	0c021000 	.word	0x0c021000
 8005068:	40020400 	.word	0x40020400
 800506c:	0c020080 	.word	0x0c020080
 8005070:	40020c00 	.word	0x40020c00
 8005074:	0c020008 	.word	0x0c020008
 8005078:	40020c00 	.word	0x40020c00
 800507c:	0c020010 	.word	0x0c020010
 8005080:	40020c00 	.word	0x40020c00
 8005084:	0c020020 	.word	0x0c020020
 8005088:	40020c00 	.word	0x40020c00
 800508c:	0c020040 	.word	0x0c020040
 8005090:	40021000 	.word	0x40021000
 8005094:	0c020001 	.word	0x0c020001
 8005098:	40021000 	.word	0x40021000
 800509c:	0c020002 	.word	0x0c020002
 80050a0:	454c4449 	.word	0x454c4449
 80050a4:	00000000 	.word	0x00000000
 80050a8:	20726d54 	.word	0x20726d54
 80050ac:	00637653 	.word	0x00637653
 80050b0:	51726d54 	.word	0x51726d54
 80050b4:	00000000 	.word	0x00000000

080050b8 <_init>:
 80050b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80050ba:	bf00      	nop
 80050bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80050be:	bc08      	pop	{r3}
 80050c0:	469e      	mov	lr, r3
 80050c2:	4770      	bx	lr

080050c4 <_fini>:
 80050c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80050c6:	bf00      	nop
 80050c8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80050ca:	bc08      	pop	{r3}
 80050cc:	469e      	mov	lr, r3
 80050ce:	4770      	bx	lr
